{"expireTime":9007200864531304000,"key":"gatsby-plugin-mdx-entire-payload-bf45f8f2d5a2e75c289ad69da273aa40-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Abstract","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":11,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":11,"offset":11},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These are my notes from reading ","position":{"start":{"line":3,"column":1,"offset":12},"end":{"line":3,"column":33,"offset":44},"indent":[]}},{"type":"link","title":null,"url":"https://smile.amazon.com/Kubernetes-Running-Dive-Future-Infrastructure/dp/1491935677","children":[{"type":"emphasis","children":[{"type":"text","value":"Kubernetes Up & Running","position":{"start":{"line":3,"column":35,"offset":46},"end":{"line":3,"column":58,"offset":69},"indent":[]}}],"position":{"start":{"line":3,"column":34,"offset":45},"end":{"line":3,"column":59,"offset":70},"indent":[]}}],"position":{"start":{"line":3,"column":33,"offset":44},"end":{"line":3,"column":146,"offset":157},"indent":[]}},{"type":"text","value":" by Kelsey Hightower, Brendan Burns, and Joe Beda. Kelsey Hightower is a Staff Developer Advocate for the Google Cloud Platform. Brendan Burns is a Distinguished Engineer in Microsoft Azure and cofounded the Kubernetes project at Google. Joe Beda is the CTO of Heptio and cofounded the Kubernetes project, as well as Google Compute Engine.  ","position":{"start":{"line":3,"column":146,"offset":157},"end":{"line":3,"column":487,"offset":498},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":12},"end":{"line":3,"column":487,"offset":498},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is a phenomenal book that covers both the whys and hows of ","position":{"start":{"line":5,"column":1,"offset":500},"end":{"line":5,"column":65,"offset":564},"indent":[]}},{"type":"link","title":null,"url":"https://kubernetes.io/","children":[{"type":"text","value":"Kubernetes","position":{"start":{"line":5,"column":66,"offset":565},"end":{"line":5,"column":76,"offset":575},"indent":[]}}],"position":{"start":{"line":5,"column":65,"offset":564},"end":{"line":5,"column":101,"offset":600},"indent":[]}},{"type":"text","value":". I read the 1st edition, but a 2nd edition is coming out soon. I'm using this as study material for my ","position":{"start":{"line":5,"column":101,"offset":600},"end":{"line":5,"column":205,"offset":704},"indent":[]}},{"type":"link","title":null,"url":"https://www.cncf.io/certification/ckad/","children":[{"type":"text","value":"CKAD","position":{"start":{"line":5,"column":206,"offset":705},"end":{"line":5,"column":210,"offset":709},"indent":[]}}],"position":{"start":{"line":5,"column":205,"offset":704},"end":{"line":5,"column":252,"offset":751},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":5,"column":252,"offset":751},"end":{"line":5,"column":257,"offset":756},"indent":[]}},{"type":"link","title":null,"url":"https://training.linuxfoundation.org/certification/certified-kubernetes-administrator-cka/","children":[{"type":"text","value":"CKA","position":{"start":{"line":5,"column":258,"offset":757},"end":{"line":5,"column":261,"offset":760},"indent":[]}}],"position":{"start":{"line":5,"column":257,"offset":756},"end":{"line":5,"column":354,"offset":853},"indent":[]}},{"type":"text","value":" certifications.  ","position":{"start":{"line":5,"column":354,"offset":853},"end":{"line":5,"column":372,"offset":871},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":500},"end":{"line":5,"column":372,"offset":871},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This article is part of a series. You can read ","position":{"start":{"line":7,"column":1,"offset":873},"end":{"line":7,"column":48,"offset":920},"indent":[]}},{"type":"linkReference","identifier":"part 1","label":"Part 1","referenceType":"shortcut","children":[{"type":"text","value":"Part 1","position":{"start":{"line":7,"column":49,"offset":921},"end":{"line":7,"column":55,"offset":927},"indent":[]}}],"position":{"start":{"line":7,"column":48,"offset":920},"end":{"line":7,"column":56,"offset":928},"indent":[]}},{"type":"text","value":"({{ site.baseurl }}{% link _posts/2019-09-08-kuar-part1.md %}), ","position":{"start":{"line":7,"column":56,"offset":928},"end":{"line":7,"column":120,"offset":992},"indent":[]}},{"type":"linkReference","identifier":"part 2","label":"Part 2","referenceType":"shortcut","children":[{"type":"text","value":"Part 2","position":{"start":{"line":7,"column":121,"offset":993},"end":{"line":7,"column":127,"offset":999},"indent":[]}}],"position":{"start":{"line":7,"column":120,"offset":992},"end":{"line":7,"column":128,"offset":1000},"indent":[]}},{"type":"text","value":"({{ site.baseurl }}{% link _posts/2019-09-09-kuar-part2.md %}), and ","position":{"start":{"line":7,"column":128,"offset":1000},"end":{"line":7,"column":196,"offset":1068},"indent":[]}},{"type":"linkReference","identifier":"part 3","label":"Part 3","referenceType":"shortcut","children":[{"type":"text","value":"Part 3","position":{"start":{"line":7,"column":197,"offset":1069},"end":{"line":7,"column":203,"offset":1075},"indent":[]}}],"position":{"start":{"line":7,"column":196,"offset":1068},"end":{"line":7,"column":204,"offset":1076},"indent":[]}},{"type":"text","value":"({{ site.baseurl }}{% link _posts/2019-09-12-kuar-part3.md %}).","position":{"start":{"line":7,"column":204,"offset":1076},"end":{"line":7,"column":267,"offset":1139},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":873},"end":{"line":7,"column":267,"offset":1139},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":9,"column":1,"offset":1141},"end":{"line":9,"column":4,"offset":1144},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Chapter 12: Deployments","position":{"start":{"line":10,"column":4,"offset":1148},"end":{"line":10,"column":27,"offset":1171},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":1145},"end":{"line":10,"column":27,"offset":1171},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Much like how ReplicaSets manage the Pods beneath them, the ","position":{"start":{"line":11,"column":1,"offset":1172},"end":{"line":11,"column":61,"offset":1232},"indent":[]}},{"type":"inlineCode","value":"Deployment","position":{"start":{"line":11,"column":61,"offset":1232},"end":{"line":11,"column":73,"offset":1244},"indent":[]}},{"type":"text","value":" object manages ReplicaSets beneath it. Deployments are used to manage the release of new versions and roll those changes out in a simple, reliable fashion. Deployments are a top-level object when compared to ReplicaSets. This means that if you scale a ReplicaSet, the Deployment controller will scale back to the desired state defined in the ","position":{"start":{"line":11,"column":73,"offset":1244},"end":{"line":11,"column":416,"offset":1587},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Deployment","position":{"start":{"line":11,"column":417,"offset":1588},"end":{"line":11,"column":427,"offset":1598},"indent":[]}}],"position":{"start":{"line":11,"column":416,"offset":1587},"end":{"line":11,"column":428,"offset":1599},"indent":[]}},{"type":"text","value":", not in the ReplicaSet.  ","position":{"start":{"line":11,"column":428,"offset":1599},"end":{"line":11,"column":454,"offset":1625},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":1172},"end":{"line":11,"column":454,"offset":1625},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Deployments revolve around their ability to perform a rollout. Rollouts are able to be paused, resumed, and undone. You can undo both partial and completed rollouts. Additionally, the rollout history of a Deployment is retained within the object and you can rollback to a specific version. For Deployments that are long-running, it's a best practice to limit the size of the revision history so that the Deployment object does not become bloated. For example, if you rollout changes every day and you need 2 weeks of revision history, you would set ","position":{"start":{"line":13,"column":1,"offset":1627},"end":{"line":13,"column":550,"offset":2176},"indent":[]}},{"type":"inlineCode","value":"spec.revisionHistoryLimit","position":{"start":{"line":13,"column":550,"offset":2176},"end":{"line":13,"column":577,"offset":2203},"indent":[]}},{"type":"text","value":" to 14. Undoing a rollout (i.e., rolling back) follows all the same policies as the rollout strategy.  ","position":{"start":{"line":13,"column":577,"offset":2203},"end":{"line":13,"column":680,"offset":2306},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":1627},"end":{"line":13,"column":680,"offset":2306},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because Deployments make it easy to roll back and forth between versions, it is ","position":{"start":{"line":15,"column":1,"offset":2308},"end":{"line":15,"column":81,"offset":2388},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"absolutely paramount","position":{"start":{"line":15,"column":83,"offset":2390},"end":{"line":15,"column":103,"offset":2410},"indent":[]}}],"position":{"start":{"line":15,"column":81,"offset":2388},"end":{"line":15,"column":105,"offset":2412},"indent":[]}},{"type":"text","value":" that each version of your application is capable of working interchangeably with both slightly older and slightly newer versions. This backwards and forwards compatibility is critical for decoupled, distributed systems and frequent deployments.  ","position":{"start":{"line":15,"column":105,"offset":2412},"end":{"line":15,"column":352,"offset":2659},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":2308},"end":{"line":15,"column":352,"offset":2659},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Deployments can have two different values for ","position":{"start":{"line":17,"column":1,"offset":2661},"end":{"line":17,"column":47,"offset":2707},"indent":[]}},{"type":"inlineCode","value":".spec.strategy.type","position":{"start":{"line":17,"column":47,"offset":2707},"end":{"line":17,"column":68,"offset":2728},"indent":[]}},{"type":"text","value":": ","position":{"start":{"line":17,"column":68,"offset":2728},"end":{"line":17,"column":70,"offset":2730},"indent":[]}},{"type":"inlineCode","value":"Recreate","position":{"start":{"line":17,"column":70,"offset":2730},"end":{"line":17,"column":80,"offset":2740},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":17,"column":80,"offset":2740},"end":{"line":17,"column":84,"offset":2744},"indent":[]}},{"type":"inlineCode","value":"RollingUpdate","position":{"start":{"line":17,"column":84,"offset":2744},"end":{"line":17,"column":99,"offset":2759},"indent":[]}},{"type":"text","value":". If ","position":{"start":{"line":17,"column":99,"offset":2759},"end":{"line":17,"column":104,"offset":2764},"indent":[]}},{"type":"inlineCode","value":".spec.strategy.type==Recreate","position":{"start":{"line":17,"column":104,"offset":2764},"end":{"line":17,"column":135,"offset":2795},"indent":[]}},{"type":"text","value":", the Deployment will terminate all Pods associated with it and the associated ReplicaSet will re-create them. This is a fast and simple approach, but results in downtime. It should only be used in testing. ","position":{"start":{"line":17,"column":135,"offset":2795},"end":{"line":17,"column":342,"offset":3002},"indent":[]}},{"type":"inlineCode","value":"RollingUpdate","position":{"start":{"line":17,"column":342,"offset":3002},"end":{"line":17,"column":357,"offset":3017},"indent":[]}},{"type":"text","value":" is much more sophisticated and is the default configuration. ","position":{"start":{"line":17,"column":357,"offset":3017},"end":{"line":17,"column":419,"offset":3079},"indent":[]}},{"type":"inlineCode","value":"RollingUpdate","position":{"start":{"line":17,"column":419,"offset":3079},"end":{"line":17,"column":434,"offset":3094},"indent":[]}},{"type":"text","value":" can be configured using 2 different parameters/approaches:","position":{"start":{"line":17,"column":434,"offset":3094},"end":{"line":17,"column":493,"offset":3153},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":2661},"end":{"line":17,"column":493,"offset":3153},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"maxUnavailable","position":{"start":{"line":18,"column":6,"offset":3159},"end":{"line":18,"column":22,"offset":3175},"indent":[]}},{"type":"text","value":": this parameter can be set as an absolute number or a percentage. If it is set to a value of 1, a single Pod will be terminated and re-created using the new version. After establishing that the Pod is ready, the rollout will proceed to the next Pod. This decreases capacity by the parameter value at any given time.","position":{"start":{"line":18,"column":22,"offset":3175},"end":{"line":18,"column":338,"offset":3491},"indent":[]}}],"position":{"start":{"line":18,"column":6,"offset":3159},"end":{"line":18,"column":338,"offset":3491},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":3154},"end":{"line":18,"column":338,"offset":3491},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"maxSurge","position":{"start":{"line":19,"column":6,"offset":3497},"end":{"line":19,"column":16,"offset":3507},"indent":[]}},{"type":"text","value":": this parameter can be set as an absolute number or a percentage. If it is set to a value of 1, a single Pod will be created using the new version. After establishing that the Pod is ready, ","position":{"start":{"line":19,"column":16,"offset":3507},"end":{"line":19,"column":207,"offset":3698},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Pod from the previous version will be deleted.","position":{"start":{"line":19,"column":208,"offset":3699},"end":{"line":19,"column":254,"offset":3745},"indent":[]}}],"position":{"start":{"line":19,"column":207,"offset":3698},"end":{"line":19,"column":255,"offset":3746},"indent":[]}},{"type":"text","value":" This increases capacity by the parameter value at any given time.  ","position":{"start":{"line":19,"column":255,"offset":3746},"end":{"line":19,"column":323,"offset":3814},"indent":[]}}],"position":{"start":{"line":19,"column":6,"offset":3497},"end":{"line":19,"column":323,"offset":3814},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":3492},"end":{"line":19,"column":323,"offset":3814},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":3154},"end":{"line":19,"column":323,"offset":3814},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Bonus material:","position":{"start":{"line":21,"column":3,"offset":3818},"end":{"line":21,"column":18,"offset":3833},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":3816},"end":{"line":21,"column":20,"offset":3835},"indent":[]}},{"type":"text","value":" It is not explicitly mentioned in the book, but you can combine these two parameters. In fact, the default setting is 25% for both.  ","position":{"start":{"line":21,"column":20,"offset":3835},"end":{"line":21,"column":154,"offset":3969},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":3816},"end":{"line":21,"column":154,"offset":3969},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When performing a rollout, the Deployment controller needs to determine if a Pod is ready before moving on to the next Pod. This means that you ","position":{"start":{"line":23,"column":1,"offset":3971},"end":{"line":23,"column":145,"offset":4115},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"have","position":{"start":{"line":23,"column":146,"offset":4116},"end":{"line":23,"column":150,"offset":4120},"indent":[]}}],"position":{"start":{"line":23,"column":145,"offset":4115},"end":{"line":23,"column":151,"offset":4121},"indent":[]}},{"type":"text","value":" to specify readiness checks in your Pod templates. Beyond this, Deployments also support the ","position":{"start":{"line":23,"column":151,"offset":4121},"end":{"line":23,"column":245,"offset":4215},"indent":[]}},{"type":"inlineCode","value":"minReadSeconds","position":{"start":{"line":23,"column":245,"offset":4215},"end":{"line":23,"column":261,"offset":4231},"indent":[]}},{"type":"text","value":" parameter. This is a waiting period that begins ","position":{"start":{"line":23,"column":261,"offset":4231},"end":{"line":23,"column":310,"offset":4280},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"after","position":{"start":{"line":23,"column":311,"offset":4281},"end":{"line":23,"column":316,"offset":4286},"indent":[]}}],"position":{"start":{"line":23,"column":310,"offset":4280},"end":{"line":23,"column":317,"offset":4287},"indent":[]}},{"type":"text","value":" the Pod is marked as ready. ","position":{"start":{"line":23,"column":317,"offset":4287},"end":{"line":23,"column":346,"offset":4316},"indent":[]}},{"type":"inlineCode","value":"minReadySeconds","position":{"start":{"line":23,"column":346,"offset":4316},"end":{"line":23,"column":363,"offset":4333},"indent":[]}},{"type":"text","value":" can help catch bugs that take a few minutes to show up (e.g., memory leaks). Similar to ","position":{"start":{"line":23,"column":363,"offset":4333},"end":{"line":23,"column":452,"offset":4422},"indent":[]}},{"type":"inlineCode","value":"minReadSeconds","position":{"start":{"line":23,"column":452,"offset":4422},"end":{"line":23,"column":468,"offset":4438},"indent":[]}},{"type":"text","value":", the parameter ","position":{"start":{"line":23,"column":468,"offset":4438},"end":{"line":23,"column":484,"offset":4454},"indent":[]}},{"type":"inlineCode","value":"progressDeadlineSeconds","position":{"start":{"line":23,"column":484,"offset":4454},"end":{"line":23,"column":509,"offset":4479},"indent":[]}},{"type":"text","value":" is used to define a timeout limit for the deployment. It's important to note that this timer is measured by progress, not overall length of the rollout. In this context, progress is defined as any time the deployment creates or deletes a Pod. When that happen, the ","position":{"start":{"line":23,"column":509,"offset":4479},"end":{"line":23,"column":775,"offset":4745},"indent":[]}},{"type":"inlineCode","value":"progressDeadlineSeconds","position":{"start":{"line":23,"column":775,"offset":4745},"end":{"line":23,"column":800,"offset":4770},"indent":[]}},{"type":"text","value":" timer resets. If the deployment does timeout, it is marked as a failure.  ","position":{"start":{"line":23,"column":800,"offset":4770},"end":{"line":23,"column":875,"offset":4845},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":3971},"end":{"line":23,"column":875,"offset":4845},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Bonus material:","position":{"start":{"line":25,"column":3,"offset":4849},"end":{"line":25,"column":18,"offset":4864},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":4847},"end":{"line":25,"column":20,"offset":4866},"indent":[]}},{"type":"text","value":" The following is not explained explicitly in the book, but is available in the ","position":{"start":{"line":25,"column":20,"offset":4866},"end":{"line":25,"column":100,"offset":4946},"indent":[]}},{"type":"link","title":null,"url":"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/","children":[{"type":"text","value":"documentation","position":{"start":{"line":25,"column":101,"offset":4947},"end":{"line":25,"column":114,"offset":4960},"indent":[]}}],"position":{"start":{"line":25,"column":100,"offset":4946},"end":{"line":25,"column":186,"offset":5032},"indent":[]}},{"type":"text","value":".  ","position":{"start":{"line":25,"column":186,"offset":5032},"end":{"line":25,"column":189,"offset":5035},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":4847},"end":{"line":25,"column":189,"offset":5035},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment’s ","position":{"start":{"line":27,"column":1,"offset":5037},"end":{"line":27,"column":141,"offset":5177},"indent":[]}},{"type":"inlineCode","value":".status.conditions","position":{"start":{"line":27,"column":141,"offset":5177},"end":{"line":27,"column":161,"offset":5197},"indent":[]}},{"type":"text","value":":   ","position":{"start":{"line":27,"column":161,"offset":5197},"end":{"line":27,"column":165,"offset":5201},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":5037},"end":{"line":27,"column":165,"offset":5201},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Type=Progressing\nStatus=False\nReason=ProgressDeadlineExceeded","position":{"start":{"line":28,"column":1,"offset":5202},"end":{"line":32,"column":6,"offset":5273},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":33,"column":3,"offset":5276},"end":{"line":33,"column":8,"offset":5281},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":5274},"end":{"line":33,"column":10,"offset":5283},"indent":[]}},{"type":"text","value":" Kubernetes takes no action on a stalled Deployment other than to report a status condition with ","position":{"start":{"line":33,"column":10,"offset":5283},"end":{"line":33,"column":107,"offset":5380},"indent":[]}},{"type":"inlineCode","value":"Reason=ProgressDeadlineExceeded","position":{"start":{"line":33,"column":107,"offset":5380},"end":{"line":33,"column":140,"offset":5413},"indent":[]}},{"type":"text","value":". Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version.","position":{"start":{"line":33,"column":140,"offset":5413},"end":{"line":33,"column":276,"offset":5549},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":5274},"end":{"line":33,"column":276,"offset":5549},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":35,"column":1,"offset":5551},"end":{"line":35,"column":4,"offset":5554},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Chapter 13: Integrating Storage Solutions and Kubernetes","position":{"start":{"line":36,"column":4,"offset":5558},"end":{"line":36,"column":60,"offset":5614},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":5555},"end":{"line":36,"column":60,"offset":5614},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Decoupling state from your applications and applying a microservice architecture allows you to achieve incredible scale and reliability, but it does not remove the need for state. Kubernetes has several ways to store or access state depending on the needs of the application.  ","position":{"start":{"line":37,"column":1,"offset":5615},"end":{"line":37,"column":278,"offset":5892},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":5615},"end":{"line":37,"column":278,"offset":5892},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Importing External Services","position":{"start":{"line":39,"column":3,"offset":5896},"end":{"line":39,"column":30,"offset":5923},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":5894},"end":{"line":39,"column":32,"offset":5925},"indent":[]}},{"type":"break","position":{"start":{"line":39,"column":32,"offset":5925},"end":{"line":40,"column":1,"offset":5928},"indent":[1]}},{"type":"text","value":"If your database, or any other service, is running outside of the Kubernetes cluster, it's worthwhile to be able to represent this service using native k8s API definitions. By representing the service as an object within Kubernetes, you can maintain identical configurations between environments by using namespaces. A simple example is using ","position":{"start":{"line":40,"column":1,"offset":5928},"end":{"line":40,"column":344,"offset":6271},"indent":[]}},{"type":"inlineCode","value":"namespace: test","position":{"start":{"line":40,"column":344,"offset":6271},"end":{"line":40,"column":361,"offset":6288},"indent":[]}},{"type":"text","value":" for your k8s-native proxy/testing services, but using ","position":{"start":{"line":40,"column":361,"offset":6288},"end":{"line":40,"column":416,"offset":6343},"indent":[]}},{"type":"inlineCode","value":"namespace: prod","position":{"start":{"line":40,"column":416,"offset":6343},"end":{"line":40,"column":433,"offset":6360},"indent":[]}},{"type":"text","value":" to point to the production database that is running outside of the cluster on-premise or somewhere else. For a typical ","position":{"start":{"line":40,"column":433,"offset":6360},"end":{"line":40,"column":553,"offset":6480},"indent":[]}},{"type":"inlineCode","value":"Service","position":{"start":{"line":40,"column":553,"offset":6480},"end":{"line":40,"column":562,"offset":6489},"indent":[]}},{"type":"text","value":", a ClusterIP is provisioned and ","position":{"start":{"line":40,"column":562,"offset":6489},"end":{"line":40,"column":595,"offset":6522},"indent":[]}},{"type":"inlineCode","value":"kube-dns","position":{"start":{"line":40,"column":595,"offset":6522},"end":{"line":40,"column":605,"offset":6532},"indent":[]}},{"type":"text","value":" creates an A record to route to the ","position":{"start":{"line":40,"column":605,"offset":6532},"end":{"line":40,"column":642,"offset":6569},"indent":[]}},{"type":"inlineCode","value":"Service","position":{"start":{"line":40,"column":642,"offset":6569},"end":{"line":40,"column":651,"offset":6578},"indent":[]}},{"type":"text","value":". If we need to route to the DNS name of an external service, we can use the ","position":{"start":{"line":40,"column":651,"offset":6578},"end":{"line":40,"column":728,"offset":6655},"indent":[]}},{"type":"inlineCode","value":"ExternalName","position":{"start":{"line":40,"column":728,"offset":6655},"end":{"line":40,"column":742,"offset":6669},"indent":[]}},{"type":"text","value":" type to have ","position":{"start":{"line":40,"column":742,"offset":6669},"end":{"line":40,"column":756,"offset":6683},"indent":[]}},{"type":"inlineCode","value":"kube-dns","position":{"start":{"line":40,"column":756,"offset":6683},"end":{"line":40,"column":766,"offset":6693},"indent":[]}},{"type":"text","value":" create a CNAME record instead.  ","position":{"start":{"line":40,"column":766,"offset":6693},"end":{"line":40,"column":799,"offset":6726},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":5894},"end":{"line":40,"column":799,"offset":6726},"indent":[1]}},{"type":"code","lang":"yaml","meta":null,"value":"kind: Service\napiVersion: v1\nmetadata:  \n  name: external-database\nspec:\n  type: ExternalName\n  externalName: \"external.database.galenballew.fyi\"","position":{"start":{"line":42,"column":1,"offset":6728},"end":{"line":50,"column":4,"offset":6885},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If the external database is only accessible via an IP address (or multiple IP addresses) you can create a ","position":{"start":{"line":51,"column":1,"offset":6886},"end":{"line":51,"column":107,"offset":6992},"indent":[]}},{"type":"inlineCode","value":"Service","position":{"start":{"line":51,"column":107,"offset":6992},"end":{"line":51,"column":116,"offset":7001},"indent":[]}},{"type":"text","value":" without a ","position":{"start":{"line":51,"column":116,"offset":7001},"end":{"line":51,"column":127,"offset":7012},"indent":[]}},{"type":"inlineCode","value":"spec","position":{"start":{"line":51,"column":127,"offset":7012},"end":{"line":51,"column":133,"offset":7018},"indent":[]}},{"type":"text","value":" (i.e., without a label selector and without ","position":{"start":{"line":51,"column":133,"offset":7018},"end":{"line":51,"column":178,"offset":7063},"indent":[]}},{"type":"inlineCode","value":"ExternalName","position":{"start":{"line":51,"column":178,"offset":7063},"end":{"line":51,"column":192,"offset":7077},"indent":[]}},{"type":"text","value":" type). This will create a ClusterIP for the service and an A record, but there will be no IP addresses to load balance to. You will need to manually create an ","position":{"start":{"line":51,"column":192,"offset":7077},"end":{"line":51,"column":352,"offset":7237},"indent":[]}},{"type":"inlineCode","value":"Endpoints","position":{"start":{"line":51,"column":352,"offset":7237},"end":{"line":51,"column":363,"offset":7248},"indent":[]}},{"type":"text","value":" object and associate it with the ","position":{"start":{"line":51,"column":363,"offset":7248},"end":{"line":51,"column":397,"offset":7282},"indent":[]}},{"type":"inlineCode","value":"Service","position":{"start":{"line":51,"column":397,"offset":7282},"end":{"line":51,"column":406,"offset":7291},"indent":[]}},{"type":"text","value":". If the IP address or addresses change, you are also responsible for updating the ","position":{"start":{"line":51,"column":406,"offset":7291},"end":{"line":51,"column":489,"offset":7374},"indent":[]}},{"type":"inlineCode","value":"Endpoints","position":{"start":{"line":51,"column":489,"offset":7374},"end":{"line":51,"column":500,"offset":7385},"indent":[]}},{"type":"text","value":" object. You are also responsible for all health checks for external services and how your application will handle unavailability.  ","position":{"start":{"line":51,"column":500,"offset":7385},"end":{"line":51,"column":632,"offset":7517},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":6886},"end":{"line":51,"column":632,"offset":7517},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Running Reliable Singletons","position":{"start":{"line":53,"column":3,"offset":7521},"end":{"line":53,"column":30,"offset":7548},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":7519},"end":{"line":53,"column":32,"offset":7550},"indent":[]}},{"type":"break","position":{"start":{"line":53,"column":32,"offset":7550},"end":{"line":54,"column":1,"offset":7553},"indent":[1]}},{"type":"text","value":"Running a storage solution on a single ","position":{"start":{"line":54,"column":1,"offset":7553},"end":{"line":54,"column":40,"offset":7592},"indent":[]}},{"type":"inlineCode","value":"Pod","position":{"start":{"line":54,"column":40,"offset":7592},"end":{"line":54,"column":45,"offset":7597},"indent":[]}},{"type":"text","value":", VM, or server trades the complexity of distributing the data for the risk of downtime. Within Kubernetes, we can use k8s primitives to run singletons with some measure of reliability by combining ","position":{"start":{"line":54,"column":45,"offset":7597},"end":{"line":54,"column":243,"offset":7795},"indent":[]}},{"type":"inlineCode","value":"ReplicaSet","position":{"start":{"line":54,"column":243,"offset":7795},"end":{"line":54,"column":255,"offset":7807},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":54,"column":255,"offset":7807},"end":{"line":54,"column":257,"offset":7809},"indent":[]}},{"type":"inlineCode","value":"PersistentVolume","position":{"start":{"line":54,"column":257,"offset":7809},"end":{"line":54,"column":275,"offset":7827},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":54,"column":275,"offset":7827},"end":{"line":54,"column":281,"offset":7833},"indent":[]}},{"type":"inlineCode","value":"PersistentVolumeClaim","position":{"start":{"line":54,"column":281,"offset":7833},"end":{"line":54,"column":304,"offset":7856},"indent":[]}},{"type":"text","value":" objects. The actual disk is represented using a ","position":{"start":{"line":54,"column":304,"offset":7856},"end":{"line":54,"column":353,"offset":7905},"indent":[]}},{"type":"inlineCode","value":"PersistentVolume","position":{"start":{"line":54,"column":353,"offset":7905},"end":{"line":54,"column":371,"offset":7923},"indent":[]}},{"type":"text","value":". Kubernetes provides drivers for all the major public cloud providers - you just provide the type in the ","position":{"start":{"line":54,"column":371,"offset":7923},"end":{"line":54,"column":477,"offset":8029},"indent":[]}},{"type":"inlineCode","value":"spec","position":{"start":{"line":54,"column":477,"offset":8029},"end":{"line":54,"column":483,"offset":8035},"indent":[]}},{"type":"text","value":" and k8s handles the rest. A ","position":{"start":{"line":54,"column":483,"offset":8035},"end":{"line":54,"column":512,"offset":8064},"indent":[]}},{"type":"inlineCode","value":"PersistentVolumeClaim","position":{"start":{"line":54,"column":512,"offset":8064},"end":{"line":54,"column":535,"offset":8087},"indent":[]}},{"type":"text","value":" is used decouple our ","position":{"start":{"line":54,"column":535,"offset":8087},"end":{"line":54,"column":557,"offset":8109},"indent":[]}},{"type":"inlineCode","value":"Pod","position":{"start":{"line":54,"column":557,"offset":8109},"end":{"line":54,"column":562,"offset":8114},"indent":[]}},{"type":"text","value":" definition from the storage definition. In this way, a ","position":{"start":{"line":54,"column":562,"offset":8114},"end":{"line":54,"column":618,"offset":8170},"indent":[]}},{"type":"inlineCode","value":"Pod","position":{"start":{"line":54,"column":618,"offset":8170},"end":{"line":54,"column":623,"offset":8175},"indent":[]}},{"type":"text","value":" manifest can be cloud agnostic by referencing a ","position":{"start":{"line":54,"column":623,"offset":8175},"end":{"line":54,"column":672,"offset":8224},"indent":[]}},{"type":"inlineCode","value":"PersistentVolumeClaim","position":{"start":{"line":54,"column":672,"offset":8224},"end":{"line":54,"column":695,"offset":8247},"indent":[]}},{"type":"text","value":" that is composed of ","position":{"start":{"line":54,"column":695,"offset":8247},"end":{"line":54,"column":716,"offset":8268},"indent":[]}},{"type":"inlineCode","value":"PersistentVolumes","position":{"start":{"line":54,"column":716,"offset":8268},"end":{"line":54,"column":735,"offset":8287},"indent":[]}},{"type":"text","value":" of various types/providers. Similarly, if we want to decouple our ","position":{"start":{"line":54,"column":735,"offset":8287},"end":{"line":54,"column":802,"offset":8354},"indent":[]}},{"type":"inlineCode","value":"PersistentVolumeClaim","position":{"start":{"line":54,"column":802,"offset":8354},"end":{"line":54,"column":825,"offset":8377},"indent":[]}},{"type":"text","value":" from specific, pre-existing ","position":{"start":{"line":54,"column":825,"offset":8377},"end":{"line":54,"column":854,"offset":8406},"indent":[]}},{"type":"inlineCode","value":"PersistentVolumes","position":{"start":{"line":54,"column":854,"offset":8406},"end":{"line":54,"column":873,"offset":8425},"indent":[]}},{"type":"text","value":", we can define a ","position":{"start":{"line":54,"column":873,"offset":8425},"end":{"line":54,"column":891,"offset":8443},"indent":[]}},{"type":"inlineCode","value":"StorageClass","position":{"start":{"line":54,"column":891,"offset":8443},"end":{"line":54,"column":905,"offset":8457},"indent":[]}},{"type":"text","value":" object that can be referenced by a ","position":{"start":{"line":54,"column":905,"offset":8457},"end":{"line":54,"column":941,"offset":8493},"indent":[]}},{"type":"inlineCode","value":"PersistentVolumeClaim","position":{"start":{"line":54,"column":941,"offset":8493},"end":{"line":54,"column":964,"offset":8516},"indent":[]}},{"type":"text","value":". This object allows k8s operators to create disk on-demand and enables dynamic volume provisioning.  ","position":{"start":{"line":54,"column":964,"offset":8516},"end":{"line":54,"column":1066,"offset":8618},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":7519},"end":{"line":54,"column":1066,"offset":8618},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"StatefulSets","position":{"start":{"line":56,"column":3,"offset":8622},"end":{"line":56,"column":15,"offset":8634},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":8620},"end":{"line":56,"column":17,"offset":8636},"indent":[]}},{"type":"break","position":{"start":{"line":56,"column":17,"offset":8636},"end":{"line":57,"column":1,"offset":8639},"indent":[1]}},{"type":"inlineCode","value":"StatefulSet","position":{"start":{"line":57,"column":1,"offset":8639},"end":{"line":57,"column":14,"offset":8652},"indent":[]}},{"type":"text","value":"s are very similar to ","position":{"start":{"line":57,"column":14,"offset":8652},"end":{"line":57,"column":36,"offset":8674},"indent":[]}},{"type":"inlineCode","value":"ReplicaSets","position":{"start":{"line":57,"column":36,"offset":8674},"end":{"line":57,"column":49,"offset":8687},"indent":[]}},{"type":"text","value":", except for 3 differences:  ","position":{"start":{"line":57,"column":49,"offset":8687},"end":{"line":57,"column":78,"offset":8716},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":8620},"end":{"line":57,"column":78,"offset":8716},"indent":[1]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each replica gets a persistent hostname with a unique index instead of the random suffix usually attached by the ","position":{"start":{"line":58,"column":4,"offset":8720},"end":{"line":58,"column":117,"offset":8833},"indent":[]}},{"type":"inlineCode","value":"ReplicaSet","position":{"start":{"line":58,"column":117,"offset":8833},"end":{"line":58,"column":129,"offset":8845},"indent":[]}},{"type":"text","value":" controller (e.g., database-0, database-1, ..., database-n)  ","position":{"start":{"line":58,"column":129,"offset":8845},"end":{"line":58,"column":190,"offset":8906},"indent":[]}}],"position":{"start":{"line":58,"column":4,"offset":8720},"end":{"line":58,"column":190,"offset":8906},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":8717},"end":{"line":58,"column":190,"offset":8906},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each replica is created in order from lowest to highest index. Creation is blocked until the preceding replica is healthy and available instead of creating all the replicas in parallel. This also applies to scaling up.  ","position":{"start":{"line":59,"column":4,"offset":8910},"end":{"line":59,"column":224,"offset":9130},"indent":[]}}],"position":{"start":{"line":59,"column":4,"offset":8910},"end":{"line":59,"column":224,"offset":9130},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":8907},"end":{"line":59,"column":224,"offset":9130},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"When deleted, each replica is deleted in order from highest to lowest index. This also applies to scaling down.","position":{"start":{"line":60,"column":4,"offset":9134},"end":{"line":60,"column":115,"offset":9245},"indent":[]}},{"type":"break","position":{"start":{"line":60,"column":115,"offset":9245},"end":{"line":61,"column":1,"offset":9248},"indent":[1]}},{"type":"text","value":"When you create a ","position":{"start":{"line":61,"column":1,"offset":9248},"end":{"line":61,"column":19,"offset":9266},"indent":[]}},{"type":"inlineCode","value":"StatefulSet","position":{"start":{"line":61,"column":19,"offset":9266},"end":{"line":61,"column":32,"offset":9279},"indent":[]}},{"type":"text","value":", you will need to create a \"headless\" ","position":{"start":{"line":61,"column":32,"offset":9279},"end":{"line":61,"column":71,"offset":9318},"indent":[]}},{"type":"inlineCode","value":"Service","position":{"start":{"line":61,"column":71,"offset":9318},"end":{"line":61,"column":80,"offset":9327},"indent":[]}},{"type":"text","value":" to manage it: a ","position":{"start":{"line":61,"column":80,"offset":9327},"end":{"line":61,"column":97,"offset":9344},"indent":[]}},{"type":"inlineCode","value":"Service","position":{"start":{"line":61,"column":97,"offset":9344},"end":{"line":61,"column":106,"offset":9353},"indent":[]}},{"type":"text","value":" that does not provision a cluster virtual IP address. Since each replica in the ","position":{"start":{"line":61,"column":106,"offset":9353},"end":{"line":61,"column":187,"offset":9434},"indent":[]}},{"type":"inlineCode","value":"StatefulSet","position":{"start":{"line":61,"column":187,"offset":9434},"end":{"line":61,"column":200,"offset":9447},"indent":[]}},{"type":"text","value":" is unique, it doesn't make sense to have a load-balancing IP for them. To create a headless ","position":{"start":{"line":61,"column":200,"offset":9447},"end":{"line":61,"column":293,"offset":9540},"indent":[]}},{"type":"inlineCode","value":"Service","position":{"start":{"line":61,"column":293,"offset":9540},"end":{"line":61,"column":302,"offset":9549},"indent":[]}},{"type":"text","value":", simply use ","position":{"start":{"line":61,"column":302,"offset":9549},"end":{"line":61,"column":315,"offset":9562},"indent":[]}},{"type":"inlineCode","value":"clusterIP: None","position":{"start":{"line":61,"column":315,"offset":9562},"end":{"line":61,"column":332,"offset":9579},"indent":[]}},{"type":"text","value":" in the specification. After the service is created, a DNS entry will be created for each unique replica, as well as a DNS entry for the ","position":{"start":{"line":61,"column":332,"offset":9579},"end":{"line":61,"column":469,"offset":9716},"indent":[]}},{"type":"inlineCode","value":"StatefulSet","position":{"start":{"line":61,"column":469,"offset":9716},"end":{"line":61,"column":482,"offset":9729},"indent":[]}},{"type":"text","value":" itself that contains the addresses of all the replicas. These well-defined, persistent names for each replica and the ability to route to them is critical when configuring a replicated storage solution. For actual disk, ","position":{"start":{"line":61,"column":482,"offset":9729},"end":{"line":61,"column":703,"offset":9950},"indent":[]}},{"type":"inlineCode","value":"StatefulSet","position":{"start":{"line":61,"column":703,"offset":9950},"end":{"line":61,"column":716,"offset":9963},"indent":[]}},{"type":"text","value":"s will need to use ","position":{"start":{"line":61,"column":716,"offset":9963},"end":{"line":61,"column":735,"offset":9982},"indent":[]}},{"type":"inlineCode","value":"volumeClaimTemplates","position":{"start":{"line":61,"column":735,"offset":9982},"end":{"line":61,"column":757,"offset":10004},"indent":[]}},{"type":"text","value":" since there will be multiple replicas (they can't all use the same unique volume claim). The volume claim template can be configured to reference a ","position":{"start":{"line":61,"column":757,"offset":10004},"end":{"line":61,"column":906,"offset":10153},"indent":[]}},{"type":"inlineCode","value":"StorageClass","position":{"start":{"line":61,"column":906,"offset":10153},"end":{"line":61,"column":920,"offset":10167},"indent":[]}},{"type":"text","value":" to enable dynamic provisioning.    ","position":{"start":{"line":61,"column":920,"offset":10167},"end":{"line":61,"column":956,"offset":10203},"indent":[]}}],"position":{"start":{"line":60,"column":4,"offset":9134},"end":{"line":61,"column":956,"offset":10203},"indent":[1]}}],"position":{"start":{"line":60,"column":1,"offset":9131},"end":{"line":61,"column":956,"offset":10203},"indent":[1]}}],"position":{"start":{"line":58,"column":1,"offset":8717},"end":{"line":61,"column":956,"offset":10203},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Bonus material:","position":{"start":{"line":63,"column":3,"offset":10207},"end":{"line":63,"column":18,"offset":10222},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":10205},"end":{"line":63,"column":20,"offset":10224},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":63,"column":20,"offset":10224},"end":{"line":63,"column":21,"offset":10225},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/operator-framework/awesome-operators","children":[{"type":"text","value":"Operators","position":{"start":{"line":63,"column":22,"offset":10226},"end":{"line":63,"column":31,"offset":10235},"indent":[]}}],"position":{"start":{"line":63,"column":21,"offset":10225},"end":{"line":63,"column":89,"offset":10293},"indent":[]}},{"type":"text","value":" are incredibly useful in Kubernetes. They include the logic needed to have applications behave as desired within Kubernetes (e.g., scaling, sharding, and promotion for a distributed database). Check out ","position":{"start":{"line":63,"column":89,"offset":10293},"end":{"line":63,"column":293,"offset":10497},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/operator-framework/awesome-operators","children":[{"type":"text","value":"Awesome Operators","position":{"start":{"line":63,"column":294,"offset":10498},"end":{"line":63,"column":311,"offset":10515},"indent":[]}}],"position":{"start":{"line":63,"column":293,"offset":10497},"end":{"line":63,"column":369,"offset":10573},"indent":[]}},{"type":"text","value":" to see examples.","position":{"start":{"line":63,"column":369,"offset":10573},"end":{"line":63,"column":386,"offset":10590},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":10205},"end":{"line":63,"column":386,"offset":10590},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":65,"column":1,"offset":10592},"end":{"line":65,"column":4,"offset":10595},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Chapter 14: Deploying Real-World Applications","position":{"start":{"line":66,"column":4,"offset":10599},"end":{"line":66,"column":49,"offset":10644},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":10596},"end":{"line":66,"column":49,"offset":10644},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This chapter presents 3 different walk-throughs of deploying real-world applications. The applications are ","position":{"start":{"line":67,"column":1,"offset":10645},"end":{"line":67,"column":108,"offset":10752},"indent":[]}},{"type":"link","title":null,"url":"https://parseplatform.org/","children":[{"type":"text","value":"Parse","position":{"start":{"line":67,"column":109,"offset":10753},"end":{"line":67,"column":114,"offset":10758},"indent":[]}}],"position":{"start":{"line":67,"column":108,"offset":10752},"end":{"line":67,"column":143,"offset":10787},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":67,"column":143,"offset":10787},"end":{"line":67,"column":145,"offset":10789},"indent":[]}},{"type":"link","title":null,"url":"https://ghost.org/","children":[{"type":"text","value":"Ghost","position":{"start":{"line":67,"column":146,"offset":10790},"end":{"line":67,"column":151,"offset":10795},"indent":[]}}],"position":{"start":{"line":67,"column":145,"offset":10789},"end":{"line":67,"column":172,"offset":10816},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":67,"column":172,"offset":10816},"end":{"line":67,"column":178,"offset":10822},"indent":[]}},{"type":"link","title":null,"url":"https://redis.io/","children":[{"type":"text","value":"Redis","position":{"start":{"line":67,"column":179,"offset":10823},"end":{"line":67,"column":184,"offset":10828},"indent":[]}}],"position":{"start":{"line":67,"column":178,"offset":10822},"end":{"line":67,"column":204,"offset":10848},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":67,"column":204,"offset":10848},"end":{"line":67,"column":206,"offset":10850},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":10645},"end":{"line":67,"column":206,"offset":10850},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Appendix A: Building a Raspberry Pi Kubernetes Cluster","position":{"start":{"line":69,"column":4,"offset":10855},"end":{"line":69,"column":58,"offset":10909},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":10852},"end":{"line":69,"column":58,"offset":10909},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The appendix includes instructons on how to set up a cluster of ","position":{"start":{"line":70,"column":1,"offset":10910},"end":{"line":70,"column":65,"offset":10974},"indent":[]}},{"type":"link","title":null,"url":"https://www.raspberrypi.org/","children":[{"type":"text","value":"Raspberry Pi","position":{"start":{"line":70,"column":66,"offset":10975},"end":{"line":70,"column":78,"offset":10987},"indent":[]}}],"position":{"start":{"line":70,"column":65,"offset":10974},"end":{"line":70,"column":109,"offset":11018},"indent":[]}},{"type":"text","value":" devices and install Kubernetes on them. ","position":{"start":{"line":70,"column":109,"offset":11018},"end":{"line":70,"column":150,"offset":11059},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":10910},"end":{"line":70,"column":150,"offset":11059},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":72,"column":1,"offset":11061},"end":{"line":72,"column":4,"offset":11064},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Resources:","position":{"start":{"line":73,"column":3,"offset":11067},"end":{"line":73,"column":13,"offset":11077},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":11065},"end":{"line":73,"column":14,"offset":11078},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Kubernetes Up & Running","position":{"start":{"line":74,"column":4,"offset":11082},"end":{"line":74,"column":27,"offset":11105},"indent":[]}}],"position":{"start":{"line":74,"column":3,"offset":11081},"end":{"line":74,"column":28,"offset":11106},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":74,"column":28,"offset":11106},"end":{"line":74,"column":29,"offset":11107},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/kubernetes-up-and-running","children":[{"type":"text","value":"GitHub repository","position":{"start":{"line":74,"column":30,"offset":11108},"end":{"line":74,"column":47,"offset":11125},"indent":[]}}],"position":{"start":{"line":74,"column":29,"offset":11107},"end":{"line":74,"column":94,"offset":11172},"indent":[]}}],"position":{"start":{"line":74,"column":3,"offset":11081},"end":{"line":74,"column":94,"offset":11172},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":11079},"end":{"line":74,"column":94,"offset":11172},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/","children":[{"type":"text","value":"Deployments","position":{"start":{"line":75,"column":4,"offset":11176},"end":{"line":75,"column":15,"offset":11187},"indent":[]}}],"position":{"start":{"line":75,"column":3,"offset":11175},"end":{"line":75,"column":87,"offset":11259},"indent":[]}},{"type":"text","value":" - k8s documentation","position":{"start":{"line":75,"column":87,"offset":11259},"end":{"line":75,"column":107,"offset":11279},"indent":[]}}],"position":{"start":{"line":75,"column":3,"offset":11175},"end":{"line":75,"column":107,"offset":11279},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":11173},"end":{"line":75,"column":107,"offset":11279},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":11079},"end":{"line":75,"column":107,"offset":11279},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":77,"column":1,"offset":11281},"end":{"line":77,"column":4,"offset":11284},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Continue Reading","position":{"start":{"line":78,"column":3,"offset":11287},"end":{"line":78,"column":19,"offset":11303},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":11285},"end":{"line":78,"column":19,"offset":11303},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"part 1","label":"Part 1","referenceType":"shortcut","children":[{"type":"text","value":"Part 1","position":{"start":{"line":79,"column":4,"offset":11307},"end":{"line":79,"column":10,"offset":11313},"indent":[]}}],"position":{"start":{"line":79,"column":3,"offset":11306},"end":{"line":79,"column":11,"offset":11314},"indent":[]}},{"type":"text","value":"({{ site.baseurl }}{% link _posts/2019-09-08-kuar-part1.md %})","position":{"start":{"line":79,"column":11,"offset":11314},"end":{"line":79,"column":73,"offset":11376},"indent":[]}}],"position":{"start":{"line":79,"column":3,"offset":11306},"end":{"line":79,"column":73,"offset":11376},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":11304},"end":{"line":79,"column":73,"offset":11376},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"part 2","label":"Part 2","referenceType":"shortcut","children":[{"type":"text","value":"Part 2","position":{"start":{"line":80,"column":4,"offset":11380},"end":{"line":80,"column":10,"offset":11386},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":11379},"end":{"line":80,"column":11,"offset":11387},"indent":[]}},{"type":"text","value":"({{ site.baseurl }}{% link _posts/2019-09-09-kuar-part2.md %})","position":{"start":{"line":80,"column":11,"offset":11387},"end":{"line":80,"column":73,"offset":11449},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":11379},"end":{"line":80,"column":73,"offset":11449},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":11377},"end":{"line":80,"column":73,"offset":11449},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"part 3","label":"Part 3","referenceType":"shortcut","children":[{"type":"text","value":"Part 3","position":{"start":{"line":81,"column":4,"offset":11453},"end":{"line":81,"column":10,"offset":11459},"indent":[]}}],"position":{"start":{"line":81,"column":3,"offset":11452},"end":{"line":81,"column":11,"offset":11460},"indent":[]}},{"type":"text","value":"({{ site.baseurl }}{% link _posts/2019-09-12-kuar-part3.md %})","position":{"start":{"line":81,"column":11,"offset":11460},"end":{"line":81,"column":73,"offset":11522},"indent":[]}}],"position":{"start":{"line":81,"column":3,"offset":11452},"end":{"line":81,"column":73,"offset":11522},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":11450},"end":{"line":81,"column":73,"offset":11522},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"part 4","label":"Part 4","referenceType":"shortcut","children":[{"type":"text","value":"Part 4","position":{"start":{"line":82,"column":4,"offset":11526},"end":{"line":82,"column":10,"offset":11532},"indent":[]}}],"position":{"start":{"line":82,"column":3,"offset":11525},"end":{"line":82,"column":11,"offset":11533},"indent":[]}},{"type":"text","value":"({{ site.baseurl }}{% link _posts/2019-09-15-kuar-part4.md %})","position":{"start":{"line":82,"column":11,"offset":11533},"end":{"line":82,"column":73,"offset":11595},"indent":[]}}],"position":{"start":{"line":82,"column":3,"offset":11525},"end":{"line":82,"column":73,"offset":11595},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":11523},"end":{"line":82,"column":73,"offset":11595},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":11304},"end":{"line":82,"column":73,"offset":11595},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"TL;DR - Kubernetes Up & Running, Part 4\",\"date\":\"2019-09-15T00:00:00.000Z\",\"excerpt\":\"The saga concludes.\",\"categories\":[\"tldr\",\"cloud\"],\"tags\":[\"gcp\",\"cloud\",\"k8s\",\"aws\"],\"featured_image\":\"/images/feature/6.jpg\",\"comments\":true,\"share\":true}","position":{"start":{"line":84,"column":1,"offset":11597},"end":{"line":84,"column":281,"offset":11877},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":84,"column":281,"offset":11877}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"TL;DR - Kubernetes Up & Running, Part 4\",\n  \"date\": \"2019-09-15T00:00:00.000Z\",\n  \"excerpt\": \"The saga concludes.\",\n  \"categories\": [\"tldr\", \"cloud\"],\n  \"tags\": [\"gcp\", \"cloud\", \"k8s\", \"aws\"],\n  \"featured_image\": \"/images/feature/6.jpg\",\n  \"comments\": true,\n  \"share\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Abstract\"), mdx(\"p\", null, \"These are my notes from reading \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://smile.amazon.com/Kubernetes-Running-Dive-Future-Infrastructure/dp/1491935677\"\n  }), mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Kubernetes Up & Running\")), \" by Kelsey Hightower, Brendan Burns, and Joe Beda. Kelsey Hightower is a Staff Developer Advocate for the Google Cloud Platform. Brendan Burns is a Distinguished Engineer in Microsoft Azure and cofounded the Kubernetes project at Google. Joe Beda is the CTO of Heptio and cofounded the Kubernetes project, as well as Google Compute Engine.  \"), mdx(\"p\", null, \"This is a phenomenal book that covers both the whys and hows of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kubernetes.io/\"\n  }), \"Kubernetes\"), \". I read the 1st edition, but a 2nd edition is coming out soon. I'm using this as study material for my \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.cncf.io/certification/ckad/\"\n  }), \"CKAD\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://training.linuxfoundation.org/certification/certified-kubernetes-administrator-cka/\"\n  }), \"CKA\"), \" certifications.  \"), mdx(\"p\", null, \"This article is part of a series. You can read \", \"[Part 1]\", \"({{ site.baseurl }}{% link _posts/2019-09-08-kuar-part1.md %}), \", \"[Part 2]\", \"({{ site.baseurl }}{% link _posts/2019-09-09-kuar-part2.md %}), and \", \"[Part 3]\", \"({{ site.baseurl }}{% link _posts/2019-09-12-kuar-part3.md %}).\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Chapter 12: Deployments\"), mdx(\"p\", null, \"Much like how ReplicaSets manage the Pods beneath them, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Deployment\"), \" object manages ReplicaSets beneath it. Deployments are used to manage the release of new versions and roll those changes out in a simple, reliable fashion. Deployments are a top-level object when compared to ReplicaSets. This means that if you scale a ReplicaSet, the Deployment controller will scale back to the desired state defined in the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Deployment\"), \", not in the ReplicaSet.  \"), mdx(\"p\", null, \"Deployments revolve around their ability to perform a rollout. Rollouts are able to be paused, resumed, and undone. You can undo both partial and completed rollouts. Additionally, the rollout history of a Deployment is retained within the object and you can rollback to a specific version. For Deployments that are long-running, it's a best practice to limit the size of the revision history so that the Deployment object does not become bloated. For example, if you rollout changes every day and you need 2 weeks of revision history, you would set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec.revisionHistoryLimit\"), \" to 14. Undoing a rollout (i.e., rolling back) follows all the same policies as the rollout strategy.  \"), mdx(\"p\", null, \"Because Deployments make it easy to roll back and forth between versions, it is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"absolutely paramount\"), \" that each version of your application is capable of working interchangeably with both slightly older and slightly newer versions. This backwards and forwards compatibility is critical for decoupled, distributed systems and frequent deployments.  \"), mdx(\"p\", null, \"Deployments can have two different values for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".spec.strategy.type\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Recreate\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RollingUpdate\"), \". If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".spec.strategy.type==Recreate\"), \", the Deployment will terminate all Pods associated with it and the associated ReplicaSet will re-create them. This is a fast and simple approach, but results in downtime. It should only be used in testing. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RollingUpdate\"), \" is much more sophisticated and is the default configuration. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RollingUpdate\"), \" can be configured using 2 different parameters/approaches:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"maxUnavailable\"), \": this parameter can be set as an absolute number or a percentage. If it is set to a value of 1, a single Pod will be terminated and re-created using the new version. After establishing that the Pod is ready, the rollout will proceed to the next Pod. This decreases capacity by the parameter value at any given time.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"maxSurge\"), \": this parameter can be set as an absolute number or a percentage. If it is set to a value of 1, a single Pod will be created using the new version. After establishing that the Pod is ready, \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Pod from the previous version will be deleted.\"), \" This increases capacity by the parameter value at any given time.  \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Bonus material:\"), \" It is not explicitly mentioned in the book, but you can combine these two parameters. In fact, the default setting is 25% for both.  \"), mdx(\"p\", null, \"When performing a rollout, the Deployment controller needs to determine if a Pod is ready before moving on to the next Pod. This means that you \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"have\"), \" to specify readiness checks in your Pod templates. Beyond this, Deployments also support the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"minReadSeconds\"), \" parameter. This is a waiting period that begins \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"after\"), \" the Pod is marked as ready. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"minReadySeconds\"), \" can help catch bugs that take a few minutes to show up (e.g., memory leaks). Similar to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"minReadSeconds\"), \", the parameter \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"progressDeadlineSeconds\"), \" is used to define a timeout limit for the deployment. It's important to note that this timer is measured by progress, not overall length of the rollout. In this context, progress is defined as any time the deployment creates or deletes a Pod. When that happen, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"progressDeadlineSeconds\"), \" timer resets. If the deployment does timeout, it is marked as a failure.  \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Bonus material:\"), \" The following is not explained explicitly in the book, but is available in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\"\n  }), \"documentation\"), \".  \"), mdx(\"p\", null, \"Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".status.conditions\"), \":   \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Type=Progressing\\nStatus=False\\nReason=ProgressDeadlineExceeded\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" Kubernetes takes no action on a stalled Deployment other than to report a status condition with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Reason=ProgressDeadlineExceeded\"), \". Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version.\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Chapter 13: Integrating Storage Solutions and Kubernetes\"), mdx(\"p\", null, \"Decoupling state from your applications and applying a microservice architecture allows you to achieve incredible scale and reliability, but it does not remove the need for state. Kubernetes has several ways to store or access state depending on the needs of the application.  \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Importing External Services\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"If your database, or any other service, is running outside of the Kubernetes cluster, it's worthwhile to be able to represent this service using native k8s API definitions. By representing the service as an object within Kubernetes, you can maintain identical configurations between environments by using namespaces. A simple example is using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"namespace: test\"), \" for your k8s-native proxy/testing services, but using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"namespace: prod\"), \" to point to the production database that is running outside of the cluster on-premise or somewhere else. For a typical \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Service\"), \", a ClusterIP is provisioned and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kube-dns\"), \" creates an A record to route to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Service\"), \". If we need to route to the DNS name of an external service, we can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ExternalName\"), \" type to have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kube-dns\"), \" create a CNAME record instead.  \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"kind: Service\\napiVersion: v1\\nmetadata:  \\n  name: external-database\\nspec:\\n  type: ExternalName\\n  externalName: \\\"external.database.galenballew.fyi\\\"\\n\")), mdx(\"p\", null, \"If the external database is only accessible via an IP address (or multiple IP addresses) you can create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Service\"), \" without a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec\"), \" (i.e., without a label selector and without \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ExternalName\"), \" type). This will create a ClusterIP for the service and an A record, but there will be no IP addresses to load balance to. You will need to manually create an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Endpoints\"), \" object and associate it with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Service\"), \". If the IP address or addresses change, you are also responsible for updating the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Endpoints\"), \" object. You are also responsible for all health checks for external services and how your application will handle unavailability.  \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Running Reliable Singletons\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Running a storage solution on a single \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pod\"), \", VM, or server trades the complexity of distributing the data for the risk of downtime. Within Kubernetes, we can use k8s primitives to run singletons with some measure of reliability by combining \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ReplicaSet\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PersistentVolume\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PersistentVolumeClaim\"), \" objects. The actual disk is represented using a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PersistentVolume\"), \". Kubernetes provides drivers for all the major public cloud providers - you just provide the type in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec\"), \" and k8s handles the rest. A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PersistentVolumeClaim\"), \" is used decouple our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pod\"), \" definition from the storage definition. In this way, a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pod\"), \" manifest can be cloud agnostic by referencing a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PersistentVolumeClaim\"), \" that is composed of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PersistentVolumes\"), \" of various types/providers. Similarly, if we want to decouple our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PersistentVolumeClaim\"), \" from specific, pre-existing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PersistentVolumes\"), \", we can define a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StorageClass\"), \" object that can be referenced by a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PersistentVolumeClaim\"), \". This object allows k8s operators to create disk on-demand and enables dynamic volume provisioning.  \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"StatefulSets\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StatefulSet\"), \"s are very similar to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ReplicaSets\"), \", except for 3 differences:  \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Each replica gets a persistent hostname with a unique index instead of the random suffix usually attached by the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ReplicaSet\"), \" controller (e.g., database-0, database-1, ..., database-n)  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Each replica is created in order from lowest to highest index. Creation is blocked until the preceding replica is healthy and available instead of creating all the replicas in parallel. This also applies to scaling up.  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When deleted, each replica is deleted in order from highest to lowest index. This also applies to scaling down.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"When you create a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"StatefulSet\"), \", you will need to create a \\\"headless\\\" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Service\"), \" to manage it: a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Service\"), \" that does not provision a cluster virtual IP address. Since each replica in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"StatefulSet\"), \" is unique, it doesn't make sense to have a load-balancing IP for them. To create a headless \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Service\"), \", simply use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"clusterIP: None\"), \" in the specification. After the service is created, a DNS entry will be created for each unique replica, as well as a DNS entry for the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"StatefulSet\"), \" itself that contains the addresses of all the replicas. These well-defined, persistent names for each replica and the ability to route to them is critical when configuring a replicated storage solution. For actual disk, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"StatefulSet\"), \"s will need to use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"volumeClaimTemplates\"), \" since there will be multiple replicas (they can't all use the same unique volume claim). The volume claim template can be configured to reference a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"StorageClass\"), \" to enable dynamic provisioning.    \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Bonus material:\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/operator-framework/awesome-operators\"\n  }), \"Operators\"), \" are incredibly useful in Kubernetes. They include the logic needed to have applications behave as desired within Kubernetes (e.g., scaling, sharding, and promotion for a distributed database). Check out \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/operator-framework/awesome-operators\"\n  }), \"Awesome Operators\"), \" to see examples.\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Chapter 14: Deploying Real-World Applications\"), mdx(\"p\", null, \"This chapter presents 3 different walk-throughs of deploying real-world applications. The applications are \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://parseplatform.org/\"\n  }), \"Parse\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ghost.org/\"\n  }), \"Ghost\"), \", and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://redis.io/\"\n  }), \"Redis\"), \". \"), mdx(\"h2\", null, \"Appendix A: Building a Raspberry Pi Kubernetes Cluster\"), mdx(\"p\", null, \"The appendix includes instructons on how to set up a cluster of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.raspberrypi.org/\"\n  }), \"Raspberry Pi\"), \" devices and install Kubernetes on them. \"), mdx(\"hr\", null), mdx(\"h1\", null, \"Resources:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Kubernetes Up & Running\"), \" \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/kubernetes-up-and-running\"\n  }), \"GitHub repository\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\"\n  }), \"Deployments\"), \" - k8s documentation\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Continue Reading\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[Part 1]\", \"({{ site.baseurl }}{% link _posts/2019-09-08-kuar-part1.md %})\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[Part 2]\", \"({{ site.baseurl }}{% link _posts/2019-09-09-kuar-part2.md %})\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[Part 3]\", \"({{ site.baseurl }}{% link _posts/2019-09-12-kuar-part3.md %})\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[Part 4]\", \"({{ site.baseurl }}{% link _posts/2019-09-15-kuar-part4.md %})\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"TL;DR - Kubernetes Up & Running, Part 4\",\n  \"date\": \"2019-09-15T00:00:00.000Z\",\n  \"excerpt\": \"The saga concludes.\",\n  \"categories\": [\"tldr\", \"cloud\"],\n  \"tags\": [\"gcp\", \"cloud\", \"k8s\", \"aws\"],\n  \"featured_image\": \"/images/feature/6.jpg\",\n  \"comments\": true,\n  \"share\": true\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Abstract`}</h1>\n    <p>{`These are my notes from reading `}<a parentName=\"p\" {...{\n        \"href\": \"https://smile.amazon.com/Kubernetes-Running-Dive-Future-Infrastructure/dp/1491935677\"\n      }}><em parentName=\"a\">{`Kubernetes Up & Running`}</em></a>{` by Kelsey Hightower, Brendan Burns, and Joe Beda. Kelsey Hightower is a Staff Developer Advocate for the Google Cloud Platform. Brendan Burns is a Distinguished Engineer in Microsoft Azure and cofounded the Kubernetes project at Google. Joe Beda is the CTO of Heptio and cofounded the Kubernetes project, as well as Google Compute Engine.  `}</p>\n    <p>{`This is a phenomenal book that covers both the whys and hows of `}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.io/\"\n      }}>{`Kubernetes`}</a>{`. I read the 1st edition, but a 2nd edition is coming out soon. I'm using this as study material for my `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.cncf.io/certification/ckad/\"\n      }}>{`CKAD`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://training.linuxfoundation.org/certification/certified-kubernetes-administrator-cka/\"\n      }}>{`CKA`}</a>{` certifications.  `}</p>\n    <p>{`This article is part of a series. You can read `}{`[Part 1]`}{`({{ site.baseurl }}{% link _posts/2019-09-08-kuar-part1.md %}), `}{`[Part 2]`}{`({{ site.baseurl }}{% link _posts/2019-09-09-kuar-part2.md %}), and `}{`[Part 3]`}{`({{ site.baseurl }}{% link _posts/2019-09-12-kuar-part3.md %}).`}</p>\n    <hr></hr>\n    <h2>{`Chapter 12: Deployments`}</h2>\n    <p>{`Much like how ReplicaSets manage the Pods beneath them, the `}<inlineCode parentName=\"p\">{`Deployment`}</inlineCode>{` object manages ReplicaSets beneath it. Deployments are used to manage the release of new versions and roll those changes out in a simple, reliable fashion. Deployments are a top-level object when compared to ReplicaSets. This means that if you scale a ReplicaSet, the Deployment controller will scale back to the desired state defined in the `}<em parentName=\"p\">{`Deployment`}</em>{`, not in the ReplicaSet.  `}</p>\n    <p>{`Deployments revolve around their ability to perform a rollout. Rollouts are able to be paused, resumed, and undone. You can undo both partial and completed rollouts. Additionally, the rollout history of a Deployment is retained within the object and you can rollback to a specific version. For Deployments that are long-running, it's a best practice to limit the size of the revision history so that the Deployment object does not become bloated. For example, if you rollout changes every day and you need 2 weeks of revision history, you would set `}<inlineCode parentName=\"p\">{`spec.revisionHistoryLimit`}</inlineCode>{` to 14. Undoing a rollout (i.e., rolling back) follows all the same policies as the rollout strategy.  `}</p>\n    <p>{`Because Deployments make it easy to roll back and forth between versions, it is `}<strong parentName=\"p\">{`absolutely paramount`}</strong>{` that each version of your application is capable of working interchangeably with both slightly older and slightly newer versions. This backwards and forwards compatibility is critical for decoupled, distributed systems and frequent deployments.  `}</p>\n    <p>{`Deployments can have two different values for `}<inlineCode parentName=\"p\">{`.spec.strategy.type`}</inlineCode>{`: `}<inlineCode parentName=\"p\">{`Recreate`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`RollingUpdate`}</inlineCode>{`. If `}<inlineCode parentName=\"p\">{`.spec.strategy.type==Recreate`}</inlineCode>{`, the Deployment will terminate all Pods associated with it and the associated ReplicaSet will re-create them. This is a fast and simple approach, but results in downtime. It should only be used in testing. `}<inlineCode parentName=\"p\">{`RollingUpdate`}</inlineCode>{` is much more sophisticated and is the default configuration. `}<inlineCode parentName=\"p\">{`RollingUpdate`}</inlineCode>{` can be configured using 2 different parameters/approaches:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`maxUnavailable`}</inlineCode>{`: this parameter can be set as an absolute number or a percentage. If it is set to a value of 1, a single Pod will be terminated and re-created using the new version. After establishing that the Pod is ready, the rollout will proceed to the next Pod. This decreases capacity by the parameter value at any given time.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`maxSurge`}</inlineCode>{`: this parameter can be set as an absolute number or a percentage. If it is set to a value of 1, a single Pod will be created using the new version. After establishing that the Pod is ready, `}<em parentName=\"li\">{`Pod from the previous version will be deleted.`}</em>{` This increases capacity by the parameter value at any given time.  `}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Bonus material:`}</strong>{` It is not explicitly mentioned in the book, but you can combine these two parameters. In fact, the default setting is 25% for both.  `}</p>\n    <p>{`When performing a rollout, the Deployment controller needs to determine if a Pod is ready before moving on to the next Pod. This means that you `}<em parentName=\"p\">{`have`}</em>{` to specify readiness checks in your Pod templates. Beyond this, Deployments also support the `}<inlineCode parentName=\"p\">{`minReadSeconds`}</inlineCode>{` parameter. This is a waiting period that begins `}<em parentName=\"p\">{`after`}</em>{` the Pod is marked as ready. `}<inlineCode parentName=\"p\">{`minReadySeconds`}</inlineCode>{` can help catch bugs that take a few minutes to show up (e.g., memory leaks). Similar to `}<inlineCode parentName=\"p\">{`minReadSeconds`}</inlineCode>{`, the parameter `}<inlineCode parentName=\"p\">{`progressDeadlineSeconds`}</inlineCode>{` is used to define a timeout limit for the deployment. It's important to note that this timer is measured by progress, not overall length of the rollout. In this context, progress is defined as any time the deployment creates or deletes a Pod. When that happen, the `}<inlineCode parentName=\"p\">{`progressDeadlineSeconds`}</inlineCode>{` timer resets. If the deployment does timeout, it is marked as a failure.  `}</p>\n    <p><strong parentName=\"p\">{`Bonus material:`}</strong>{` The following is not explained explicitly in the book, but is available in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\"\n      }}>{`documentation`}</a>{`.  `}</p>\n    <p>{`Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment’s `}<inlineCode parentName=\"p\">{`.status.conditions`}</inlineCode>{`:   `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Type=Progressing\nStatus=False\nReason=ProgressDeadlineExceeded\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` Kubernetes takes no action on a stalled Deployment other than to report a status condition with `}<inlineCode parentName=\"p\">{`Reason=ProgressDeadlineExceeded`}</inlineCode>{`. Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version.`}</p>\n    <hr></hr>\n    <h2>{`Chapter 13: Integrating Storage Solutions and Kubernetes`}</h2>\n    <p>{`Decoupling state from your applications and applying a microservice architecture allows you to achieve incredible scale and reliability, but it does not remove the need for state. Kubernetes has several ways to store or access state depending on the needs of the application.  `}</p>\n    <p><strong parentName=\"p\">{`Importing External Services`}</strong><br parentName=\"p\"></br>{`\n`}{`If your database, or any other service, is running outside of the Kubernetes cluster, it's worthwhile to be able to represent this service using native k8s API definitions. By representing the service as an object within Kubernetes, you can maintain identical configurations between environments by using namespaces. A simple example is using `}<inlineCode parentName=\"p\">{`namespace: test`}</inlineCode>{` for your k8s-native proxy/testing services, but using `}<inlineCode parentName=\"p\">{`namespace: prod`}</inlineCode>{` to point to the production database that is running outside of the cluster on-premise or somewhere else. For a typical `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{`, a ClusterIP is provisioned and `}<inlineCode parentName=\"p\">{`kube-dns`}</inlineCode>{` creates an A record to route to the `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{`. If we need to route to the DNS name of an external service, we can use the `}<inlineCode parentName=\"p\">{`ExternalName`}</inlineCode>{` type to have `}<inlineCode parentName=\"p\">{`kube-dns`}</inlineCode>{` create a CNAME record instead.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`kind: Service\napiVersion: v1\nmetadata:  \n  name: external-database\nspec:\n  type: ExternalName\n  externalName: \"external.database.galenballew.fyi\"\n`}</code></pre>\n    <p>{`If the external database is only accessible via an IP address (or multiple IP addresses) you can create a `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` without a `}<inlineCode parentName=\"p\">{`spec`}</inlineCode>{` (i.e., without a label selector and without `}<inlineCode parentName=\"p\">{`ExternalName`}</inlineCode>{` type). This will create a ClusterIP for the service and an A record, but there will be no IP addresses to load balance to. You will need to manually create an `}<inlineCode parentName=\"p\">{`Endpoints`}</inlineCode>{` object and associate it with the `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{`. If the IP address or addresses change, you are also responsible for updating the `}<inlineCode parentName=\"p\">{`Endpoints`}</inlineCode>{` object. You are also responsible for all health checks for external services and how your application will handle unavailability.  `}</p>\n    <p><strong parentName=\"p\">{`Running Reliable Singletons`}</strong><br parentName=\"p\"></br>{`\n`}{`Running a storage solution on a single `}<inlineCode parentName=\"p\">{`Pod`}</inlineCode>{`, VM, or server trades the complexity of distributing the data for the risk of downtime. Within Kubernetes, we can use k8s primitives to run singletons with some measure of reliability by combining `}<inlineCode parentName=\"p\">{`ReplicaSet`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`PersistentVolume`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`PersistentVolumeClaim`}</inlineCode>{` objects. The actual disk is represented using a `}<inlineCode parentName=\"p\">{`PersistentVolume`}</inlineCode>{`. Kubernetes provides drivers for all the major public cloud providers - you just provide the type in the `}<inlineCode parentName=\"p\">{`spec`}</inlineCode>{` and k8s handles the rest. A `}<inlineCode parentName=\"p\">{`PersistentVolumeClaim`}</inlineCode>{` is used decouple our `}<inlineCode parentName=\"p\">{`Pod`}</inlineCode>{` definition from the storage definition. In this way, a `}<inlineCode parentName=\"p\">{`Pod`}</inlineCode>{` manifest can be cloud agnostic by referencing a `}<inlineCode parentName=\"p\">{`PersistentVolumeClaim`}</inlineCode>{` that is composed of `}<inlineCode parentName=\"p\">{`PersistentVolumes`}</inlineCode>{` of various types/providers. Similarly, if we want to decouple our `}<inlineCode parentName=\"p\">{`PersistentVolumeClaim`}</inlineCode>{` from specific, pre-existing `}<inlineCode parentName=\"p\">{`PersistentVolumes`}</inlineCode>{`, we can define a `}<inlineCode parentName=\"p\">{`StorageClass`}</inlineCode>{` object that can be referenced by a `}<inlineCode parentName=\"p\">{`PersistentVolumeClaim`}</inlineCode>{`. This object allows k8s operators to create disk on-demand and enables dynamic volume provisioning.  `}</p>\n    <p><strong parentName=\"p\">{`StatefulSets`}</strong><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`StatefulSet`}</inlineCode>{`s are very similar to `}<inlineCode parentName=\"p\">{`ReplicaSets`}</inlineCode>{`, except for 3 differences:  `}</p>\n    <ol>\n      <li parentName=\"ol\">{`Each replica gets a persistent hostname with a unique index instead of the random suffix usually attached by the `}<inlineCode parentName=\"li\">{`ReplicaSet`}</inlineCode>{` controller (e.g., database-0, database-1, ..., database-n)  `}</li>\n      <li parentName=\"ol\">{`Each replica is created in order from lowest to highest index. Creation is blocked until the preceding replica is healthy and available instead of creating all the replicas in parallel. This also applies to scaling up.  `}</li>\n      <li parentName=\"ol\">{`When deleted, each replica is deleted in order from highest to lowest index. This also applies to scaling down.`}<br parentName=\"li\"></br>\n        {`When you create a `}<inlineCode parentName=\"li\">{`StatefulSet`}</inlineCode>{`, you will need to create a \"headless\" `}<inlineCode parentName=\"li\">{`Service`}</inlineCode>{` to manage it: a `}<inlineCode parentName=\"li\">{`Service`}</inlineCode>{` that does not provision a cluster virtual IP address. Since each replica in the `}<inlineCode parentName=\"li\">{`StatefulSet`}</inlineCode>{` is unique, it doesn't make sense to have a load-balancing IP for them. To create a headless `}<inlineCode parentName=\"li\">{`Service`}</inlineCode>{`, simply use `}<inlineCode parentName=\"li\">{`clusterIP: None`}</inlineCode>{` in the specification. After the service is created, a DNS entry will be created for each unique replica, as well as a DNS entry for the `}<inlineCode parentName=\"li\">{`StatefulSet`}</inlineCode>{` itself that contains the addresses of all the replicas. These well-defined, persistent names for each replica and the ability to route to them is critical when configuring a replicated storage solution. For actual disk, `}<inlineCode parentName=\"li\">{`StatefulSet`}</inlineCode>{`s will need to use `}<inlineCode parentName=\"li\">{`volumeClaimTemplates`}</inlineCode>{` since there will be multiple replicas (they can't all use the same unique volume claim). The volume claim template can be configured to reference a `}<inlineCode parentName=\"li\">{`StorageClass`}</inlineCode>{` to enable dynamic provisioning.    `}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Bonus material:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/operator-framework/awesome-operators\"\n      }}>{`Operators`}</a>{` are incredibly useful in Kubernetes. They include the logic needed to have applications behave as desired within Kubernetes (e.g., scaling, sharding, and promotion for a distributed database). Check out `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/operator-framework/awesome-operators\"\n      }}>{`Awesome Operators`}</a>{` to see examples.`}</p>\n    <hr></hr>\n    <h2>{`Chapter 14: Deploying Real-World Applications`}</h2>\n    <p>{`This chapter presents 3 different walk-throughs of deploying real-world applications. The applications are `}<a parentName=\"p\" {...{\n        \"href\": \"https://parseplatform.org/\"\n      }}>{`Parse`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://ghost.org/\"\n      }}>{`Ghost`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"https://redis.io/\"\n      }}>{`Redis`}</a>{`. `}</p>\n    <h2>{`Appendix A: Building a Raspberry Pi Kubernetes Cluster`}</h2>\n    <p>{`The appendix includes instructons on how to set up a cluster of `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.raspberrypi.org/\"\n      }}>{`Raspberry Pi`}</a>{` devices and install Kubernetes on them. `}</p>\n    <hr></hr>\n    <h1>{`Resources:`}</h1>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`Kubernetes Up & Running`}</em>{` `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/kubernetes-up-and-running\"\n        }}>{`GitHub repository`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\"\n        }}>{`Deployments`}</a>{` - k8s documentation`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Continue Reading`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`[Part 1]`}{`({{ site.baseurl }}{% link _posts/2019-09-08-kuar-part1.md %})`}</li>\n      <li parentName=\"ul\">{`[Part 2]`}{`({{ site.baseurl }}{% link _posts/2019-09-09-kuar-part2.md %})`}</li>\n      <li parentName=\"ul\">{`[Part 3]`}{`({{ site.baseurl }}{% link _posts/2019-09-12-kuar-part3.md %})`}</li>\n      <li parentName=\"ul\">{`[Part 4]`}{`({{ site.baseurl }}{% link _posts/2019-09-15-kuar-part4.md %})`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}