{"expireTime":9007200864531304000,"key":"gatsby-plugin-mdx-entire-payload-21829c753639b58a4af8f996a048e3d2-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Abstract","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":11,"offset":10},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":11,"offset":10},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These are the raw format notes that I took while studying for the ","position":{"start":{"line":3,"column":1,"offset":12},"end":{"line":3,"column":67,"offset":78},"indent":[]}},{"type":"link","title":null,"url":"https://cloud.google.com/certification/cloud-developer","children":[{"type":"text","value":"Google Cloud Professional Cloud Developer Certification","position":{"start":{"line":3,"column":68,"offset":79},"end":{"line":3,"column":123,"offset":134},"indent":[]}}],"position":{"start":{"line":3,"column":67,"offset":78},"end":{"line":3,"column":180,"offset":191},"indent":[]}},{"type":"text","value":". I've linked to the various materials that I used to study in the ","position":{"start":{"line":3,"column":180,"offset":191},"end":{"line":3,"column":247,"offset":258},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Resources","position":{"start":{"line":3,"column":249,"offset":260},"end":{"line":3,"column":258,"offset":269},"indent":[]}}],"position":{"start":{"line":3,"column":247,"offset":258},"end":{"line":3,"column":260,"offset":271},"indent":[]}},{"type":"text","value":" section at the bottom. I passed the test and am ","position":{"start":{"line":3,"column":260,"offset":271},"end":{"line":3,"column":309,"offset":320},"indent":[]}},{"type":"link","title":null,"url":"https://www.credential.net/profile/galenballew/wallet","children":[{"type":"text","value":"officially certified!","position":{"start":{"line":3,"column":310,"offset":321},"end":{"line":3,"column":331,"offset":342},"indent":[]}}],"position":{"start":{"line":3,"column":309,"offset":320},"end":{"line":3,"column":387,"offset":398},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":12},"end":{"line":3,"column":387,"offset":398},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":5,"column":1,"offset":400},"end":{"line":5,"column":4,"offset":403},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Code and Environment Management","position":{"start":{"line":7,"column":3,"offset":407},"end":{"line":7,"column":34,"offset":438},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":405},"end":{"line":7,"column":34,"offset":438},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use git or something similar","position":{"start":{"line":8,"column":3,"offset":441},"end":{"line":8,"column":31,"offset":469},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":441},"end":{"line":8,"column":31,"offset":469},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":439},"end":{"line":8,"column":31,"offset":469},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"do not store jar file or other binaries in git","position":{"start":{"line":9,"column":3,"offset":472},"end":{"line":9,"column":49,"offset":518},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":472},"end":{"line":9,"column":49,"offset":518},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"build them on demand","position":{"start":{"line":10,"column":5,"offset":523},"end":{"line":10,"column":25,"offset":543},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":523},"end":{"line":10,"column":25,"offset":543},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":521},"end":{"line":10,"column":25,"offset":543},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":521},"end":{"line":10,"column":25,"offset":543},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":470},"end":{"line":10,"column":25,"offset":543},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"do not store dependencies in git","position":{"start":{"line":11,"column":3,"offset":546},"end":{"line":11,"column":35,"offset":578},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":546},"end":{"line":11,"column":35,"offset":578},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"install them via a requirements file at build","position":{"start":{"line":12,"column":5,"offset":583},"end":{"line":12,"column":50,"offset":628},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":583},"end":{"line":12,"column":50,"offset":628},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":581},"end":{"line":12,"column":50,"offset":628},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"remember to use explicit versions!","position":{"start":{"line":13,"column":5,"offset":633},"end":{"line":13,"column":39,"offset":667},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":633},"end":{"line":13,"column":39,"offset":667},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":631},"end":{"line":13,"column":39,"offset":667},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":581},"end":{"line":13,"column":39,"offset":667},"indent":[3]}}],"position":{"start":{"line":11,"column":1,"offset":544},"end":{"line":13,"column":39,"offset":667},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"don't store configuration constants within the code itself","position":{"start":{"line":14,"column":3,"offset":670},"end":{"line":14,"column":61,"offset":728},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":670},"end":{"line":14,"column":61,"offset":728},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"use a separate configuration file","position":{"start":{"line":15,"column":5,"offset":733},"end":{"line":15,"column":38,"offset":766},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":733},"end":{"line":15,"column":38,"offset":766},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":731},"end":{"line":15,"column":38,"offset":766},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"set them as environment varibles ","position":{"start":{"line":16,"column":5,"offset":771},"end":{"line":16,"column":38,"offset":804},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":771},"end":{"line":16,"column":38,"offset":804},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":769},"end":{"line":16,"column":38,"offset":804},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":731},"end":{"line":16,"column":38,"offset":804},"indent":[3]}}],"position":{"start":{"line":14,"column":1,"offset":668},"end":{"line":16,"column":38,"offset":804},"indent":[1,1]}}],"position":{"start":{"line":8,"column":1,"offset":439},"end":{"line":16,"column":38,"offset":804},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Benefits of microservice architecture compared to a monolithic application:","position":{"start":{"line":18,"column":1,"offset":806},"end":{"line":18,"column":76,"offset":881},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":806},"end":{"line":18,"column":76,"offset":881},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"service boundaries roughly match business boundaries. e.g., payments are processed via the payments service, invoicing is done by the invoicing service.","position":{"start":{"line":19,"column":3,"offset":884},"end":{"line":19,"column":155,"offset":1036},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":884},"end":{"line":19,"column":155,"offset":1036},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":882},"end":{"line":19,"column":155,"offset":1036},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"services can be updated, deployed, and ","position":{"start":{"line":20,"column":3,"offset":1039},"end":{"line":20,"column":42,"offset":1078},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"scaled","position":{"start":{"line":20,"column":44,"offset":1080},"end":{"line":20,"column":50,"offset":1086},"indent":[]}}],"position":{"start":{"line":20,"column":42,"offset":1078},"end":{"line":20,"column":52,"offset":1088},"indent":[]}},{"type":"text","value":" independently of each other.","position":{"start":{"line":20,"column":52,"offset":1088},"end":{"line":20,"column":81,"offset":1117},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":1039},"end":{"line":20,"column":81,"offset":1117},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1037},"end":{"line":20,"column":81,"offset":1117},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":882},"end":{"line":20,"column":81,"offset":1117},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In order to achieve the promise of microservices, each service must be stateless. Being stateful causes availability issues if an instance of a service goes down and accessing a shared state is a bottleneck for scalability. Stateless service instances can start up quickly and shutdown gracefully. ","position":{"start":{"line":22,"column":1,"offset":1119},"end":{"line":22,"column":299,"offset":1417},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1119},"end":{"line":22,"column":299,"offset":1417},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":24,"column":1,"offset":1419},"end":{"line":24,"column":5,"offset":1423},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Security, Reliability, and Migration","position":{"start":{"line":26,"column":3,"offset":1427},"end":{"line":26,"column":39,"offset":1463},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1425},"end":{"line":26,"column":39,"offset":1463},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"implement healthchecks on storage, database, compute, network, etc","position":{"start":{"line":27,"column":3,"offset":1466},"end":{"line":27,"column":69,"offset":1532},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":1466},"end":{"line":27,"column":69,"offset":1532},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"you can use this to route requests to unhealthy enpoints to a status page and return a 200.","position":{"start":{"line":28,"column":5,"offset":1537},"end":{"line":28,"column":96,"offset":1628},"indent":[]}}],"position":{"start":{"line":28,"column":5,"offset":1537},"end":{"line":28,"column":96,"offset":1628},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":1535},"end":{"line":28,"column":96,"offset":1628},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":1535},"end":{"line":28,"column":96,"offset":1628},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1464},"end":{"line":28,"column":96,"offset":1628},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"collect, monitor, analyze logs. you can use log-based metrics to enable event triggering (e.g., autoscaling, notification, etc)","position":{"start":{"line":29,"column":3,"offset":1631},"end":{"line":29,"column":130,"offset":1758},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":1631},"end":{"line":29,"column":130,"offset":1758},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1629},"end":{"line":29,"column":130,"offset":1758},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"applications must be be resilient to both transient and long-lasting errors when accessing data/resources in a distributed system.","position":{"start":{"line":30,"column":3,"offset":1761},"end":{"line":30,"column":133,"offset":1891},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":1761},"end":{"line":30,"column":133,"offset":1891},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"for transient errors, use ","position":{"start":{"line":31,"column":6,"offset":1897},"end":{"line":31,"column":32,"offset":1923},"indent":[]}},{"type":"inlineCode","value":"retry","position":{"start":{"line":31,"column":32,"offset":1923},"end":{"line":31,"column":39,"offset":1930},"indent":[]}},{"type":"text","value":" logic with exponential backoff ","position":{"start":{"line":31,"column":39,"offset":1930},"end":{"line":31,"column":71,"offset":1962},"indent":[]}}],"position":{"start":{"line":31,"column":6,"offset":1897},"end":{"line":31,"column":71,"offset":1962},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":1894},"end":{"line":31,"column":71,"offset":1962},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"for long running errors, use flags/toggles to avoid/darken the service until it can be restored","position":{"start":{"line":32,"column":6,"offset":1968},"end":{"line":32,"column":101,"offset":2063},"indent":[]}}],"position":{"start":{"line":32,"column":6,"offset":1968},"end":{"line":32,"column":101,"offset":2063},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"called \"implementing a circuit breaker\"","position":{"start":{"line":33,"column":9,"offset":2072},"end":{"line":33,"column":48,"offset":2111},"indent":[]}}],"position":{"start":{"line":33,"column":9,"offset":2072},"end":{"line":33,"column":48,"offset":2111},"indent":[]}}],"position":{"start":{"line":33,"column":6,"offset":2069},"end":{"line":33,"column":48,"offset":2111},"indent":[]}}],"position":{"start":{"line":33,"column":6,"offset":2069},"end":{"line":33,"column":48,"offset":2111},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":1965},"end":{"line":33,"column":48,"offset":2111},"indent":[3]}}],"position":{"start":{"line":31,"column":3,"offset":1894},"end":{"line":33,"column":48,"offset":2111},"indent":[3,3]}}],"position":{"start":{"line":30,"column":1,"offset":1759},"end":{"line":33,"column":48,"offset":2111},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"perform high-availability/load testing and develop a disastery recovery plan","position":{"start":{"line":34,"column":3,"offset":2114},"end":{"line":34,"column":79,"offset":2190},"indent":[]}}],"position":{"start":{"line":34,"column":3,"offset":2114},"end":{"line":34,"column":79,"offset":2190},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"this is in addition to functional and performance testing","position":{"start":{"line":35,"column":5,"offset":2195},"end":{"line":35,"column":62,"offset":2252},"indent":[]}}],"position":{"start":{"line":35,"column":5,"offset":2195},"end":{"line":35,"column":62,"offset":2252},"indent":[]}}],"position":{"start":{"line":35,"column":3,"offset":2193},"end":{"line":35,"column":62,"offset":2252},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"execute your disaster recovery plan as part of a scheduled \"game day\" by simulating failures","position":{"start":{"line":36,"column":5,"offset":2257},"end":{"line":36,"column":97,"offset":2349},"indent":[]}}],"position":{"start":{"line":36,"column":5,"offset":2257},"end":{"line":36,"column":97,"offset":2349},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"example failure scenarios include region/zone failure, deployment rollback, or network connectivity errors","position":{"start":{"line":37,"column":7,"offset":2356},"end":{"line":37,"column":113,"offset":2462},"indent":[]}}],"position":{"start":{"line":37,"column":7,"offset":2356},"end":{"line":37,"column":113,"offset":2462},"indent":[]}}],"position":{"start":{"line":37,"column":5,"offset":2354},"end":{"line":37,"column":113,"offset":2462},"indent":[]}}],"position":{"start":{"line":37,"column":5,"offset":2354},"end":{"line":37,"column":113,"offset":2462},"indent":[]}}],"position":{"start":{"line":36,"column":3,"offset":2255},"end":{"line":37,"column":113,"offset":2462},"indent":[3]}}],"position":{"start":{"line":35,"column":3,"offset":2193},"end":{"line":37,"column":113,"offset":2462},"indent":[3,3]}}],"position":{"start":{"line":34,"column":1,"offset":2112},"end":{"line":37,"column":113,"offset":2462},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"automate wherever possible, working towards a DevSecOps methodology via CICD pipelines","position":{"start":{"line":38,"column":3,"offset":2465},"end":{"line":38,"column":89,"offset":2551},"indent":[]}}],"position":{"start":{"line":38,"column":3,"offset":2465},"end":{"line":38,"column":89,"offset":2551},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":2463},"end":{"line":38,"column":89,"offset":2551},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"use the strangler method to re-architect applications","position":{"start":{"line":39,"column":3,"offset":2554},"end":{"line":39,"column":56,"offset":2607},"indent":[]}}],"position":{"start":{"line":39,"column":3,"offset":2554},"end":{"line":39,"column":56,"offset":2607},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"migrate one component of a monolithic application at a time while leaving the original application fully functional","position":{"start":{"line":40,"column":6,"offset":2613},"end":{"line":40,"column":121,"offset":2728},"indent":[]}}],"position":{"start":{"line":40,"column":6,"offset":2613},"end":{"line":40,"column":121,"offset":2728},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":2610},"end":{"line":40,"column":121,"offset":2728},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"requests can be easily directed to the new or old appliction","position":{"start":{"line":41,"column":6,"offset":2734},"end":{"line":41,"column":66,"offset":2794},"indent":[]}}],"position":{"start":{"line":41,"column":6,"offset":2734},"end":{"line":41,"column":66,"offset":2794},"indent":[]}}],"position":{"start":{"line":41,"column":3,"offset":2731},"end":{"line":41,"column":66,"offset":2794},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"this is a low risk migration pattern since it will not affect any business critical needs","position":{"start":{"line":42,"column":6,"offset":2800},"end":{"line":42,"column":95,"offset":2889},"indent":[]}}],"position":{"start":{"line":42,"column":6,"offset":2800},"end":{"line":42,"column":95,"offset":2889},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":2797},"end":{"line":42,"column":95,"offset":2889},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":2610},"end":{"line":42,"column":95,"offset":2889},"indent":[3,3]}}],"position":{"start":{"line":39,"column":1,"offset":2552},"end":{"line":42,"column":95,"offset":2889},"indent":[1,1,1]}}],"position":{"start":{"line":27,"column":1,"offset":1464},"end":{"line":42,"column":95,"offset":2889},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":44,"column":1,"offset":2891},"end":{"line":44,"column":4,"offset":2894},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Datastore","position":{"start":{"line":46,"column":3,"offset":2898},"end":{"line":46,"column":12,"offset":2907},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2896},"end":{"line":46,"column":12,"offset":2907},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Objects are called ","position":{"start":{"line":47,"column":3,"offset":2910},"end":{"line":47,"column":22,"offset":2929},"indent":[]}},{"type":"inlineCode","value":"entities","position":{"start":{"line":47,"column":22,"offset":2929},"end":{"line":47,"column":32,"offset":2939},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":47,"column":32,"offset":2939},"end":{"line":47,"column":33,"offset":2940},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":2910},"end":{"line":47,"column":33,"offset":2940},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":2908},"end":{"line":47,"column":33,"offset":2940},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Entities are either root entities or have ","position":{"start":{"line":48,"column":3,"offset":2943},"end":{"line":48,"column":45,"offset":2985},"indent":[]}},{"type":"inlineCode","value":"ancestors","position":{"start":{"line":48,"column":45,"offset":2985},"end":{"line":48,"column":56,"offset":2996},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":48,"column":56,"offset":2996},"end":{"line":48,"column":57,"offset":2997},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":2943},"end":{"line":48,"column":57,"offset":2997},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":2941},"end":{"line":48,"column":57,"offset":2997},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Entities are composed of their ","position":{"start":{"line":49,"column":3,"offset":3000},"end":{"line":49,"column":34,"offset":3031},"indent":[]}},{"type":"inlineCode","value":"key","position":{"start":{"line":49,"column":34,"offset":3031},"end":{"line":49,"column":39,"offset":3036},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":49,"column":39,"offset":3036},"end":{"line":49,"column":44,"offset":3041},"indent":[]}},{"type":"inlineCode","value":"properties","position":{"start":{"line":49,"column":44,"offset":3041},"end":{"line":49,"column":56,"offset":3053},"indent":[]}}],"position":{"start":{"line":49,"column":3,"offset":3000},"end":{"line":49,"column":56,"offset":3053},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"key is composed of namespace, entity ","position":{"start":{"line":50,"column":5,"offset":3058},"end":{"line":50,"column":42,"offset":3095},"indent":[]}},{"type":"inlineCode","value":"kind","position":{"start":{"line":50,"column":42,"offset":3095},"end":{"line":50,"column":48,"offset":3101},"indent":[]}},{"type":"text","value":", id, and ancestor id","position":{"start":{"line":50,"column":48,"offset":3101},"end":{"line":50,"column":69,"offset":3122},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":3058},"end":{"line":50,"column":69,"offset":3122},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":3056},"end":{"line":50,"column":69,"offset":3122},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"properties can have one or more values","position":{"start":{"line":51,"column":5,"offset":3127},"end":{"line":51,"column":43,"offset":3165},"indent":[]}}],"position":{"start":{"line":51,"column":5,"offset":3127},"end":{"line":51,"column":43,"offset":3165},"indent":[]}}],"position":{"start":{"line":51,"column":3,"offset":3125},"end":{"line":51,"column":43,"offset":3165},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":3056},"end":{"line":51,"column":43,"offset":3165},"indent":[3]}}],"position":{"start":{"line":49,"column":1,"offset":2998},"end":{"line":51,"column":43,"offset":3165},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"operations on one or more entities are called ","position":{"start":{"line":52,"column":3,"offset":3168},"end":{"line":52,"column":49,"offset":3214},"indent":[]}},{"type":"inlineCode","value":"transactions","position":{"start":{"line":52,"column":49,"offset":3214},"end":{"line":52,"column":63,"offset":3228},"indent":[]}},{"type":"text","value":" and are ","position":{"start":{"line":52,"column":63,"offset":3228},"end":{"line":52,"column":72,"offset":3237},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"atomic","position":{"start":{"line":52,"column":73,"offset":3238},"end":{"line":52,"column":79,"offset":3244},"indent":[]}}],"position":{"start":{"line":52,"column":72,"offset":3237},"end":{"line":52,"column":80,"offset":3245},"indent":[]}}],"position":{"start":{"line":52,"column":3,"offset":3168},"end":{"line":52,"column":80,"offset":3245},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"atomicity means that either ","position":{"start":{"line":53,"column":5,"offset":3250},"end":{"line":53,"column":33,"offset":3278},"indent":[]}},{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"all","position":{"start":{"line":53,"column":36,"offset":3281},"end":{"line":53,"column":39,"offset":3284},"indent":[]}}],"position":{"start":{"line":53,"column":35,"offset":3280},"end":{"line":53,"column":40,"offset":3285},"indent":[]}}],"position":{"start":{"line":53,"column":33,"offset":3278},"end":{"line":53,"column":42,"offset":3287},"indent":[]}},{"type":"text","value":" operations in a transaction are applied or ","position":{"start":{"line":53,"column":42,"offset":3287},"end":{"line":53,"column":86,"offset":3331},"indent":[]}},{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"none","position":{"start":{"line":53,"column":89,"offset":3334},"end":{"line":53,"column":93,"offset":3338},"indent":[]}}],"position":{"start":{"line":53,"column":88,"offset":3333},"end":{"line":53,"column":94,"offset":3339},"indent":[]}}],"position":{"start":{"line":53,"column":86,"offset":3331},"end":{"line":53,"column":96,"offset":3341},"indent":[]}},{"type":"text","value":" are.","position":{"start":{"line":53,"column":96,"offset":3341},"end":{"line":53,"column":101,"offset":3346},"indent":[]}}],"position":{"start":{"line":53,"column":5,"offset":3250},"end":{"line":53,"column":101,"offset":3346},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":3248},"end":{"line":53,"column":101,"offset":3346},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":3248},"end":{"line":53,"column":101,"offset":3346},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":3166},"end":{"line":53,"column":101,"offset":3346},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"entities of the same kind do not need to have a consistent property set","position":{"start":{"line":54,"column":3,"offset":3349},"end":{"line":54,"column":74,"offset":3420},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":3349},"end":{"line":54,"column":74,"offset":3420},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":3347},"end":{"line":55,"column":1,"offset":3421},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"built-in indexes","position":{"start":{"line":56,"column":3,"offset":3424},"end":{"line":56,"column":19,"offset":3440},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":3424},"end":{"line":56,"column":19,"offset":3440},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"automatic index of each property of each kind","position":{"start":{"line":57,"column":5,"offset":3445},"end":{"line":57,"column":50,"offset":3490},"indent":[]}}],"position":{"start":{"line":57,"column":5,"offset":3445},"end":{"line":57,"column":50,"offset":3490},"indent":[]}}],"position":{"start":{"line":57,"column":3,"offset":3443},"end":{"line":57,"column":50,"offset":3490},"indent":[]}}],"position":{"start":{"line":57,"column":3,"offset":3443},"end":{"line":57,"column":50,"offset":3490},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":3422},"end":{"line":57,"column":50,"offset":3490},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"composite indexes","position":{"start":{"line":58,"column":3,"offset":3493},"end":{"line":58,"column":20,"offset":3510},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":3493},"end":{"line":58,"column":20,"offset":3510},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"index multiple property values ","position":{"start":{"line":59,"column":5,"offset":3515},"end":{"line":59,"column":36,"offset":3546},"indent":[]}}],"position":{"start":{"line":59,"column":5,"offset":3515},"end":{"line":59,"column":36,"offset":3546},"indent":[]}}],"position":{"start":{"line":59,"column":3,"offset":3513},"end":{"line":59,"column":36,"offset":3546},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"defined in an index configuration file","position":{"start":{"line":60,"column":5,"offset":3551},"end":{"line":60,"column":43,"offset":3589},"indent":[]}}],"position":{"start":{"line":60,"column":5,"offset":3551},"end":{"line":60,"column":43,"offset":3589},"indent":[]}}],"position":{"start":{"line":60,"column":3,"offset":3549},"end":{"line":60,"column":43,"offset":3589},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"too many will increase latency to achieve consistency","position":{"start":{"line":61,"column":5,"offset":3594},"end":{"line":61,"column":58,"offset":3647},"indent":[]}}],"position":{"start":{"line":61,"column":5,"offset":3594},"end":{"line":61,"column":58,"offset":3647},"indent":[]}}],"position":{"start":{"line":61,"column":3,"offset":3592},"end":{"line":61,"column":58,"offset":3647},"indent":[]}}],"position":{"start":{"line":59,"column":3,"offset":3513},"end":{"line":61,"column":58,"offset":3647},"indent":[3,3]}}],"position":{"start":{"line":58,"column":1,"offset":3491},"end":{"line":61,"column":58,"offset":3647},"indent":[1,1,1]}}],"position":{"start":{"line":47,"column":1,"offset":2908},"end":{"line":61,"column":58,"offset":3647},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"3 types of queries:","position":{"start":{"line":63,"column":1,"offset":3649},"end":{"line":63,"column":20,"offset":3668},"indent":[]}},{"type":"break","position":{"start":{"line":63,"column":20,"offset":3668},"end":{"line":64,"column":1,"offset":3671},"indent":[1]}},{"type":"text","value":"  1) use ","position":{"start":{"line":64,"column":1,"offset":3671},"end":{"line":64,"column":10,"offset":3680},"indent":[]}},{"type":"inlineCode","value":"keys-only","position":{"start":{"line":64,"column":10,"offset":3680},"end":{"line":64,"column":21,"offset":3691},"indent":[]}},{"type":"text","value":" when you only need the entity key","position":{"start":{"line":64,"column":21,"offset":3691},"end":{"line":64,"column":55,"offset":3725},"indent":[]}},{"type":"break","position":{"start":{"line":64,"column":55,"offset":3725},"end":{"line":65,"column":1,"offset":3728},"indent":[1]}},{"type":"text","value":"  2) use ","position":{"start":{"line":65,"column":1,"offset":3728},"end":{"line":65,"column":10,"offset":3737},"indent":[]}},{"type":"inlineCode","value":"projection-query","position":{"start":{"line":65,"column":10,"offset":3737},"end":{"line":65,"column":28,"offset":3755},"indent":[]}},{"type":"text","value":" when you only need specific properties from the entity or properties included in the query filter","position":{"start":{"line":65,"column":28,"offset":3755},"end":{"line":65,"column":126,"offset":3853},"indent":[]}},{"type":"break","position":{"start":{"line":65,"column":126,"offset":3853},"end":{"line":66,"column":1,"offset":3857},"indent":[1]}},{"type":"text","value":"  3) use ","position":{"start":{"line":66,"column":1,"offset":3857},"end":{"line":66,"column":10,"offset":3866},"indent":[]}},{"type":"inlineCode","value":"ancestor-query","position":{"start":{"line":66,"column":10,"offset":3866},"end":{"line":66,"column":26,"offset":3882},"indent":[]}},{"type":"text","value":" when you need strongly consistency  ","position":{"start":{"line":66,"column":26,"offset":3882},"end":{"line":66,"column":63,"offset":3919},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":3649},"end":{"line":66,"column":63,"offset":3919},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Datastore is excellent for structured data that is non-relational. It scales extremely well. However, unlike relational databases, it does not support ","position":{"start":{"line":68,"column":1,"offset":3921},"end":{"line":68,"column":152,"offset":4072},"indent":[]}},{"type":"inlineCode","value":"join","position":{"start":{"line":68,"column":152,"offset":4072},"end":{"line":68,"column":158,"offset":4078},"indent":[]}},{"type":"text","value":" operations. It does not support inequality filtering on multiple properties. It does not support filtering based on results of a subquery. Practically speaking, this means that you will often make two or more inequality queries and then compute the intersection. ","position":{"start":{"line":68,"column":158,"offset":4078},"end":{"line":68,"column":422,"offset":4342},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":3921},"end":{"line":68,"column":422,"offset":4342},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Remember that Datastore stores keys lexographically. High read/write activity to a local neighborhood of keys (or a relatively new key) will result in bottlenecks. For numeric keys, you can use the allocateIds() method to get keys that are distributed for performance. Outside of that, avoid negative numbers, the number zero, and monotomically increasing numbers.","position":{"start":{"line":70,"column":1,"offset":4344},"end":{"line":70,"column":365,"offset":4708},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":4344},"end":{"line":70,"column":365,"offset":4708},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need higher read capacity of a portion of the key range, you can use replication. ","position":{"start":{"line":72,"column":1,"offset":4710},"end":{"line":72,"column":90,"offset":4799},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":4710},"end":{"line":72,"column":90,"offset":4799},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Datastore transactions can fail when they run longer than 60 seconds, there are too many concurrent writes to the same entity group, or a transaction operates on more than 25 different entity groups. Datastore can return exceptions in cases where the transaction will eventually be committed succesfully - therefore, design your transactions to be idempotent. Idempotent means that a the final state will be the same even if a transaction is processed multiple times.","position":{"start":{"line":74,"column":1,"offset":4801},"end":{"line":74,"column":468,"offset":5268},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":4801},"end":{"line":74,"column":468,"offset":5268},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":76,"column":1,"offset":5270},"end":{"line":76,"column":5,"offset":5274},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Monitoring and Tuning Performance","position":{"start":{"line":77,"column":3,"offset":5277},"end":{"line":77,"column":36,"offset":5310},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":5275},"end":{"line":77,"column":36,"offset":5310},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Be sure to measure and visualize The 4 Golden Metrics:","position":{"start":{"line":78,"column":1,"offset":5311},"end":{"line":78,"column":55,"offset":5365},"indent":[]}},{"type":"break","position":{"start":{"line":78,"column":55,"offset":5365},"end":{"line":79,"column":1,"offset":5368},"indent":[1]}},{"type":"text","value":"1) Latency  ","position":{"start":{"line":79,"column":1,"offset":5368},"end":{"line":79,"column":13,"offset":5380},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":5311},"end":{"line":79,"column":13,"offset":5380},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Differentiate between successful and unsuccessful requests","position":{"start":{"line":80,"column":6,"offset":5386},"end":{"line":80,"column":64,"offset":5444},"indent":[]}},{"type":"break","position":{"start":{"line":80,"column":64,"offset":5444},"end":{"line":81,"column":1,"offset":5447},"indent":[1]}},{"type":"text","value":"2) Traffic","position":{"start":{"line":81,"column":1,"offset":5447},"end":{"line":81,"column":11,"offset":5457},"indent":[]}},{"type":"break","position":{"start":{"line":81,"column":11,"offset":5457},"end":{"line":82,"column":1,"offset":5460},"indent":[1]}},{"type":"text","value":"3) Errors","position":{"start":{"line":82,"column":1,"offset":5460},"end":{"line":82,"column":10,"offset":5469},"indent":[]}},{"type":"break","position":{"start":{"line":82,"column":10,"offset":5469},"end":{"line":83,"column":1,"offset":5472},"indent":[1]}},{"type":"text","value":"4) Saturation  ","position":{"start":{"line":83,"column":1,"offset":5472},"end":{"line":83,"column":16,"offset":5487},"indent":[]}}],"position":{"start":{"line":80,"column":6,"offset":5386},"end":{"line":83,"column":16,"offset":5487},"indent":[1,1,1]}}],"position":{"start":{"line":80,"column":1,"offset":5381},"end":{"line":83,"column":16,"offset":5487},"indent":[1,1,1]}}],"position":{"start":{"line":80,"column":1,"offset":5381},"end":{"line":83,"column":16,"offset":5487},"indent":[1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":85,"column":1,"offset":5489},"end":{"line":85,"column":4,"offset":5492},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Resources:","position":{"start":{"line":87,"column":3,"offset":5496},"end":{"line":87,"column":13,"offset":5506},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":5494},"end":{"line":87,"column":14,"offset":5507},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://cloud.google.com/blog/products/gcp/12-best-practices-for-user-account","children":[{"type":"text","value":"12 best practices for user account, authorization and password management","position":{"start":{"line":88,"column":4,"offset":5511},"end":{"line":88,"column":77,"offset":5584},"indent":[]}}],"position":{"start":{"line":88,"column":3,"offset":5510},"end":{"line":88,"column":157,"offset":5664},"indent":[]}}],"position":{"start":{"line":88,"column":3,"offset":5510},"end":{"line":88,"column":157,"offset":5664},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":5508},"end":{"line":88,"column":157,"offset":5664},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://cloud.google.com/appengine/docs/the-appengine-environments","children":[{"type":"text","value":"Choosing an App Engine environment","position":{"start":{"line":89,"column":4,"offset":5668},"end":{"line":89,"column":38,"offset":5702},"indent":[]}}],"position":{"start":{"line":89,"column":3,"offset":5667},"end":{"line":89,"column":107,"offset":5771},"indent":[]}}],"position":{"start":{"line":89,"column":3,"offset":5667},"end":{"line":89,"column":107,"offset":5771},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":5665},"end":{"line":89,"column":107,"offset":5771},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.coursera.org/specializations/developing-apps-gcp","children":[{"type":"text","value":"Developing Applications with Google Cloud Platform Specialization","position":{"start":{"line":90,"column":4,"offset":5775},"end":{"line":90,"column":69,"offset":5840},"indent":[]}}],"position":{"start":{"line":90,"column":3,"offset":5774},"end":{"line":90,"column":132,"offset":5903},"indent":[]}}],"position":{"start":{"line":90,"column":3,"offset":5774},"end":{"line":90,"column":132,"offset":5903},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":5772},"end":{"line":90,"column":132,"offset":5903},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://cloud.google.com/apis/design/","children":[{"type":"text","value":"Google API Design Guide","position":{"start":{"line":91,"column":4,"offset":5907},"end":{"line":91,"column":27,"offset":5930},"indent":[]}}],"position":{"start":{"line":91,"column":3,"offset":5906},"end":{"line":91,"column":67,"offset":5970},"indent":[]}}],"position":{"start":{"line":91,"column":3,"offset":5906},"end":{"line":91,"column":67,"offset":5970},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":5904},"end":{"line":91,"column":67,"offset":5970},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://cloud.google.com/bigtable/docs/schema-design","children":[{"type":"text","value":"Big Table Schema Design","position":{"start":{"line":92,"column":4,"offset":5974},"end":{"line":92,"column":27,"offset":5997},"indent":[]}}],"position":{"start":{"line":92,"column":3,"offset":5973},"end":{"line":92,"column":82,"offset":6052},"indent":[]}}],"position":{"start":{"line":92,"column":3,"offset":5973},"end":{"line":92,"column":82,"offset":6052},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":5971},"end":{"line":92,"column":82,"offset":6052},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://cloud.google.com/bigquery/batch","children":[{"type":"text","value":"Big Query Batch","position":{"start":{"line":93,"column":4,"offset":6056},"end":{"line":93,"column":19,"offset":6071},"indent":[]}}],"position":{"start":{"line":93,"column":3,"offset":6055},"end":{"line":93,"column":61,"offset":6113},"indent":[]}}],"position":{"start":{"line":93,"column":3,"offset":6055},"end":{"line":93,"column":61,"offset":6113},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":6053},"end":{"line":93,"column":61,"offset":6113},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":5508},"end":{"line":93,"column":61,"offset":6113},"indent":[1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"GCP Professional Cloud Developer Certification\",\"date\":\"2019-08-12T00:00:00.000Z\",\"excerpt\":\"Become the AppDev wizard you were meant to be.\",\"categories\":[\"cloud\"],\"tags\":[\"gcp\",\"certification\",\"devops\",\"cicd\"],\"featured_image\":\"/images/feature/1.jpg\",\"comments\":true,\"share\":true}","position":{"start":{"line":96,"column":1,"offset":6116},"end":{"line":96,"column":320,"offset":6435},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":96,"column":320,"offset":6435}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"GCP Professional Cloud Developer Certification\",\n  \"date\": \"2019-08-12T00:00:00.000Z\",\n  \"excerpt\": \"Become the AppDev wizard you were meant to be.\",\n  \"categories\": [\"cloud\"],\n  \"tags\": [\"gcp\", \"certification\", \"devops\", \"cicd\"],\n  \"featured_image\": \"/images/feature/1.jpg\",\n  \"comments\": true,\n  \"share\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Abstract\"), mdx(\"p\", null, \"These are the raw format notes that I took while studying for the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://cloud.google.com/certification/cloud-developer\"\n  }), \"Google Cloud Professional Cloud Developer Certification\"), \". I've linked to the various materials that I used to study in the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Resources\"), \" section at the bottom. I passed the test and am \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.credential.net/profile/galenballew/wallet\"\n  }), \"officially certified!\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Code and Environment Management\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use git or something similar\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"do not store jar file or other binaries in git\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"build them on demand\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"do not store dependencies in git\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"install them via a requirements file at build\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"remember to use explicit versions!\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"don't store configuration constants within the code itself\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use a separate configuration file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"set them as environment varibles \")))), mdx(\"p\", null, \"Benefits of microservice architecture compared to a monolithic application:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"service boundaries roughly match business boundaries. e.g., payments are processed via the payments service, invoicing is done by the invoicing service.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"services can be updated, deployed, and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"scaled\"), \" independently of each other.\")), mdx(\"p\", null, \"In order to achieve the promise of microservices, each service must be stateless. Being stateful causes availability issues if an instance of a service goes down and accessing a shared state is a bottleneck for scalability. Stateless service instances can start up quickly and shutdown gracefully. \"), mdx(\"hr\", null), mdx(\"h1\", null, \"Security, Reliability, and Migration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"implement healthchecks on storage, database, compute, network, etc\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can use this to route requests to unhealthy enpoints to a status page and return a 200.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"collect, monitor, analyze logs. you can use log-based metrics to enable event triggering (e.g., autoscaling, notification, etc)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"applications must be be resilient to both transient and long-lasting errors when accessing data/resources in a distributed system.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"for transient errors, use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"retry\"), \" logic with exponential backoff \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"for long running errors, use flags/toggles to avoid/darken the service until it can be restored\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"called \\\"implementing a circuit breaker\\\"\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"perform high-availability/load testing and develop a disastery recovery plan\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"this is in addition to functional and performance testing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"execute your disaster recovery plan as part of a scheduled \\\"game day\\\" by simulating failures\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"example failure scenarios include region/zone failure, deployment rollback, or network connectivity errors\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"automate wherever possible, working towards a DevSecOps methodology via CICD pipelines\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use the strangler method to re-architect applications\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"migrate one component of a monolithic application at a time while leaving the original application fully functional\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"requests can be easily directed to the new or old appliction\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"this is a low risk migration pattern since it will not affect any business critical needs\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Datastore\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Objects are called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"entities\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Entities are either root entities or have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ancestors\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Entities are composed of their \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"key\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"properties\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"key is composed of namespace, entity \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kind\"), \", id, and ancestor id\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"properties can have one or more values\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"operations on one or more entities are called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"transactions\"), \" and are \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"atomic\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"atomicity means that either \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"all\")), \" operations in a transaction are applied or \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"none\")), \" are.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"entities of the same kind do not need to have a consistent property set\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"built-in indexes\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"automatic index of each property of each kind\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"composite indexes\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"index multiple property values \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"defined in an index configuration file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"too many will increase latency to achieve consistency\")))), mdx(\"p\", null, \"3 types of queries:\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"1) use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"keys-only\"), \" when you only need the entity key\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"2) use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"projection-query\"), \" when you only need specific properties from the entity or properties included in the query filter\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"3) use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ancestor-query\"), \" when you need strongly consistency  \"), mdx(\"p\", null, \"Datastore is excellent for structured data that is non-relational. It scales extremely well. However, unlike relational databases, it does not support \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"join\"), \" operations. It does not support inequality filtering on multiple properties. It does not support filtering based on results of a subquery. Practically speaking, this means that you will often make two or more inequality queries and then compute the intersection. \"), mdx(\"p\", null, \"Remember that Datastore stores keys lexographically. High read/write activity to a local neighborhood of keys (or a relatively new key) will result in bottlenecks. For numeric keys, you can use the allocateIds() method to get keys that are distributed for performance. Outside of that, avoid negative numbers, the number zero, and monotomically increasing numbers.\"), mdx(\"p\", null, \"If you need higher read capacity of a portion of the key range, you can use replication. \"), mdx(\"p\", null, \"Datastore transactions can fail when they run longer than 60 seconds, there are too many concurrent writes to the same entity group, or a transaction operates on more than 25 different entity groups. Datastore can return exceptions in cases where the transaction will eventually be committed succesfully - therefore, design your transactions to be idempotent. Idempotent means that a the final state will be the same even if a transaction is processed multiple times.\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Monitoring and Tuning Performance\"), mdx(\"p\", null, \"Be sure to measure and visualize The 4 Golden Metrics:\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"1) Latency  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Differentiate between successful and unsuccessful requests\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"2) Traffic\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"3) Errors\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"4) Saturation  \")), mdx(\"hr\", null), mdx(\"h1\", null, \"Resources:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://cloud.google.com/blog/products/gcp/12-best-practices-for-user-account\"\n  }), \"12 best practices for user account, authorization and password management\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://cloud.google.com/appengine/docs/the-appengine-environments\"\n  }), \"Choosing an App Engine environment\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.coursera.org/specializations/developing-apps-gcp\"\n  }), \"Developing Applications with Google Cloud Platform Specialization\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://cloud.google.com/apis/design/\"\n  }), \"Google API Design Guide\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://cloud.google.com/bigtable/docs/schema-design\"\n  }), \"Big Table Schema Design\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://cloud.google.com/bigquery/batch\"\n  }), \"Big Query Batch\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"GCP Professional Cloud Developer Certification\",\n  \"date\": \"2019-08-12T00:00:00.000Z\",\n  \"excerpt\": \"Become the AppDev wizard you were meant to be.\",\n  \"categories\": [\"cloud\"],\n  \"tags\": [\"gcp\", \"certification\", \"devops\", \"cicd\"],\n  \"featured_image\": \"/images/feature/1.jpg\",\n  \"comments\": true,\n  \"share\": true\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Abstract`}</h1>\n    <p>{`These are the raw format notes that I took while studying for the `}<a parentName=\"p\" {...{\n        \"href\": \"https://cloud.google.com/certification/cloud-developer\"\n      }}>{`Google Cloud Professional Cloud Developer Certification`}</a>{`. I've linked to the various materials that I used to study in the `}<strong parentName=\"p\">{`Resources`}</strong>{` section at the bottom. I passed the test and am `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.credential.net/profile/galenballew/wallet\"\n      }}>{`officially certified!`}</a></p>\n    <hr></hr>\n    <h1>{`Code and Environment Management`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`Use git or something similar`}</li>\n      <li parentName=\"ul\">{`do not store jar file or other binaries in git`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`build them on demand`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`do not store dependencies in git`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`install them via a requirements file at build`}</li>\n          <li parentName=\"ul\">{`remember to use explicit versions!`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`don't store configuration constants within the code itself`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`use a separate configuration file`}</li>\n          <li parentName=\"ul\">{`set them as environment varibles `}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`Benefits of microservice architecture compared to a monolithic application:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`service boundaries roughly match business boundaries. e.g., payments are processed via the payments service, invoicing is done by the invoicing service.`}</li>\n      <li parentName=\"ul\">{`services can be updated, deployed, and `}<strong parentName=\"li\">{`scaled`}</strong>{` independently of each other.`}</li>\n    </ul>\n    <p>{`In order to achieve the promise of microservices, each service must be stateless. Being stateful causes availability issues if an instance of a service goes down and accessing a shared state is a bottleneck for scalability. Stateless service instances can start up quickly and shutdown gracefully. `}</p>\n    <hr></hr>\n    <h1>{`Security, Reliability, and Migration`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`implement healthchecks on storage, database, compute, network, etc`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`you can use this to route requests to unhealthy enpoints to a status page and return a 200.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`collect, monitor, analyze logs. you can use log-based metrics to enable event triggering (e.g., autoscaling, notification, etc)`}</li>\n      <li parentName=\"ul\">{`applications must be be resilient to both transient and long-lasting errors when accessing data/resources in a distributed system.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`for transient errors, use `}<inlineCode parentName=\"li\">{`retry`}</inlineCode>{` logic with exponential backoff `}</li>\n          <li parentName=\"ul\">{`for long running errors, use flags/toggles to avoid/darken the service until it can be restored`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`called \"implementing a circuit breaker\"`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`perform high-availability/load testing and develop a disastery recovery plan`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`this is in addition to functional and performance testing`}</li>\n          <li parentName=\"ul\">{`execute your disaster recovery plan as part of a scheduled \"game day\" by simulating failures`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`example failure scenarios include region/zone failure, deployment rollback, or network connectivity errors`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`automate wherever possible, working towards a DevSecOps methodology via CICD pipelines`}</li>\n      <li parentName=\"ul\">{`use the strangler method to re-architect applications`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`migrate one component of a monolithic application at a time while leaving the original application fully functional`}</li>\n          <li parentName=\"ul\">{`requests can be easily directed to the new or old appliction`}</li>\n          <li parentName=\"ul\">{`this is a low risk migration pattern since it will not affect any business critical needs`}</li>\n        </ul>\n      </li>\n    </ul>\n    <hr></hr>\n    <h1>{`Datastore`}</h1>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Objects are called `}<inlineCode parentName=\"p\">{`entities`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Entities are either root entities or have `}<inlineCode parentName=\"p\">{`ancestors`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Entities are composed of their `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`properties`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`key is composed of namespace, entity `}<inlineCode parentName=\"li\">{`kind`}</inlineCode>{`, id, and ancestor id`}</li>\n          <li parentName=\"ul\">{`properties can have one or more values`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`operations on one or more entities are called `}<inlineCode parentName=\"p\">{`transactions`}</inlineCode>{` and are `}<em parentName=\"p\">{`atomic`}</em></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`atomicity means that either `}<strong parentName=\"li\"><em parentName=\"strong\">{`all`}</em></strong>{` operations in a transaction are applied or `}<strong parentName=\"li\"><em parentName=\"strong\">{`none`}</em></strong>{` are.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`entities of the same kind do not need to have a consistent property set`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`built-in indexes`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`automatic index of each property of each kind`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`composite indexes`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`index multiple property values `}</li>\n          <li parentName=\"ul\">{`defined in an index configuration file`}</li>\n          <li parentName=\"ul\">{`too many will increase latency to achieve consistency`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`3 types of queries:`}<br parentName=\"p\"></br>{`\n`}{`1) use `}<inlineCode parentName=\"p\">{`keys-only`}</inlineCode>{` when you only need the entity key`}<br parentName=\"p\"></br>{`\n`}{`2) use `}<inlineCode parentName=\"p\">{`projection-query`}</inlineCode>{` when you only need specific properties from the entity or properties included in the query filter`}<br parentName=\"p\"></br>{`\n`}{`3) use `}<inlineCode parentName=\"p\">{`ancestor-query`}</inlineCode>{` when you need strongly consistency  `}</p>\n    <p>{`Datastore is excellent for structured data that is non-relational. It scales extremely well. However, unlike relational databases, it does not support `}<inlineCode parentName=\"p\">{`join`}</inlineCode>{` operations. It does not support inequality filtering on multiple properties. It does not support filtering based on results of a subquery. Practically speaking, this means that you will often make two or more inequality queries and then compute the intersection. `}</p>\n    <p>{`Remember that Datastore stores keys lexographically. High read/write activity to a local neighborhood of keys (or a relatively new key) will result in bottlenecks. For numeric keys, you can use the allocateIds() method to get keys that are distributed for performance. Outside of that, avoid negative numbers, the number zero, and monotomically increasing numbers.`}</p>\n    <p>{`If you need higher read capacity of a portion of the key range, you can use replication. `}</p>\n    <p>{`Datastore transactions can fail when they run longer than 60 seconds, there are too many concurrent writes to the same entity group, or a transaction operates on more than 25 different entity groups. Datastore can return exceptions in cases where the transaction will eventually be committed succesfully - therefore, design your transactions to be idempotent. Idempotent means that a the final state will be the same even if a transaction is processed multiple times.`}</p>\n    <hr></hr>\n    <h1>{`Monitoring and Tuning Performance`}</h1>\n    <p>{`Be sure to measure and visualize The 4 Golden Metrics:`}<br parentName=\"p\"></br>{`\n`}{`1) Latency  `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Differentiate between successful and unsuccessful requests`}<br parentName=\"li\"></br>\n        {`2) Traffic`}<br parentName=\"li\"></br>\n        {`3) Errors`}<br parentName=\"li\"></br>\n        {`4) Saturation  `}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Resources:`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cloud.google.com/blog/products/gcp/12-best-practices-for-user-account\"\n        }}>{`12 best practices for user account, authorization and password management`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cloud.google.com/appengine/docs/the-appengine-environments\"\n        }}>{`Choosing an App Engine environment`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.coursera.org/specializations/developing-apps-gcp\"\n        }}>{`Developing Applications with Google Cloud Platform Specialization`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cloud.google.com/apis/design/\"\n        }}>{`Google API Design Guide`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cloud.google.com/bigtable/docs/schema-design\"\n        }}>{`Big Table Schema Design`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cloud.google.com/bigquery/batch\"\n        }}>{`Big Query Batch`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}