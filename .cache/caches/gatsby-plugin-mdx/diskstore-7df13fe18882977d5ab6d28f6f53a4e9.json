{"expireTime":9007200864531304000,"key":"gatsby-plugin-mdx-entire-payload-4b679ad4596aaf3ca3669e6ccb71d41f-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"Table of Contents","position":{"start":{"line":1,"column":5,"offset":4},"end":{"line":1,"column":22,"offset":21},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":22,"offset":21},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#abstract","children":[{"type":"text","value":"Abstract","position":{"start":{"line":2,"column":4,"offset":25},"end":{"line":2,"column":12,"offset":33},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":24},"end":{"line":2,"column":24,"offset":45},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":24},"end":{"line":2,"column":24,"offset":45},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":22},"end":{"line":2,"column":24,"offset":45},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#cli-tips-and-tricks","children":[{"type":"text","value":"CLI Tips and Tricks","position":{"start":{"line":3,"column":4,"offset":49},"end":{"line":3,"column":23,"offset":68},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":48},"end":{"line":3,"column":46,"offset":91},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":48},"end":{"line":3,"column":46,"offset":91},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":46},"end":{"line":3,"column":46,"offset":91},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#providers","children":[{"type":"text","value":"Providers","position":{"start":{"line":4,"column":4,"offset":95},"end":{"line":4,"column":13,"offset":104},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":94},"end":{"line":4,"column":26,"offset":117},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":94},"end":{"line":4,"column":26,"offset":117},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":92},"end":{"line":4,"column":26,"offset":117},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#terraform-state","children":[{"type":"text","value":"Terraform State","position":{"start":{"line":5,"column":4,"offset":121},"end":{"line":5,"column":19,"offset":136},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":120},"end":{"line":5,"column":38,"offset":155},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":120},"end":{"line":5,"column":38,"offset":155},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":118},"end":{"line":5,"column":38,"offset":155},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#terraform-settings","children":[{"type":"text","value":"Terraform Settings","position":{"start":{"line":6,"column":4,"offset":159},"end":{"line":6,"column":22,"offset":177},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":158},"end":{"line":6,"column":44,"offset":199},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":158},"end":{"line":6,"column":44,"offset":199},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":156},"end":{"line":6,"column":44,"offset":199},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#provisioners-are-a-last-resort","children":[{"type":"text","value":"Provisioners Are a Last Resort","position":{"start":{"line":7,"column":4,"offset":203},"end":{"line":7,"column":34,"offset":233},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":202},"end":{"line":7,"column":68,"offset":267},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":202},"end":{"line":7,"column":68,"offset":267},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":200},"end":{"line":7,"column":68,"offset":267},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#master-the-workflow","children":[{"type":"text","value":"Master the Workflow","position":{"start":{"line":8,"column":4,"offset":271},"end":{"line":8,"column":23,"offset":290},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":270},"end":{"line":8,"column":46,"offset":313},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":270},"end":{"line":8,"column":46,"offset":313},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":268},"end":{"line":8,"column":46,"offset":313},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#learn-more-subcommands","children":[{"type":"text","value":"Learn More Subcommands","position":{"start":{"line":9,"column":4,"offset":317},"end":{"line":9,"column":26,"offset":339},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":316},"end":{"line":9,"column":52,"offset":365},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":316},"end":{"line":9,"column":52,"offset":365},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#tainting","children":[{"type":"text","value":"Tainting","position":{"start":{"line":10,"column":6,"offset":371},"end":{"line":10,"column":14,"offset":379},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":370},"end":{"line":10,"column":26,"offset":391},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":370},"end":{"line":10,"column":26,"offset":391},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":368},"end":{"line":10,"column":26,"offset":391},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":368},"end":{"line":10,"column":26,"offset":391},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":314},"end":{"line":10,"column":26,"offset":391},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#use-and-create-modules","children":[{"type":"text","value":"Use and Create Modules","position":{"start":{"line":11,"column":4,"offset":395},"end":{"line":11,"column":26,"offset":417},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":394},"end":{"line":11,"column":52,"offset":443},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":394},"end":{"line":11,"column":52,"offset":443},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":392},"end":{"line":11,"column":52,"offset":443},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#lifecycle-blocks","children":[{"type":"text","value":"Lifecycle Blocks","position":{"start":{"line":12,"column":4,"offset":447},"end":{"line":12,"column":20,"offset":463},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":446},"end":{"line":12,"column":40,"offset":483},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":446},"end":{"line":12,"column":40,"offset":483},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":444},"end":{"line":12,"column":40,"offset":483},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#local-only-resources","children":[{"type":"text","value":"Local-only Resources","position":{"start":{"line":13,"column":4,"offset":487},"end":{"line":13,"column":24,"offset":507},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":486},"end":{"line":13,"column":48,"offset":531},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":486},"end":{"line":13,"column":48,"offset":531},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":484},"end":{"line":13,"column":48,"offset":531},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#operation-timeouts","children":[{"type":"text","value":"Operation Timeouts","position":{"start":{"line":14,"column":4,"offset":535},"end":{"line":14,"column":22,"offset":553},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":534},"end":{"line":14,"column":44,"offset":575},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":534},"end":{"line":14,"column":44,"offset":575},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":532},"end":{"line":14,"column":44,"offset":575},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#data-sources","children":[{"type":"text","value":"Data Sources","position":{"start":{"line":15,"column":4,"offset":579},"end":{"line":15,"column":16,"offset":591},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":578},"end":{"line":15,"column":32,"offset":607},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":578},"end":{"line":15,"column":32,"offset":607},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":576},"end":{"line":15,"column":32,"offset":607},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#resources","children":[{"type":"text","value":"Resources","position":{"start":{"line":16,"column":4,"offset":611},"end":{"line":16,"column":13,"offset":620},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":610},"end":{"line":16,"column":26,"offset":633},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":16,"column":26,"offset":633},"end":{"line":16,"column":27,"offset":634},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":610},"end":{"line":16,"column":27,"offset":634},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":608},"end":{"line":16,"column":27,"offset":634},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":22},"end":{"line":16,"column":27,"offset":634},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"abstract\">","position":{"start":{"line":18,"column":5,"offset":640},"end":{"line":18,"column":24,"offset":659},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":18,"column":24,"offset":659},"end":{"line":18,"column":28,"offset":663},"indent":[]}},{"type":"link","title":null,"url":"#abstract","children":[{"type":"text","value":"Abstract","position":{"start":{"line":18,"column":29,"offset":664},"end":{"line":18,"column":37,"offset":672},"indent":[]}}],"position":{"start":{"line":18,"column":28,"offset":663},"end":{"line":18,"column":49,"offset":684},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":636},"end":{"line":18,"column":49,"offset":684},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We are building a platform at work that needs to support Terraform infrastructure-as-code. I decided to get ramped up on the technology so that I wouldn't be talking out of my ass about it. As part of getting ramped up, I found out that Hashicorp offers a certification for Terraform, so I decided to pursue it. ","position":{"start":{"line":19,"column":1,"offset":685},"end":{"line":19,"column":313,"offset":997},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":685},"end":{"line":19,"column":313,"offset":997},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This article is basically a rehash of the ","position":{"start":{"line":21,"column":1,"offset":999},"end":{"line":21,"column":43,"offset":1041},"indent":[]}},{"type":"link","title":null,"url":"https://learn.hashicorp.com/tutorials/terraform/associate-study","children":[{"type":"text","value":"Terraform Study Guide","position":{"start":{"line":21,"column":44,"offset":1042},"end":{"line":21,"column":65,"offset":1063},"indent":[]}}],"position":{"start":{"line":21,"column":43,"offset":1041},"end":{"line":21,"column":131,"offset":1129},"indent":[]}},{"type":"text","value":". The notes here are basically bullet points that are written from my perspective (lots of experience with IaC and cloud in general). There's also an egregious amount of copy pasta.","position":{"start":{"line":21,"column":131,"offset":1129},"end":{"line":21,"column":312,"offset":1310},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":999},"end":{"line":21,"column":312,"offset":1310},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"These notes are in no way comprehensive.","position":{"start":{"line":23,"column":3,"offset":1314},"end":{"line":23,"column":43,"offset":1354},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1312},"end":{"line":23,"column":45,"offset":1356},"indent":[]}},{"type":"text","value":" They're just what I felt I needed to sit the certification exam and feel comfortable talking about Terraform at work. Here are some things that I don't really get into: Terraform Cloud, modules, module registries, resource dependencies, expressions, operators, complex types, functions, and dynamic blocks. I would check these out in the documentation if you don't know what they are. ","position":{"start":{"line":23,"column":45,"offset":1356},"end":{"line":23,"column":431,"offset":1742},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1312},"end":{"line":23,"column":431,"offset":1742},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Lastly, after passing the certification, I would recommend spending a little extra time studying everything about ","position":{"start":{"line":25,"column":1,"offset":1744},"end":{"line":25,"column":115,"offset":1858},"indent":[]}},{"type":"inlineCode","value":"variables","position":{"start":{"line":25,"column":115,"offset":1858},"end":{"line":25,"column":126,"offset":1869},"indent":[]}},{"type":"text","value":". This article is light on the subject and I wish I was a little more knowledgable about them. ","position":{"start":{"line":25,"column":126,"offset":1869},"end":{"line":25,"column":221,"offset":1964},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1744},"end":{"line":25,"column":221,"offset":1964},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":27,"column":1,"offset":1966},"end":{"line":27,"column":4,"offset":1969},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"cli-tips-and-tricks\">","position":{"start":{"line":28,"column":5,"offset":1974},"end":{"line":28,"column":35,"offset":2004},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":28,"column":35,"offset":2004},"end":{"line":28,"column":39,"offset":2008},"indent":[]}},{"type":"link","title":null,"url":"#cli-tips-and-tricks","children":[{"type":"text","value":"CLI Tips and Tricks","position":{"start":{"line":28,"column":40,"offset":2009},"end":{"line":28,"column":59,"offset":2028},"indent":[]}}],"position":{"start":{"line":28,"column":39,"offset":2008},"end":{"line":28,"column":82,"offset":2051},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1970},"end":{"line":28,"column":82,"offset":2051},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Enable tab completion. If you use either ","position":{"start":{"line":30,"column":1,"offset":2053},"end":{"line":30,"column":42,"offset":2094},"indent":[]}},{"type":"inlineCode","value":"bash","position":{"start":{"line":30,"column":42,"offset":2094},"end":{"line":30,"column":48,"offset":2100},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":30,"column":48,"offset":2100},"end":{"line":30,"column":52,"offset":2104},"indent":[]}},{"type":"inlineCode","value":"zsh","position":{"start":{"line":30,"column":52,"offset":2104},"end":{"line":30,"column":57,"offset":2109},"indent":[]}},{"type":"text","value":", you can enable tab completion for Terraform commands. To enable autocomplete, run the following commands.","position":{"start":{"line":30,"column":57,"offset":2109},"end":{"line":30,"column":164,"offset":2216},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":2053},"end":{"line":30,"column":164,"offset":2216},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"$ terraform -install-autocomplete\n$ exec bash","position":{"start":{"line":31,"column":1,"offset":2217},"end":{"line":34,"column":4,"offset":2275},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"I also set up  ","position":{"start":{"line":36,"column":1,"offset":2277},"end":{"line":36,"column":16,"offset":2292},"indent":[]}},{"type":"inlineCode","value":"$ alias tf=\"terraform\"","position":{"start":{"line":36,"column":16,"offset":2292},"end":{"line":36,"column":40,"offset":2316},"indent":[]}},{"type":"text","value":" (similar to ","position":{"start":{"line":36,"column":40,"offset":2316},"end":{"line":36,"column":53,"offset":2329},"indent":[]}},{"type":"inlineCode","value":"k=\"kubectl\"","position":{"start":{"line":36,"column":53,"offset":2329},"end":{"line":36,"column":66,"offset":2342},"indent":[]}},{"type":"text","value":" for all my Kuberhomies out there.)","position":{"start":{"line":36,"column":66,"offset":2342},"end":{"line":36,"column":101,"offset":2377},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":2277},"end":{"line":36,"column":101,"offset":2377},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":38,"column":1,"offset":2379},"end":{"line":38,"column":4,"offset":2382},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"abstprovidersract\">","position":{"start":{"line":39,"column":5,"offset":2387},"end":{"line":39,"column":33,"offset":2415},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":39,"column":33,"offset":2415},"end":{"line":39,"column":37,"offset":2419},"indent":[]}},{"type":"link","title":null,"url":"#providers","children":[{"type":"text","value":"Providers","position":{"start":{"line":39,"column":38,"offset":2420},"end":{"line":39,"column":47,"offset":2429},"indent":[]}}],"position":{"start":{"line":39,"column":37,"offset":2419},"end":{"line":39,"column":60,"offset":2442},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2383},"end":{"line":39,"column":60,"offset":2442},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Terraform includes the ","position":{"start":{"line":40,"column":1,"offset":2443},"end":{"line":40,"column":24,"offset":2466},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/configuration/providers.html#alias-multiple-provider-configurations","children":[{"type":"text","value":"meta-argument","position":{"start":{"line":40,"column":25,"offset":2467},"end":{"line":40,"column":38,"offset":2480},"indent":[]}}],"position":{"start":{"line":40,"column":24,"offset":2466},"end":{"line":40,"column":138,"offset":2580},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":40,"column":138,"offset":2580},"end":{"line":40,"column":139,"offset":2581},"indent":[]}},{"type":"inlineCode","value":"alias","position":{"start":{"line":40,"column":139,"offset":2581},"end":{"line":40,"column":146,"offset":2588},"indent":[]}},{"type":"text","value":" for configuring a ","position":{"start":{"line":40,"column":146,"offset":2588},"end":{"line":40,"column":165,"offset":2607},"indent":[]}},{"type":"inlineCode","value":"provider","position":{"start":{"line":40,"column":165,"offset":2607},"end":{"line":40,"column":175,"offset":2617},"indent":[]}},{"type":"text","value":" multiple ways for different resources. You can select which provider configuration to use on a per-resource or per-module basis. The primary reason for this is to support multiple regions for a cloud platform; other examples include targeting multiple Docker hosts, multiple Consul hosts, etc.","position":{"start":{"line":40,"column":175,"offset":2617},"end":{"line":40,"column":469,"offset":2911},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2443},"end":{"line":40,"column":469,"offset":2911},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":42,"column":1,"offset":2913},"end":{"line":42,"column":4,"offset":2916},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"terraform-state\">","position":{"start":{"line":43,"column":5,"offset":2921},"end":{"line":43,"column":31,"offset":2947},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":43,"column":31,"offset":2947},"end":{"line":43,"column":35,"offset":2951},"indent":[]}},{"type":"link","title":null,"url":"#terraform-state","children":[{"type":"text","value":"Terraform State","position":{"start":{"line":43,"column":36,"offset":2952},"end":{"line":43,"column":51,"offset":2967},"indent":[]}}],"position":{"start":{"line":43,"column":35,"offset":2951},"end":{"line":43,"column":70,"offset":2986},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2917},"end":{"line":43,"column":70,"offset":2986},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.terraform.io/docs/state/locking.html","children":[{"type":"text","value":"State locking","position":{"start":{"line":45,"column":2,"offset":2989},"end":{"line":45,"column":15,"offset":3002},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":2988},"end":{"line":45,"column":66,"offset":3053},"indent":[]}},{"type":"text","value":" is default behavior if your backend supports it. You can manually override the lock, but it's dangerous to do so. ","position":{"start":{"line":45,"column":66,"offset":3053},"end":{"line":45,"column":181,"offset":3168},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":2988},"end":{"line":45,"column":181,"offset":3168},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"When Terraform is used to manage larger systems, teams should use multiple separate Terraform configurations that correspond with suitable architectural boundaries within the system so that different components can be managed separately and, if appropriate, by distinct teams. Workspaces alone are not a suitable tool for system decomposition, because each subsystem should have its own separate configuration and backend, and will thus have its own distinct set of workspaces.","position":{"start":{"line":47,"column":2,"offset":3171},"end":{"line":47,"column":479,"offset":3648},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":3170},"end":{"line":47,"column":480,"offset":3649},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":3170},"end":{"line":47,"column":480,"offset":3649},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can use backends that support remote state to create an ","position":{"start":{"line":49,"column":1,"offset":3651},"end":{"line":49,"column":61,"offset":3711},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/state/remote.html#delegation-and-teamwork","children":[{"type":"text","value":"operating model for infrastructure consumption across teams","position":{"start":{"line":49,"column":62,"offset":3712},"end":{"line":49,"column":121,"offset":3771},"indent":[]}}],"position":{"start":{"line":49,"column":61,"offset":3711},"end":{"line":49,"column":195,"offset":3845},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":49,"column":195,"offset":3845},"end":{"line":49,"column":196,"offset":3846},"indent":[]}},{"type":"break","position":{"start":{"line":49,"column":196,"offset":3846},"end":{"line":50,"column":1,"offset":3849},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"For example, a core infrastructure team can handle building the core machines, networking, etc. and can expose some information to other teams to run their own infrastructure. As a more specific example with AWS: you can expose things such as VPC IDs, subnets, NAT instance IDs, etc. through remote state and have other Terraform states consume that.","position":{"start":{"line":50,"column":2,"offset":3850},"end":{"line":50,"column":352,"offset":4200},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":3849},"end":{"line":50,"column":353,"offset":4201},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":3651},"end":{"line":50,"column":353,"offset":4201},"indent":[1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Terraform state can contain sensitive data, depending on the resources in use and your definition of \"sensitive.\" The state contains resource IDs and all resource attributes. For resources such as databases, this may contain initial passwords.","position":{"start":{"line":52,"column":2,"offset":4204},"end":{"line":52,"column":245,"offset":4447},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":4203},"end":{"line":52,"column":246,"offset":4448},"indent":[]}},{"type":"break","position":{"start":{"line":52,"column":246,"offset":4448},"end":{"line":53,"column":1,"offset":4451},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"If you manage any sensitive data with Terraform (like database passwords, user passwords, or private keys), treat the state itself as sensitive data.","position":{"start":{"line":53,"column":2,"offset":4452},"end":{"line":53,"column":151,"offset":4601},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":4451},"end":{"line":53,"column":152,"offset":4602},"indent":[]}},{"type":"text","value":"  ","position":{"start":{"line":53,"column":152,"offset":4602},"end":{"line":53,"column":154,"offset":4604},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":4203},"end":{"line":53,"column":154,"offset":4604},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":55,"column":1,"offset":4606},"end":{"line":55,"column":4,"offset":4609},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"terraform-settings\">","position":{"start":{"line":56,"column":5,"offset":4614},"end":{"line":56,"column":34,"offset":4643},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":56,"column":34,"offset":4643},"end":{"line":56,"column":38,"offset":4647},"indent":[]}},{"type":"link","title":null,"url":"#terraform-settings","children":[{"type":"text","value":"Terraform Settings","position":{"start":{"line":56,"column":39,"offset":4648},"end":{"line":56,"column":57,"offset":4666},"indent":[]}}],"position":{"start":{"line":56,"column":38,"offset":4647},"end":{"line":56,"column":79,"offset":4688},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":4610},"end":{"line":56,"column":79,"offset":4688},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Beyond tinkering with the CLI, you can alter Terraform settings within a configuration file, like so:","position":{"start":{"line":57,"column":1,"offset":4689},"end":{"line":57,"column":102,"offset":4790},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":4689},"end":{"line":57,"column":102,"offset":4790},"indent":[]}},{"type":"code","lang":"hcl","meta":null,"value":"terraform {\n   # ...\n}","position":{"start":{"line":58,"column":1,"offset":4791},"end":{"line":62,"column":4,"offset":4824},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Within a ","position":{"start":{"line":63,"column":1,"offset":4825},"end":{"line":63,"column":10,"offset":4834},"indent":[]}},{"type":"inlineCode","value":"terraform","position":{"start":{"line":63,"column":10,"offset":4834},"end":{"line":63,"column":21,"offset":4845},"indent":[]}},{"type":"text","value":" block, only constant values can be used; arguments may not refer to named objects such as resources, input variables, etc, and may not use any of the Terraform language built-in functions.","position":{"start":{"line":63,"column":21,"offset":4845},"end":{"line":63,"column":210,"offset":5034},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":4825},"end":{"line":63,"column":210,"offset":5034},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can use this block to configure things like:","position":{"start":{"line":65,"column":1,"offset":5036},"end":{"line":65,"column":49,"offset":5084},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":5036},"end":{"line":65,"column":49,"offset":5084},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.terraform.io/docs/configuration/backend.html","children":[{"type":"text","value":"Backend configuration","position":{"start":{"line":66,"column":6,"offset":5090},"end":{"line":66,"column":27,"offset":5111},"indent":[]}}],"position":{"start":{"line":66,"column":5,"offset":5089},"end":{"line":66,"column":86,"offset":5170},"indent":[]}}],"position":{"start":{"line":66,"column":5,"offset":5089},"end":{"line":66,"column":86,"offset":5170},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":5085},"end":{"line":66,"column":86,"offset":5170},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Specifying a version of Terraform","position":{"start":{"line":67,"column":5,"offset":5175},"end":{"line":67,"column":38,"offset":5208},"indent":[]}}],"position":{"start":{"line":67,"column":5,"offset":5175},"end":{"line":67,"column":38,"offset":5208},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":5171},"end":{"line":67,"column":38,"offset":5208},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Specifying ","position":{"start":{"line":68,"column":5,"offset":5213},"end":{"line":68,"column":16,"offset":5224},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/configuration/provider-requirements.html","children":[{"type":"text","value":"Provider Requirements","position":{"start":{"line":68,"column":17,"offset":5225},"end":{"line":68,"column":38,"offset":5246},"indent":[]}}],"position":{"start":{"line":68,"column":16,"offset":5224},"end":{"line":68,"column":111,"offset":5319},"indent":[]}}],"position":{"start":{"line":68,"column":5,"offset":5213},"end":{"line":68,"column":111,"offset":5319},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":5209},"end":{"line":68,"column":111,"offset":5319},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Opt-in to ","position":{"start":{"line":69,"column":5,"offset":5324},"end":{"line":69,"column":15,"offset":5334},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/configuration/terraform.html#experimental-language-features","children":[{"type":"text","value":"experimental language features","position":{"start":{"line":69,"column":16,"offset":5335},"end":{"line":69,"column":46,"offset":5365},"indent":[]}}],"position":{"start":{"line":69,"column":15,"offset":5334},"end":{"line":69,"column":138,"offset":5457},"indent":[]}}],"position":{"start":{"line":69,"column":5,"offset":5324},"end":{"line":69,"column":138,"offset":5457},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":5320},"end":{"line":69,"column":138,"offset":5457},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Passing ","position":{"start":{"line":70,"column":5,"offset":5462},"end":{"line":70,"column":13,"offset":5470},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/internals/provider-meta.html","children":[{"type":"text","value":"metadata","position":{"start":{"line":70,"column":14,"offset":5471},"end":{"line":70,"column":22,"offset":5479},"indent":[]}}],"position":{"start":{"line":70,"column":13,"offset":5470},"end":{"line":70,"column":83,"offset":5540},"indent":[]}},{"type":"text","value":" to Providers","position":{"start":{"line":70,"column":83,"offset":5540},"end":{"line":70,"column":96,"offset":5553},"indent":[]}}],"position":{"start":{"line":70,"column":5,"offset":5462},"end":{"line":70,"column":96,"offset":5553},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":5458},"end":{"line":70,"column":96,"offset":5553},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":5085},"end":{"line":70,"column":96,"offset":5553},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":72,"column":1,"offset":5555},"end":{"line":72,"column":4,"offset":5558},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"provisioners-are-a-last-resort\">","position":{"start":{"line":73,"column":5,"offset":5563},"end":{"line":73,"column":46,"offset":5604},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":73,"column":46,"offset":5604},"end":{"line":73,"column":50,"offset":5608},"indent":[]}},{"type":"link","title":null,"url":"#provisioners-are-a-last-resort","children":[{"type":"text","value":"Provisioners Are a Last Resort","position":{"start":{"line":73,"column":51,"offset":5609},"end":{"line":73,"column":81,"offset":5639},"indent":[]}}],"position":{"start":{"line":73,"column":50,"offset":5608},"end":{"line":73,"column":115,"offset":5673},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":5559},"end":{"line":73,"column":115,"offset":5673},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Direct quote from ","position":{"start":{"line":74,"column":1,"offset":5674},"end":{"line":74,"column":19,"offset":5692},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/provisioners/index.html","children":[{"type":"text","value":"the docs","position":{"start":{"line":74,"column":20,"offset":5693},"end":{"line":74,"column":28,"offset":5701},"indent":[]}}],"position":{"start":{"line":74,"column":19,"offset":5692},"end":{"line":74,"column":84,"offset":5757},"indent":[]}},{"type":"text","value":":\n","position":{"start":{"line":74,"column":84,"offset":5757},"end":{"line":75,"column":1,"offset":5759},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"Provisioners can be used to model specific actions on the local machine or on a remote machine in order to prepare servers or other infrastructure objects for service.","position":{"start":{"line":75,"column":2,"offset":5760},"end":{"line":75,"column":169,"offset":5927},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":5759},"end":{"line":75,"column":170,"offset":5928},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":5674},"end":{"line":75,"column":170,"offset":5928},"indent":[1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Terraform includes the concept of provisioners as a measure of pragmatism, knowing that there will always be certain behaviors that can't be directly represented in Terraform's declarative model.","position":{"start":{"line":77,"column":2,"offset":5931},"end":{"line":77,"column":197,"offset":6126},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":5930},"end":{"line":77,"column":198,"offset":6127},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":5930},"end":{"line":77,"column":198,"offset":6127},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"However, they also add a considerable amount of complexity and uncertainty to Terraform usage. Firstly, Terraform cannot model the actions of provisioners as part of a plan because they can in principle take any action. Secondly, successful use of provisioners requires coordinating many more details than Terraform usage usually requires: direct network access to your servers, issuing Terraform credentials to log in, making sure that all of the necessary external software is installed, etc.","position":{"start":{"line":79,"column":2,"offset":6130},"end":{"line":79,"column":496,"offset":6624},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":6129},"end":{"line":79,"column":497,"offset":6625},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":6129},"end":{"line":79,"column":497,"offset":6625},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can also set up ","position":{"start":{"line":81,"column":1,"offset":6627},"end":{"line":81,"column":21,"offset":6647},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/provisioners/#destroy-time-provisioners","children":[{"type":"text","value":"destroy-time provisioners","position":{"start":{"line":81,"column":22,"offset":6648},"end":{"line":81,"column":47,"offset":6673},"indent":[]}}],"position":{"start":{"line":81,"column":21,"offset":6647},"end":{"line":81,"column":119,"offset":6745},"indent":[]}},{"type":"text","value":" using a conditional ","position":{"start":{"line":81,"column":119,"offset":6745},"end":{"line":81,"column":140,"offset":6766},"indent":[]}},{"type":"inlineCode","value":"when","position":{"start":{"line":81,"column":140,"offset":6766},"end":{"line":81,"column":146,"offset":6772},"indent":[]}},{"type":"text","value":" statement:","position":{"start":{"line":81,"column":146,"offset":6772},"end":{"line":81,"column":157,"offset":6783},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":6627},"end":{"line":81,"column":157,"offset":6783},"indent":[]}},{"type":"code","lang":"hcl","meta":null,"value":"resource \"aws_instance\" \"web\" {\n  # ...\n\n  provisioner \"local-exec\" {\n    when    = destroy\n    command = \"echo 'Destroy-time provisioner'\"\n  }\n}","position":{"start":{"line":82,"column":1,"offset":6784},"end":{"line":91,"column":4,"offset":6940},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":93,"column":1,"offset":6942},"end":{"line":93,"column":4,"offset":6945},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"master-the-workflow\">","position":{"start":{"line":94,"column":5,"offset":6950},"end":{"line":94,"column":35,"offset":6980},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":94,"column":35,"offset":6980},"end":{"line":94,"column":39,"offset":6984},"indent":[]}},{"type":"link","title":null,"url":"#master-the-workflow","children":[{"type":"text","value":"Master the Workflow","position":{"start":{"line":94,"column":40,"offset":6985},"end":{"line":94,"column":59,"offset":7004},"indent":[]}}],"position":{"start":{"line":94,"column":39,"offset":6984},"end":{"line":94,"column":82,"offset":7027},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":6946},"end":{"line":94,"column":82,"offset":7027},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":96,"column":1,"offset":7029},"end":{"line":96,"column":5,"offset":7033},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/guides/core-workflow.html","children":[{"type":"text","value":"Core Terraform Workflow","position":{"start":{"line":96,"column":6,"offset":7034},"end":{"line":96,"column":29,"offset":7057},"indent":[]}}],"position":{"start":{"line":96,"column":5,"offset":7033},"end":{"line":96,"column":82,"offset":7110},"indent":[]}},{"type":"text","value":" has three steps:","position":{"start":{"line":96,"column":82,"offset":7110},"end":{"line":96,"column":99,"offset":7127},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":7029},"end":{"line":96,"column":99,"offset":7127},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write","position":{"start":{"line":97,"column":6,"offset":7133},"end":{"line":97,"column":11,"offset":7138},"indent":[]}}],"position":{"start":{"line":97,"column":6,"offset":7133},"end":{"line":97,"column":11,"offset":7138},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":7128},"end":{"line":97,"column":11,"offset":7138},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Plan","position":{"start":{"line":98,"column":6,"offset":7144},"end":{"line":98,"column":10,"offset":7148},"indent":[]}}],"position":{"start":{"line":98,"column":6,"offset":7144},"end":{"line":98,"column":10,"offset":7148},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":7139},"end":{"line":98,"column":10,"offset":7148},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Apply","position":{"start":{"line":99,"column":6,"offset":7154},"end":{"line":99,"column":11,"offset":7159},"indent":[]}}],"position":{"start":{"line":99,"column":6,"offset":7154},"end":{"line":99,"column":11,"offset":7159},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":7149},"end":{"line":99,"column":11,"offset":7159},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":7128},"end":{"line":99,"column":11,"offset":7159},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As teams and the infrastructure grows, so does the number of sensitive input variables (e.g. API Keys, SSL Cert Pairs) required to run a plan. It's best practice to have a robust Continuous Integration pipeline to make the iterative process easier and more secure. Not only does this make writing IaC better, but it helps to review pull requests because a CI pipeline is able to automatically include the output of ","position":{"start":{"line":101,"column":1,"offset":7161},"end":{"line":101,"column":416,"offset":7576},"indent":[]}},{"type":"inlineCode","value":"tf plan","position":{"start":{"line":101,"column":416,"offset":7576},"end":{"line":101,"column":425,"offset":7585},"indent":[]}},{"type":"text","value":" along with the PR. ","position":{"start":{"line":101,"column":425,"offset":7585},"end":{"line":101,"column":445,"offset":7605},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":7161},"end":{"line":101,"column":445,"offset":7605},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":103,"column":1,"offset":7607},"end":{"line":103,"column":4,"offset":7610},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"learn-more-subcommands\">","position":{"start":{"line":104,"column":5,"offset":7615},"end":{"line":104,"column":38,"offset":7648},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":104,"column":38,"offset":7648},"end":{"line":104,"column":42,"offset":7652},"indent":[]}},{"type":"link","title":null,"url":"#learn-more-subcommands","children":[{"type":"text","value":"Learn More Subcommands","position":{"start":{"line":104,"column":43,"offset":7653},"end":{"line":104,"column":65,"offset":7675},"indent":[]}}],"position":{"start":{"line":104,"column":42,"offset":7652},"end":{"line":104,"column":91,"offset":7701},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":7611},"end":{"line":104,"column":91,"offset":7701},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You are able to ","position":{"start":{"line":105,"column":1,"offset":7702},"end":{"line":105,"column":17,"offset":7718},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/import/index.html","children":[{"type":"text","value":"import","position":{"start":{"line":105,"column":18,"offset":7719},"end":{"line":105,"column":24,"offset":7725},"indent":[]}}],"position":{"start":{"line":105,"column":17,"offset":7718},"end":{"line":105,"column":74,"offset":7775},"indent":[]}},{"type":"text","value":" existing resources into the Terraform state. Currently, Terraform is not able to generate a configuration for the resource when importing, so you will need to author the resource configuration yourself. Be sure that each resource you import is mapped to only one Terraform resource address.","position":{"start":{"line":105,"column":74,"offset":7775},"end":{"line":105,"column":365,"offset":8066},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":7702},"end":{"line":105,"column":365,"offset":8066},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":107,"column":1,"offset":8068},"end":{"line":107,"column":5,"offset":8072},"indent":[]}},{"type":"inlineCode","value":"terraform fmt","position":{"start":{"line":107,"column":5,"offset":8072},"end":{"line":107,"column":20,"offset":8087},"indent":[]}},{"type":"text","value":" command is used to ","position":{"start":{"line":107,"column":20,"offset":8087},"end":{"line":107,"column":40,"offset":8107},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/commands/fmt.html","children":[{"type":"text","value":"rewrite Terraform configuration files","position":{"start":{"line":107,"column":41,"offset":8108},"end":{"line":107,"column":78,"offset":8145},"indent":[]}}],"position":{"start":{"line":107,"column":40,"offset":8107},"end":{"line":107,"column":128,"offset":8195},"indent":[]}},{"type":"text","value":" to a canonical format and style. Tack on the ","position":{"start":{"line":107,"column":128,"offset":8195},"end":{"line":107,"column":174,"offset":8241},"indent":[]}},{"type":"inlineCode","value":"-diff","position":{"start":{"line":107,"column":174,"offset":8241},"end":{"line":107,"column":181,"offset":8248},"indent":[]}},{"type":"text","value":" flag to display all formatting changes:  ","position":{"start":{"line":107,"column":181,"offset":8248},"end":{"line":107,"column":223,"offset":8290},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":8068},"end":{"line":107,"column":223,"offset":8290},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"$ tf fmt -diff","position":{"start":{"line":108,"column":1,"offset":8291},"end":{"line":110,"column":4,"offset":8318},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":112,"column":1,"offset":8320},"end":{"line":112,"column":5,"offset":8324},"indent":[]}},{"type":"inlineCode","value":"terraform validate","position":{"start":{"line":112,"column":5,"offset":8324},"end":{"line":112,"column":25,"offset":8344},"indent":[]}},{"type":"text","value":" command ","position":{"start":{"line":112,"column":25,"offset":8344},"end":{"line":112,"column":34,"offset":8353},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/commands/validate.html","children":[{"type":"text","value":"validates the configuration files","position":{"start":{"line":112,"column":35,"offset":8354},"end":{"line":112,"column":68,"offset":8387},"indent":[]}}],"position":{"start":{"line":112,"column":34,"offset":8353},"end":{"line":112,"column":123,"offset":8442},"indent":[]}},{"type":"text","value":" in a directory, referring only to the configuration and not accessing any remote services such as remote state, provider APIs, etc.  ","position":{"start":{"line":112,"column":123,"offset":8442},"end":{"line":112,"column":257,"offset":8576},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":8320},"end":{"line":112,"column":257,"offset":8576},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"$ tf validate","position":{"start":{"line":113,"column":1,"offset":8577},"end":{"line":115,"column":4,"offset":8603},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Validate is safe to run automatically. Running ","position":{"start":{"line":116,"column":1,"offset":8604},"end":{"line":116,"column":48,"offset":8651},"indent":[]}},{"type":"inlineCode","value":"terraform plan","position":{"start":{"line":116,"column":48,"offset":8651},"end":{"line":116,"column":64,"offset":8667},"indent":[]}},{"type":"text","value":" also performs a validation, but pulls in the contextual information about a run, like the target workspace, input variables, etc. ","position":{"start":{"line":116,"column":64,"offset":8667},"end":{"line":116,"column":195,"offset":8798},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":8604},"end":{"line":116,"column":195,"offset":8798},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":118,"column":1,"offset":8800},"end":{"line":118,"column":5,"offset":8804},"indent":[]}},{"type":"inlineCode","value":"terraform show","position":{"start":{"line":118,"column":5,"offset":8804},"end":{"line":118,"column":21,"offset":8820},"indent":[]}},{"type":"text","value":" command is used to provide human-readable output from a state or plan file. This can be used to inspect a plan to ensure that the planned operations are expected, or to inspect the current state as Terraform sees it. You can also generate machine-readable output by using the ","position":{"start":{"line":118,"column":21,"offset":8820},"end":{"line":118,"column":298,"offset":9097},"indent":[]}},{"type":"inlineCode","value":"-json","position":{"start":{"line":118,"column":298,"offset":9097},"end":{"line":118,"column":305,"offset":9104},"indent":[]}},{"type":"text","value":" flag. ","position":{"start":{"line":118,"column":305,"offset":9104},"end":{"line":118,"column":312,"offset":9111},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":8800},"end":{"line":118,"column":312,"offset":9111},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":120,"column":1,"offset":9113},"end":{"line":120,"column":5,"offset":9117},"indent":[]}},{"type":"inlineCode","value":"terraform refresh","position":{"start":{"line":120,"column":5,"offset":9117},"end":{"line":120,"column":24,"offset":9136},"indent":[]}},{"type":"text","value":" command is used to reconcile the state Terraform knows about (via its state file) with the real-world infrastructure. This can be used to detect any drift from the last-known state, and to update the state file.","position":{"start":{"line":120,"column":24,"offset":9136},"end":{"line":120,"column":236,"offset":9348},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":9113},"end":{"line":120,"column":236,"offset":9348},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"jsx","value":"<a name=\"tainting\">","position":{"start":{"line":122,"column":6,"offset":9355},"end":{"line":122,"column":25,"offset":9374},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":122,"column":25,"offset":9374},"end":{"line":122,"column":29,"offset":9378},"indent":[]}},{"type":"link","title":null,"url":"#tainting","children":[{"type":"text","value":"Tainting","position":{"start":{"line":122,"column":30,"offset":9379},"end":{"line":122,"column":38,"offset":9387},"indent":[]}}],"position":{"start":{"line":122,"column":29,"offset":9378},"end":{"line":122,"column":50,"offset":9399},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":9350},"end":{"line":122,"column":50,"offset":9399},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Direct quote from ","position":{"start":{"line":123,"column":1,"offset":9400},"end":{"line":123,"column":19,"offset":9418},"indent":[]}},{"type":"link","title":null,"url":"https://learn.hashicorp.com/tutorials/terraform/aws-provision?in=terraform/aws-get-started","children":[{"type":"text","value":"Get Started - AWS","position":{"start":{"line":123,"column":20,"offset":9419},"end":{"line":123,"column":37,"offset":9436},"indent":[]}}],"position":{"start":{"line":123,"column":19,"offset":9418},"end":{"line":123,"column":130,"offset":9529},"indent":[]}},{"type":"text","value":" on HashiCorp Learn:","position":{"start":{"line":123,"column":130,"offset":9529},"end":{"line":123,"column":150,"offset":9549},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":9400},"end":{"line":123,"column":150,"offset":9549},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"If a resource successfully creates but fails during provisioning, Terraform will error and mark the resource as \"tainted\". A resource that is tainted has been physically created, but can't be considered safe to use since provisioning failed.","position":{"start":{"line":125,"column":2,"offset":9552},"end":{"line":125,"column":243,"offset":9793},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":9551},"end":{"line":125,"column":244,"offset":9794},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":9551},"end":{"line":125,"column":244,"offset":9794},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"When you generate your next execution plan, Terraform will not attempt to restart provisioning on the same resource because it isn't guaranteed to be safe. Instead, Terraform will remove any tainted resources and create new resources, attempting to provision them again after creation.","position":{"start":{"line":127,"column":2,"offset":9797},"end":{"line":127,"column":287,"offset":10082},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":9796},"end":{"line":127,"column":288,"offset":10083},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":9796},"end":{"line":127,"column":288,"offset":10083},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Terraform also does not automatically roll back and destroy the resource during the apply when the failure happens, because that would go against the execution plan: the execution plan would've said a resource will be created, but does not say it will ever be deleted. If you create an execution plan with a tainted resource, however, the plan will clearly state that the resource will be destroyed because it is tainted.","position":{"start":{"line":129,"column":2,"offset":10086},"end":{"line":129,"column":423,"offset":10507},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":10085},"end":{"line":129,"column":424,"offset":10508},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":10085},"end":{"line":129,"column":424,"offset":10508},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can also manually taint resources using ","position":{"start":{"line":131,"column":1,"offset":10510},"end":{"line":131,"column":45,"offset":10554},"indent":[]}},{"type":"inlineCode","value":"$ tf taint resource.id","position":{"start":{"line":131,"column":45,"offset":10554},"end":{"line":131,"column":69,"offset":10578},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":10510},"end":{"line":131,"column":69,"offset":10578},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":133,"column":1,"offset":10580},"end":{"line":133,"column":4,"offset":10583},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"use-and-create-modules\">","position":{"start":{"line":134,"column":5,"offset":10588},"end":{"line":134,"column":38,"offset":10621},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":134,"column":38,"offset":10621},"end":{"line":134,"column":42,"offset":10625},"indent":[]}},{"type":"link","title":null,"url":"#use-and-create-modules","children":[{"type":"text","value":"Use and Create Modules","position":{"start":{"line":134,"column":43,"offset":10626},"end":{"line":134,"column":65,"offset":10648},"indent":[]}}],"position":{"start":{"line":134,"column":42,"offset":10625},"end":{"line":134,"column":91,"offset":10674},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":10584},"end":{"line":134,"column":91,"offset":10674},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":135,"column":1,"offset":10675},"end":{"line":135,"column":9,"offset":10683},"indent":[]}},{"type":"inlineCode","value":"version","position":{"start":{"line":135,"column":9,"offset":10683},"end":{"line":135,"column":18,"offset":10692},"indent":[]}},{"type":"text","value":" attribute in the ","position":{"start":{"line":135,"column":18,"offset":10692},"end":{"line":135,"column":36,"offset":10710},"indent":[]}},{"type":"inlineCode","value":"module","position":{"start":{"line":135,"column":36,"offset":10710},"end":{"line":135,"column":44,"offset":10718},"indent":[]}},{"type":"text","value":" block to specifcy verions:","position":{"start":{"line":135,"column":44,"offset":10718},"end":{"line":135,"column":71,"offset":10745},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":10675},"end":{"line":135,"column":71,"offset":10745},"indent":[]}},{"type":"code","lang":"hcl","meta":null,"value":"module \"consul\" {\n  source  = \"hashicorp/consul/aws\"\n  version = \"0.0.5\"\n\n  servers = 3\n}","position":{"start":{"line":136,"column":1,"offset":10746},"end":{"line":143,"column":4,"offset":10846},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":145,"column":1,"offset":10848},"end":{"line":145,"column":4,"offset":10851},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"lifecycle-blocks\">","position":{"start":{"line":146,"column":5,"offset":10856},"end":{"line":146,"column":32,"offset":10883},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":146,"column":32,"offset":10883},"end":{"line":146,"column":36,"offset":10887},"indent":[]}},{"type":"link","title":null,"url":"#lifecycle-blocks","children":[{"type":"text","value":"Lifecycle Blocks","position":{"start":{"line":146,"column":37,"offset":10888},"end":{"line":146,"column":53,"offset":10904},"indent":[]}}],"position":{"start":{"line":146,"column":36,"offset":10887},"end":{"line":146,"column":73,"offset":10924},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":10852},"end":{"line":146,"column":73,"offset":10924},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Within a resource block, you can detail ","position":{"start":{"line":147,"column":1,"offset":10925},"end":{"line":147,"column":41,"offset":10965},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/configuration/resources.html#lifecycle-lifecycle-customizations","children":[{"type":"text","value":"special lifecycle behavior","position":{"start":{"line":147,"column":42,"offset":10966},"end":{"line":147,"column":68,"offset":10992},"indent":[]}}],"position":{"start":{"line":147,"column":41,"offset":10965},"end":{"line":147,"column":164,"offset":11088},"indent":[]}},{"type":"text","value":" for resources using the nested ","position":{"start":{"line":147,"column":164,"offset":11088},"end":{"line":147,"column":196,"offset":11120},"indent":[]}},{"type":"inlineCode","value":"lifecycle","position":{"start":{"line":147,"column":196,"offset":11120},"end":{"line":147,"column":207,"offset":11131},"indent":[]}},{"type":"text","value":" block. The following meta-arguments are available to ","position":{"start":{"line":147,"column":207,"offset":11131},"end":{"line":147,"column":261,"offset":11185},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"all","position":{"start":{"line":147,"column":262,"offset":11186},"end":{"line":147,"column":265,"offset":11189},"indent":[]}}],"position":{"start":{"line":147,"column":261,"offset":11185},"end":{"line":147,"column":266,"offset":11190},"indent":[]}},{"type":"text","value":" resources, regardless of type.","position":{"start":{"line":147,"column":266,"offset":11190},"end":{"line":147,"column":297,"offset":11221},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":10925},"end":{"line":147,"column":297,"offset":11221},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"create_before_destroy","position":{"start":{"line":149,"column":5,"offset":11227},"end":{"line":149,"column":28,"offset":11250},"indent":[]}},{"type":"text","value":": Creates a new resource before deleting the existing one when set to ","position":{"start":{"line":149,"column":28,"offset":11250},"end":{"line":149,"column":98,"offset":11320},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":149,"column":98,"offset":11320},"end":{"line":149,"column":104,"offset":11326},"indent":[]}},{"type":"text","value":". Used when updates cannot be applied in-place.","position":{"start":{"line":149,"column":104,"offset":11326},"end":{"line":149,"column":151,"offset":11373},"indent":[]}}],"position":{"start":{"line":149,"column":5,"offset":11227},"end":{"line":149,"column":151,"offset":11373},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":11223},"end":{"line":149,"column":151,"offset":11373},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"prevent_destroy","position":{"start":{"line":150,"column":5,"offset":11378},"end":{"line":150,"column":22,"offset":11395},"indent":[]}},{"type":"text","value":": When set to ","position":{"start":{"line":150,"column":22,"offset":11395},"end":{"line":150,"column":36,"offset":11409},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":150,"column":36,"offset":11409},"end":{"line":150,"column":42,"offset":11415},"indent":[]}},{"type":"text","value":", will cause Terraform to reject with an error any plan that would destroy the infrastructure object associated with the resource, as long as the argument remains present in the configuration.","position":{"start":{"line":150,"column":42,"offset":11415},"end":{"line":150,"column":234,"offset":11607},"indent":[]}}],"position":{"start":{"line":150,"column":5,"offset":11378},"end":{"line":150,"column":234,"offset":11607},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":11374},"end":{"line":150,"column":234,"offset":11607},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ignore_changes","position":{"start":{"line":151,"column":5,"offset":11612},"end":{"line":151,"column":21,"offset":11628},"indent":[]}},{"type":"text","value":": Accepts a list of attribute names as parameters. This attributes are ignored when applying future configuration updates. This is useful for the (rare) circumstances where a system outside of Terraform changes the value of an attribute and it should not be rolled back by Terraform. ","position":{"start":{"line":151,"column":21,"offset":11628},"end":{"line":151,"column":305,"offset":11912},"indent":[]}}],"position":{"start":{"line":151,"column":5,"offset":11612},"end":{"line":151,"column":305,"offset":11912},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":11608},"end":{"line":151,"column":305,"offset":11912},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":11223},"end":{"line":151,"column":305,"offset":11912},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":153,"column":1,"offset":11914},"end":{"line":153,"column":4,"offset":11917},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"local-only-resources\">","position":{"start":{"line":154,"column":5,"offset":11922},"end":{"line":154,"column":36,"offset":11953},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":154,"column":36,"offset":11953},"end":{"line":154,"column":40,"offset":11957},"indent":[]}},{"type":"link","title":null,"url":"#local-only-resources","children":[{"type":"text","value":"Local-only Resources","position":{"start":{"line":154,"column":41,"offset":11958},"end":{"line":154,"column":61,"offset":11978},"indent":[]}}],"position":{"start":{"line":154,"column":40,"offset":11957},"end":{"line":154,"column":85,"offset":12002},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":11918},"end":{"line":154,"column":85,"offset":12002},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"While most resource types correspond to an infrastructure object type that is managed via a remote network API, there are certain specialized resource types that operate only within Terraform itself, calculating some results and saving those results in the state for future use.","position":{"start":{"line":155,"column":2,"offset":12004},"end":{"line":155,"column":280,"offset":12282},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":12003},"end":{"line":155,"column":281,"offset":12283},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":12003},"end":{"line":155,"column":281,"offset":12283},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"For example, ","position":{"start":{"line":157,"column":2,"offset":12286},"end":{"line":157,"column":15,"offset":12299},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/configuration/resources.html#local-only-resources","children":[{"type":"text","value":"local-only resource types","position":{"start":{"line":157,"column":16,"offset":12300},"end":{"line":157,"column":41,"offset":12325},"indent":[]}}],"position":{"start":{"line":157,"column":15,"offset":12299},"end":{"line":157,"column":123,"offset":12407},"indent":[]}},{"type":"text","value":" exist for generating private keys, issuing self-signed TLS certificates, and even generating random ids. While these resource types often have a more marginal purpose than those managing \"real\" infrastructure objects, they can be useful as glue to help connect together other resources.","position":{"start":{"line":157,"column":123,"offset":12407},"end":{"line":157,"column":410,"offset":12694},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":12285},"end":{"line":157,"column":411,"offset":12695},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":12285},"end":{"line":157,"column":411,"offset":12695},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"The behavior of local-only resources is the same as all other resources, but their result data exists only within the Terraform state. \"Destroying\" such a resource means only to remove it from the state, discarding its data.","position":{"start":{"line":159,"column":2,"offset":12698},"end":{"line":159,"column":226,"offset":12922},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":12697},"end":{"line":159,"column":227,"offset":12923},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":12697},"end":{"line":159,"column":227,"offset":12923},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":161,"column":1,"offset":12925},"end":{"line":161,"column":4,"offset":12928},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"operation-timeouts\">","position":{"start":{"line":162,"column":5,"offset":12933},"end":{"line":162,"column":34,"offset":12962},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":162,"column":34,"offset":12962},"end":{"line":162,"column":38,"offset":12966},"indent":[]}},{"type":"link","title":null,"url":"#operation-timeouts","children":[{"type":"text","value":"Operation Timeouts","position":{"start":{"line":162,"column":39,"offset":12967},"end":{"line":162,"column":57,"offset":12985},"indent":[]}}],"position":{"start":{"line":162,"column":38,"offset":12966},"end":{"line":162,"column":79,"offset":13007},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":12929},"end":{"line":162,"column":79,"offset":13007},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Certain resource types have nested ","position":{"start":{"line":163,"column":1,"offset":13008},"end":{"line":163,"column":36,"offset":13043},"indent":[]}},{"type":"inlineCode","value":"timeout","position":{"start":{"line":163,"column":36,"offset":13043},"end":{"line":163,"column":45,"offset":13052},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":163,"column":45,"offset":13052},"end":{"line":163,"column":46,"offset":13053},"indent":[]}},{"type":"link","title":null,"url":"https://www.terraform.io/docs/configuration/resources.html#operation-timeouts","children":[{"type":"text","value":"block arguments","position":{"start":{"line":163,"column":47,"offset":13054},"end":{"line":163,"column":62,"offset":13069},"indent":[]}}],"position":{"start":{"line":163,"column":46,"offset":13053},"end":{"line":163,"column":142,"offset":13149},"indent":[]}},{"type":"text","value":" available to them. These blocks allow you to customize how long certain operations are allowed to take before being considered to have failed. ","position":{"start":{"line":163,"column":142,"offset":13149},"end":{"line":163,"column":286,"offset":13293},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":13008},"end":{"line":163,"column":286,"offset":13293},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":165,"column":1,"offset":13295},"end":{"line":165,"column":4,"offset":13298},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"data-sources\">","position":{"start":{"line":166,"column":5,"offset":13303},"end":{"line":166,"column":28,"offset":13326},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":166,"column":28,"offset":13326},"end":{"line":166,"column":32,"offset":13330},"indent":[]}},{"type":"link","title":null,"url":"#data-sources","children":[{"type":"text","value":"Data Sources","position":{"start":{"line":166,"column":33,"offset":13331},"end":{"line":166,"column":45,"offset":13343},"indent":[]}}],"position":{"start":{"line":166,"column":32,"offset":13330},"end":{"line":166,"column":61,"offset":13359},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":13299},"end":{"line":166,"column":61,"offset":13359},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Data sources allow Terraform to access information that is outside of the configuration file itself. The data is retrieved using a ","position":{"start":{"line":167,"column":1,"offset":13360},"end":{"line":167,"column":132,"offset":13491},"indent":[]}},{"type":"inlineCode","value":"data","position":{"start":{"line":167,"column":132,"offset":13491},"end":{"line":167,"column":138,"offset":13497},"indent":[]}},{"type":"text","value":" block. ","position":{"start":{"line":167,"column":138,"offset":13497},"end":{"line":167,"column":146,"offset":13505},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":13360},"end":{"line":167,"column":146,"offset":13505},"indent":[]}},{"type":"code","lang":"hcl","meta":null,"value":"data \"aws_ami\" \"example\" {\n  most_recent = true\n\n  owners = [\"self\"]\n  tags = {\n    Name   = \"app-server\"\n    Tested = \"true\"\n  }\n}","position":{"start":{"line":168,"column":1,"offset":13506},"end":{"line":178,"column":4,"offset":13648},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":179,"column":1,"offset":13649},"end":{"line":179,"column":4,"offset":13652},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"jsx","value":"<a name=\"resources\">","position":{"start":{"line":180,"column":5,"offset":13657},"end":{"line":180,"column":25,"offset":13677},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":180,"column":25,"offset":13677},"end":{"line":180,"column":29,"offset":13681},"indent":[]}},{"type":"link","title":null,"url":"#resources","children":[{"type":"text","value":"Resources","position":{"start":{"line":180,"column":30,"offset":13682},"end":{"line":180,"column":39,"offset":13691},"indent":[]}}],"position":{"start":{"line":180,"column":29,"offset":13681},"end":{"line":180,"column":52,"offset":13704},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":13653},"end":{"line":180,"column":53,"offset":13705},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://learn.hashicorp.com/tutorials/terraform/associate-study","children":[{"type":"text","value":"Terraform Study Guide","position":{"start":{"line":181,"column":6,"offset":13711},"end":{"line":181,"column":27,"offset":13732},"indent":[]}}],"position":{"start":{"line":181,"column":5,"offset":13710},"end":{"line":181,"column":93,"offset":13798},"indent":[]}}],"position":{"start":{"line":181,"column":5,"offset":13710},"end":{"line":181,"column":93,"offset":13798},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":13706},"end":{"line":181,"column":93,"offset":13798},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://learn.hashicorp.com/terraform","children":[{"type":"text","value":"Terraform Tutorials","position":{"start":{"line":182,"column":6,"offset":13804},"end":{"line":182,"column":25,"offset":13823},"indent":[]}}],"position":{"start":{"line":182,"column":5,"offset":13803},"end":{"line":182,"column":65,"offset":13863},"indent":[]}}],"position":{"start":{"line":182,"column":5,"offset":13803},"end":{"line":182,"column":65,"offset":13863},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":13799},"end":{"line":182,"column":65,"offset":13863},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.terraform.io/docs/index.html","children":[{"type":"text","value":"Terraform Documentation","position":{"start":{"line":183,"column":6,"offset":13869},"end":{"line":183,"column":29,"offset":13892},"indent":[]}}],"position":{"start":{"line":183,"column":5,"offset":13868},"end":{"line":183,"column":72,"offset":13935},"indent":[]}}],"position":{"start":{"line":183,"column":5,"offset":13868},"end":{"line":183,"column":72,"offset":13935},"indent":[]}}],"position":{"start":{"line":183,"column":1,"offset":13864},"end":{"line":183,"column":72,"offset":13935},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/hashicorp/terraform","children":[{"type":"text","value":"Terraform GitHub","position":{"start":{"line":184,"column":6,"offset":13941},"end":{"line":184,"column":22,"offset":13957},"indent":[]}}],"position":{"start":{"line":184,"column":5,"offset":13940},"end":{"line":184,"column":63,"offset":13998},"indent":[]}},{"type":"text","value":"  ","position":{"start":{"line":184,"column":63,"offset":13998},"end":{"line":184,"column":65,"offset":14000},"indent":[]}}],"position":{"start":{"line":184,"column":5,"offset":13940},"end":{"line":184,"column":65,"offset":14000},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":13936},"end":{"line":184,"column":65,"offset":14000},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":13706},"end":{"line":184,"column":65,"offset":14000},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Terraform for Dummies\",\"date\":\"2020-09-14T00:00:00.000Z\",\"description\":\"Preparing for (and passing) the Terraform Associate Certification.\",\"tags\":[\"cloud\",\"devops\",\"certification\"],\"banner\":\"./tf_associate.png\"}","position":{"start":{"line":186,"column":1,"offset":14002},"end":{"line":186,"column":251,"offset":14252},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":186,"column":251,"offset":14252}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Terraform for Dummies\",\n  \"date\": \"2020-09-14T00:00:00.000Z\",\n  \"description\": \"Preparing for (and passing) the Terraform Associate Certification.\",\n  \"tags\": [\"cloud\", \"devops\", \"certification\"],\n  \"banner\": \"./tf_associate.png\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Table of Contents\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#abstract\"\n  }), \"Abstract\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#cli-tips-and-tricks\"\n  }), \"CLI Tips and Tricks\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#providers\"\n  }), \"Providers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#terraform-state\"\n  }), \"Terraform State\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#terraform-settings\"\n  }), \"Terraform Settings\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#provisioners-are-a-last-resort\"\n  }), \"Provisioners Are a Last Resort\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#master-the-workflow\"\n  }), \"Master the Workflow\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#learn-more-subcommands\"\n  }), \"Learn More Subcommands\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#tainting\"\n  }), \"Tainting\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#use-and-create-modules\"\n  }), \"Use and Create Modules\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#lifecycle-blocks\"\n  }), \"Lifecycle Blocks\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#local-only-resources\"\n  }), \"Local-only Resources\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#operation-timeouts\"\n  }), \"Operation Timeouts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#data-sources\"\n  }), \"Data Sources\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#resources\"\n  }), \"Resources\"), \" \")), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"abstract\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#abstract\"\n  }), \"Abstract\")), mdx(\"p\", null, \"We are building a platform at work that needs to support Terraform infrastructure-as-code. I decided to get ramped up on the technology so that I wouldn't be talking out of my ass about it. As part of getting ramped up, I found out that Hashicorp offers a certification for Terraform, so I decided to pursue it. \"), mdx(\"p\", null, \"This article is basically a rehash of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://learn.hashicorp.com/tutorials/terraform/associate-study\"\n  }), \"Terraform Study Guide\"), \". The notes here are basically bullet points that are written from my perspective (lots of experience with IaC and cloud in general). There's also an egregious amount of copy pasta.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"These notes are in no way comprehensive.\"), \" They're just what I felt I needed to sit the certification exam and feel comfortable talking about Terraform at work. Here are some things that I don't really get into: Terraform Cloud, modules, module registries, resource dependencies, expressions, operators, complex types, functions, and dynamic blocks. I would check these out in the documentation if you don't know what they are. \"), mdx(\"p\", null, \"Lastly, after passing the certification, I would recommend spending a little extra time studying everything about \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variables\"), \". This article is light on the subject and I wish I was a little more knowledgable about them. \"), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"cli-tips-and-tricks\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#cli-tips-and-tricks\"\n  }), \"CLI Tips and Tricks\")), mdx(\"p\", null, \"Enable tab completion. If you use either \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bash\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"zsh\"), \", you can enable tab completion for Terraform commands. To enable autocomplete, run the following commands.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"$ terraform -install-autocomplete\\n$ exec bash\\n\")), mdx(\"p\", null, \"I also set up  \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ alias tf=\\\"terraform\\\"\"), \" (similar to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"k=\\\"kubectl\\\"\"), \" for all my Kuberhomies out there.)\"), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"abstprovidersract\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#providers\"\n  }), \"Providers\")), mdx(\"p\", null, \"Terraform includes the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/configuration/providers.html#alias-multiple-provider-configurations\"\n  }), \"meta-argument\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"alias\"), \" for configuring a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"provider\"), \" multiple ways for different resources. You can select which provider configuration to use on a per-resource or per-module basis. The primary reason for this is to support multiple regions for a cloud platform; other examples include targeting multiple Docker hosts, multiple Consul hosts, etc.\"), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"terraform-state\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#terraform-state\"\n  }), \"Terraform State\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/state/locking.html\"\n  }), \"State locking\"), \" is default behavior if your backend supports it. You can manually override the lock, but it's dangerous to do so. \"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"When Terraform is used to manage larger systems, teams should use multiple separate Terraform configurations that correspond with suitable architectural boundaries within the system so that different components can be managed separately and, if appropriate, by distinct teams. Workspaces alone are not a suitable tool for system decomposition, because each subsystem should have its own separate configuration and backend, and will thus have its own distinct set of workspaces.\")), mdx(\"p\", null, \"You can use backends that support remote state to create an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/state/remote.html#delegation-and-teamwork\"\n  }), \"operating model for infrastructure consumption across teams\"), \":\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"For example, a core infrastructure team can handle building the core machines, networking, etc. and can expose some information to other teams to run their own infrastructure. As a more specific example with AWS: you can expose things such as VPC IDs, subnets, NAT instance IDs, etc. through remote state and have other Terraform states consume that.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Terraform state can contain sensitive data, depending on the resources in use and your definition of \\\"sensitive.\\\" The state contains resource IDs and all resource attributes. For resources such as databases, this may contain initial passwords.\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"If you manage any sensitive data with Terraform (like database passwords, user passwords, or private keys), treat the state itself as sensitive data.\"), \"  \"), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"terraform-settings\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#terraform-settings\"\n  }), \"Terraform Settings\")), mdx(\"p\", null, \"Beyond tinkering with the CLI, you can alter Terraform settings within a configuration file, like so:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-hcl\"\n  }), \"terraform {\\n   # ...\\n}\\n\")), mdx(\"p\", null, \"Within a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"terraform\"), \" block, only constant values can be used; arguments may not refer to named objects such as resources, input variables, etc, and may not use any of the Terraform language built-in functions.\"), mdx(\"p\", null, \"You can use this block to configure things like:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/configuration/backend.html\"\n  }), \"Backend configuration\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Specifying a version of Terraform\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Specifying \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/configuration/provider-requirements.html\"\n  }), \"Provider Requirements\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Opt-in to \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/configuration/terraform.html#experimental-language-features\"\n  }), \"experimental language features\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Passing \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/internals/provider-meta.html\"\n  }), \"metadata\"), \" to Providers\")), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"provisioners-are-a-last-resort\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#provisioners-are-a-last-resort\"\n  }), \"Provisioners Are a Last Resort\")), mdx(\"p\", null, \"Direct quote from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/provisioners/index.html\"\n  }), \"the docs\"), \":\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Provisioners can be used to model specific actions on the local machine or on a remote machine in order to prepare servers or other infrastructure objects for service.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Terraform includes the concept of provisioners as a measure of pragmatism, knowing that there will always be certain behaviors that can't be directly represented in Terraform's declarative model.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"However, they also add a considerable amount of complexity and uncertainty to Terraform usage. Firstly, Terraform cannot model the actions of provisioners as part of a plan because they can in principle take any action. Secondly, successful use of provisioners requires coordinating many more details than Terraform usage usually requires: direct network access to your servers, issuing Terraform credentials to log in, making sure that all of the necessary external software is installed, etc.\")), mdx(\"p\", null, \"You can also set up \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/provisioners/#destroy-time-provisioners\"\n  }), \"destroy-time provisioners\"), \" using a conditional \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"when\"), \" statement:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-hcl\"\n  }), \"resource \\\"aws_instance\\\" \\\"web\\\" {\\n  # ...\\n\\n  provisioner \\\"local-exec\\\" {\\n    when    = destroy\\n    command = \\\"echo 'Destroy-time provisioner'\\\"\\n  }\\n}\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"master-the-workflow\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#master-the-workflow\"\n  }), \"Master the Workflow\")), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/guides/core-workflow.html\"\n  }), \"Core Terraform Workflow\"), \" has three steps:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Plan\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Apply\")), mdx(\"p\", null, \"As teams and the infrastructure grows, so does the number of sensitive input variables (e.g. API Keys, SSL Cert Pairs) required to run a plan. It's best practice to have a robust Continuous Integration pipeline to make the iterative process easier and more secure. Not only does this make writing IaC better, but it helps to review pull requests because a CI pipeline is able to automatically include the output of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tf plan\"), \" along with the PR. \"), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"learn-more-subcommands\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#learn-more-subcommands\"\n  }), \"Learn More Subcommands\")), mdx(\"p\", null, \"You are able to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/import/index.html\"\n  }), \"import\"), \" existing resources into the Terraform state. Currently, Terraform is not able to generate a configuration for the resource when importing, so you will need to author the resource configuration yourself. Be sure that each resource you import is mapped to only one Terraform resource address.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"terraform fmt\"), \" command is used to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/commands/fmt.html\"\n  }), \"rewrite Terraform configuration files\"), \" to a canonical format and style. Tack on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-diff\"), \" flag to display all formatting changes:  \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"$ tf fmt -diff\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"terraform validate\"), \" command \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/commands/validate.html\"\n  }), \"validates the configuration files\"), \" in a directory, referring only to the configuration and not accessing any remote services such as remote state, provider APIs, etc.  \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"$ tf validate\\n\")), mdx(\"p\", null, \"Validate is safe to run automatically. Running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"terraform plan\"), \" also performs a validation, but pulls in the contextual information about a run, like the target workspace, input variables, etc. \"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"terraform show\"), \" command is used to provide human-readable output from a state or plan file. This can be used to inspect a plan to ensure that the planned operations are expected, or to inspect the current state as Terraform sees it. You can also generate machine-readable output by using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-json\"), \" flag. \"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"terraform refresh\"), \" command is used to reconcile the state Terraform knows about (via its state file) with the real-world infrastructure. This can be used to detect any drift from the last-known state, and to update the state file.\"), mdx(\"h4\", null, mdx(\"a\", {\n    name: \"tainting\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#tainting\"\n  }), \"Tainting\")), mdx(\"p\", null, \"Direct quote from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://learn.hashicorp.com/tutorials/terraform/aws-provision?in=terraform/aws-get-started\"\n  }), \"Get Started - AWS\"), \" on HashiCorp Learn:\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"If a resource successfully creates but fails during provisioning, Terraform will error and mark the resource as \\\"tainted\\\". A resource that is tainted has been physically created, but can't be considered safe to use since provisioning failed.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"When you generate your next execution plan, Terraform will not attempt to restart provisioning on the same resource because it isn't guaranteed to be safe. Instead, Terraform will remove any tainted resources and create new resources, attempting to provision them again after creation.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Terraform also does not automatically roll back and destroy the resource during the apply when the failure happens, because that would go against the execution plan: the execution plan would've said a resource will be created, but does not say it will ever be deleted. If you create an execution plan with a tainted resource, however, the plan will clearly state that the resource will be destroyed because it is tainted.\")), mdx(\"p\", null, \"You can also manually taint resources using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ tf taint resource.id\")), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"use-and-create-modules\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#use-and-create-modules\"\n  }), \"Use and Create Modules\")), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"version\"), \" attribute in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"module\"), \" block to specifcy verions:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-hcl\"\n  }), \"module \\\"consul\\\" {\\n  source  = \\\"hashicorp/consul/aws\\\"\\n  version = \\\"0.0.5\\\"\\n\\n  servers = 3\\n}\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"lifecycle-blocks\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#lifecycle-blocks\"\n  }), \"Lifecycle Blocks\")), mdx(\"p\", null, \"Within a resource block, you can detail \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/configuration/resources.html#lifecycle-lifecycle-customizations\"\n  }), \"special lifecycle behavior\"), \" for resources using the nested \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lifecycle\"), \" block. The following meta-arguments are available to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"all\"), \" resources, regardless of type.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"create_before_destroy\"), \": Creates a new resource before deleting the existing one when set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \". Used when updates cannot be applied in-place.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"prevent_destroy\"), \": When set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", will cause Terraform to reject with an error any plan that would destroy the infrastructure object associated with the resource, as long as the argument remains present in the configuration.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ignore_changes\"), \": Accepts a list of attribute names as parameters. This attributes are ignored when applying future configuration updates. This is useful for the (rare) circumstances where a system outside of Terraform changes the value of an attribute and it should not be rolled back by Terraform. \")), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"local-only-resources\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#local-only-resources\"\n  }), \"Local-only Resources\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"While most resource types correspond to an infrastructure object type that is managed via a remote network API, there are certain specialized resource types that operate only within Terraform itself, calculating some results and saving those results in the state for future use.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"For example, \", mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/configuration/resources.html#local-only-resources\"\n  }), \"local-only resource types\"), \" exist for generating private keys, issuing self-signed TLS certificates, and even generating random ids. While these resource types often have a more marginal purpose than those managing \\\"real\\\" infrastructure objects, they can be useful as glue to help connect together other resources.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"The behavior of local-only resources is the same as all other resources, but their result data exists only within the Terraform state. \\\"Destroying\\\" such a resource means only to remove it from the state, discarding its data.\")), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"operation-timeouts\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#operation-timeouts\"\n  }), \"Operation Timeouts\")), mdx(\"p\", null, \"Certain resource types have nested \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"timeout\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/configuration/resources.html#operation-timeouts\"\n  }), \"block arguments\"), \" available to them. These blocks allow you to customize how long certain operations are allowed to take before being considered to have failed. \"), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"data-sources\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#data-sources\"\n  }), \"Data Sources\")), mdx(\"p\", null, \"Data sources allow Terraform to access information that is outside of the configuration file itself. The data is retrieved using a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" block. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-hcl\"\n  }), \"data \\\"aws_ami\\\" \\\"example\\\" {\\n  most_recent = true\\n\\n  owners = [\\\"self\\\"]\\n  tags = {\\n    Name   = \\\"app-server\\\"\\n    Tested = \\\"true\\\"\\n  }\\n}\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"resources\"\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#resources\"\n  }), \"Resources\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://learn.hashicorp.com/tutorials/terraform/associate-study\"\n  }), \"Terraform Study Guide\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://learn.hashicorp.com/terraform\"\n  }), \"Terraform Tutorials\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.terraform.io/docs/index.html\"\n  }), \"Terraform Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/hashicorp/terraform\"\n  }), \"Terraform GitHub\"), \"  \")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Terraform for Dummies\",\n  \"date\": \"2020-09-14T00:00:00.000Z\",\n  \"description\": \"Preparing for (and passing) the Terraform Associate Certification.\",\n  \"tags\": [\"cloud\", \"devops\", \"certification\"],\n  \"banner\": \"./tf_associate.png\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3>{`Table of Contents`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#abstract\"\n        }}>{`Abstract`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#cli-tips-and-tricks\"\n        }}>{`CLI Tips and Tricks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#providers\"\n        }}>{`Providers`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#terraform-state\"\n        }}>{`Terraform State`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#terraform-settings\"\n        }}>{`Terraform Settings`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#provisioners-are-a-last-resort\"\n        }}>{`Provisioners Are a Last Resort`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#master-the-workflow\"\n        }}>{`Master the Workflow`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#learn-more-subcommands\"\n        }}>{`Learn More Subcommands`}</a>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#tainting\"\n            }}>{`Tainting`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#use-and-create-modules\"\n        }}>{`Use and Create Modules`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#lifecycle-blocks\"\n        }}>{`Lifecycle Blocks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#local-only-resources\"\n        }}>{`Local-only Resources`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#operation-timeouts\"\n        }}>{`Operation Timeouts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#data-sources\"\n        }}>{`Data Sources`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#resources\"\n        }}>{`Resources`}</a>{` `}</li>\n    </ul>\n    <h3><a name=\"abstract\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#abstract\"\n      }}>{`Abstract`}</a></h3>\n    <p>{`We are building a platform at work that needs to support Terraform infrastructure-as-code. I decided to get ramped up on the technology so that I wouldn't be talking out of my ass about it. As part of getting ramped up, I found out that Hashicorp offers a certification for Terraform, so I decided to pursue it. `}</p>\n    <p>{`This article is basically a rehash of the `}<a parentName=\"p\" {...{\n        \"href\": \"https://learn.hashicorp.com/tutorials/terraform/associate-study\"\n      }}>{`Terraform Study Guide`}</a>{`. The notes here are basically bullet points that are written from my perspective (lots of experience with IaC and cloud in general). There's also an egregious amount of copy pasta.`}</p>\n    <p><strong parentName=\"p\">{`These notes are in no way comprehensive.`}</strong>{` They're just what I felt I needed to sit the certification exam and feel comfortable talking about Terraform at work. Here are some things that I don't really get into: Terraform Cloud, modules, module registries, resource dependencies, expressions, operators, complex types, functions, and dynamic blocks. I would check these out in the documentation if you don't know what they are. `}</p>\n    <p>{`Lastly, after passing the certification, I would recommend spending a little extra time studying everything about `}<inlineCode parentName=\"p\">{`variables`}</inlineCode>{`. This article is light on the subject and I wish I was a little more knowledgable about them. `}</p>\n    <hr></hr>\n    <h3><a name=\"cli-tips-and-tricks\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#cli-tips-and-tricks\"\n      }}>{`CLI Tips and Tricks`}</a></h3>\n    <p>{`Enable tab completion. If you use either `}<inlineCode parentName=\"p\">{`bash`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`zsh`}</inlineCode>{`, you can enable tab completion for Terraform commands. To enable autocomplete, run the following commands.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`$ terraform -install-autocomplete\n$ exec bash\n`}</code></pre>\n    <p>{`I also set up  `}<inlineCode parentName=\"p\">{`$ alias tf=\"terraform\"`}</inlineCode>{` (similar to `}<inlineCode parentName=\"p\">{`k=\"kubectl\"`}</inlineCode>{` for all my Kuberhomies out there.)`}</p>\n    <hr></hr>\n    <h3><a name=\"abstprovidersract\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#providers\"\n      }}>{`Providers`}</a></h3>\n    <p>{`Terraform includes the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/docs/configuration/providers.html#alias-multiple-provider-configurations\"\n      }}>{`meta-argument`}</a>{` `}<inlineCode parentName=\"p\">{`alias`}</inlineCode>{` for configuring a `}<inlineCode parentName=\"p\">{`provider`}</inlineCode>{` multiple ways for different resources. You can select which provider configuration to use on a per-resource or per-module basis. The primary reason for this is to support multiple regions for a cloud platform; other examples include targeting multiple Docker hosts, multiple Consul hosts, etc.`}</p>\n    <hr></hr>\n    <h3><a name=\"terraform-state\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#terraform-state\"\n      }}>{`Terraform State`}</a></h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/docs/state/locking.html\"\n      }}>{`State locking`}</a>{` is default behavior if your backend supports it. You can manually override the lock, but it's dangerous to do so. `}</p>\n    <p><em parentName=\"p\">{`When Terraform is used to manage larger systems, teams should use multiple separate Terraform configurations that correspond with suitable architectural boundaries within the system so that different components can be managed separately and, if appropriate, by distinct teams. Workspaces alone are not a suitable tool for system decomposition, because each subsystem should have its own separate configuration and backend, and will thus have its own distinct set of workspaces.`}</em></p>\n    <p>{`You can use backends that support remote state to create an `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/docs/state/remote.html#delegation-and-teamwork\"\n      }}>{`operating model for infrastructure consumption across teams`}</a>{`:`}<br parentName=\"p\"></br>{`\n`}<em parentName=\"p\">{`For example, a core infrastructure team can handle building the core machines, networking, etc. and can expose some information to other teams to run their own infrastructure. As a more specific example with AWS: you can expose things such as VPC IDs, subnets, NAT instance IDs, etc. through remote state and have other Terraform states consume that.`}</em></p>\n    <p><em parentName=\"p\">{`Terraform state can contain sensitive data, depending on the resources in use and your definition of \"sensitive.\" The state contains resource IDs and all resource attributes. For resources such as databases, this may contain initial passwords.`}</em><br parentName=\"p\"></br>{`\n`}<em parentName=\"p\">{`If you manage any sensitive data with Terraform (like database passwords, user passwords, or private keys), treat the state itself as sensitive data.`}</em>{`  `}</p>\n    <hr></hr>\n    <h3><a name=\"terraform-settings\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#terraform-settings\"\n      }}>{`Terraform Settings`}</a></h3>\n    <p>{`Beyond tinkering with the CLI, you can alter Terraform settings within a configuration file, like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-hcl\"\n      }}>{`terraform {\n   # ...\n}\n`}</code></pre>\n    <p>{`Within a `}<inlineCode parentName=\"p\">{`terraform`}</inlineCode>{` block, only constant values can be used; arguments may not refer to named objects such as resources, input variables, etc, and may not use any of the Terraform language built-in functions.`}</p>\n    <p>{`You can use this block to configure things like:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.terraform.io/docs/configuration/backend.html\"\n        }}>{`Backend configuration`}</a></li>\n      <li parentName=\"ul\">{`Specifying a version of Terraform`}</li>\n      <li parentName=\"ul\">{`Specifying `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.terraform.io/docs/configuration/provider-requirements.html\"\n        }}>{`Provider Requirements`}</a></li>\n      <li parentName=\"ul\">{`Opt-in to `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.terraform.io/docs/configuration/terraform.html#experimental-language-features\"\n        }}>{`experimental language features`}</a></li>\n      <li parentName=\"ul\">{`Passing `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.terraform.io/docs/internals/provider-meta.html\"\n        }}>{`metadata`}</a>{` to Providers`}</li>\n    </ul>\n    <hr></hr>\n    <h3><a name=\"provisioners-are-a-last-resort\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#provisioners-are-a-last-resort\"\n      }}>{`Provisioners Are a Last Resort`}</a></h3>\n    <p>{`Direct quote from `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/docs/provisioners/index.html\"\n      }}>{`the docs`}</a>{`:\n`}<em parentName=\"p\">{`Provisioners can be used to model specific actions on the local machine or on a remote machine in order to prepare servers or other infrastructure objects for service.`}</em></p>\n    <p><em parentName=\"p\">{`Terraform includes the concept of provisioners as a measure of pragmatism, knowing that there will always be certain behaviors that can't be directly represented in Terraform's declarative model.`}</em></p>\n    <p><em parentName=\"p\">{`However, they also add a considerable amount of complexity and uncertainty to Terraform usage. Firstly, Terraform cannot model the actions of provisioners as part of a plan because they can in principle take any action. Secondly, successful use of provisioners requires coordinating many more details than Terraform usage usually requires: direct network access to your servers, issuing Terraform credentials to log in, making sure that all of the necessary external software is installed, etc.`}</em></p>\n    <p>{`You can also set up `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/docs/provisioners/#destroy-time-provisioners\"\n      }}>{`destroy-time provisioners`}</a>{` using a conditional `}<inlineCode parentName=\"p\">{`when`}</inlineCode>{` statement:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-hcl\"\n      }}>{`resource \"aws_instance\" \"web\" {\n  # ...\n\n  provisioner \"local-exec\" {\n    when    = destroy\n    command = \"echo 'Destroy-time provisioner'\"\n  }\n}\n`}</code></pre>\n    <hr></hr>\n    <h3><a name=\"master-the-workflow\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#master-the-workflow\"\n      }}>{`Master the Workflow`}</a></h3>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/guides/core-workflow.html\"\n      }}>{`Core Terraform Workflow`}</a>{` has three steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Write`}</li>\n      <li parentName=\"ol\">{`Plan`}</li>\n      <li parentName=\"ol\">{`Apply`}</li>\n    </ol>\n    <p>{`As teams and the infrastructure grows, so does the number of sensitive input variables (e.g. API Keys, SSL Cert Pairs) required to run a plan. It's best practice to have a robust Continuous Integration pipeline to make the iterative process easier and more secure. Not only does this make writing IaC better, but it helps to review pull requests because a CI pipeline is able to automatically include the output of `}<inlineCode parentName=\"p\">{`tf plan`}</inlineCode>{` along with the PR. `}</p>\n    <hr></hr>\n    <h3><a name=\"learn-more-subcommands\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#learn-more-subcommands\"\n      }}>{`Learn More Subcommands`}</a></h3>\n    <p>{`You are able to `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/docs/import/index.html\"\n      }}>{`import`}</a>{` existing resources into the Terraform state. Currently, Terraform is not able to generate a configuration for the resource when importing, so you will need to author the resource configuration yourself. Be sure that each resource you import is mapped to only one Terraform resource address.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`terraform fmt`}</inlineCode>{` command is used to `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/docs/commands/fmt.html\"\n      }}>{`rewrite Terraform configuration files`}</a>{` to a canonical format and style. Tack on the `}<inlineCode parentName=\"p\">{`-diff`}</inlineCode>{` flag to display all formatting changes:  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`$ tf fmt -diff\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`terraform validate`}</inlineCode>{` command `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/docs/commands/validate.html\"\n      }}>{`validates the configuration files`}</a>{` in a directory, referring only to the configuration and not accessing any remote services such as remote state, provider APIs, etc.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`$ tf validate\n`}</code></pre>\n    <p>{`Validate is safe to run automatically. Running `}<inlineCode parentName=\"p\">{`terraform plan`}</inlineCode>{` also performs a validation, but pulls in the contextual information about a run, like the target workspace, input variables, etc. `}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`terraform show`}</inlineCode>{` command is used to provide human-readable output from a state or plan file. This can be used to inspect a plan to ensure that the planned operations are expected, or to inspect the current state as Terraform sees it. You can also generate machine-readable output by using the `}<inlineCode parentName=\"p\">{`-json`}</inlineCode>{` flag. `}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`terraform refresh`}</inlineCode>{` command is used to reconcile the state Terraform knows about (via its state file) with the real-world infrastructure. This can be used to detect any drift from the last-known state, and to update the state file.`}</p>\n    <h4><a name=\"tainting\"></a><a parentName=\"h4\" {...{\n        \"href\": \"#tainting\"\n      }}>{`Tainting`}</a></h4>\n    <p>{`Direct quote from `}<a parentName=\"p\" {...{\n        \"href\": \"https://learn.hashicorp.com/tutorials/terraform/aws-provision?in=terraform/aws-get-started\"\n      }}>{`Get Started - AWS`}</a>{` on HashiCorp Learn:`}</p>\n    <p><em parentName=\"p\">{`If a resource successfully creates but fails during provisioning, Terraform will error and mark the resource as \"tainted\". A resource that is tainted has been physically created, but can't be considered safe to use since provisioning failed.`}</em></p>\n    <p><em parentName=\"p\">{`When you generate your next execution plan, Terraform will not attempt to restart provisioning on the same resource because it isn't guaranteed to be safe. Instead, Terraform will remove any tainted resources and create new resources, attempting to provision them again after creation.`}</em></p>\n    <p><em parentName=\"p\">{`Terraform also does not automatically roll back and destroy the resource during the apply when the failure happens, because that would go against the execution plan: the execution plan would've said a resource will be created, but does not say it will ever be deleted. If you create an execution plan with a tainted resource, however, the plan will clearly state that the resource will be destroyed because it is tainted.`}</em></p>\n    <p>{`You can also manually taint resources using `}<inlineCode parentName=\"p\">{`$ tf taint resource.id`}</inlineCode></p>\n    <hr></hr>\n    <h3><a name=\"use-and-create-modules\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#use-and-create-modules\"\n      }}>{`Use and Create Modules`}</a></h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`version`}</inlineCode>{` attribute in the `}<inlineCode parentName=\"p\">{`module`}</inlineCode>{` block to specifcy verions:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-hcl\"\n      }}>{`module \"consul\" {\n  source  = \"hashicorp/consul/aws\"\n  version = \"0.0.5\"\n\n  servers = 3\n}\n`}</code></pre>\n    <hr></hr>\n    <h3><a name=\"lifecycle-blocks\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#lifecycle-blocks\"\n      }}>{`Lifecycle Blocks`}</a></h3>\n    <p>{`Within a resource block, you can detail `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/docs/configuration/resources.html#lifecycle-lifecycle-customizations\"\n      }}>{`special lifecycle behavior`}</a>{` for resources using the nested `}<inlineCode parentName=\"p\">{`lifecycle`}</inlineCode>{` block. The following meta-arguments are available to `}<em parentName=\"p\">{`all`}</em>{` resources, regardless of type.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`create_before_destroy`}</inlineCode>{`: Creates a new resource before deleting the existing one when set to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`. Used when updates cannot be applied in-place.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`prevent_destroy`}</inlineCode>{`: When set to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, will cause Terraform to reject with an error any plan that would destroy the infrastructure object associated with the resource, as long as the argument remains present in the configuration.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ignore_changes`}</inlineCode>{`: Accepts a list of attribute names as parameters. This attributes are ignored when applying future configuration updates. This is useful for the (rare) circumstances where a system outside of Terraform changes the value of an attribute and it should not be rolled back by Terraform. `}</li>\n    </ul>\n    <hr></hr>\n    <h3><a name=\"local-only-resources\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#local-only-resources\"\n      }}>{`Local-only Resources`}</a></h3>\n    <p><em parentName=\"p\">{`While most resource types correspond to an infrastructure object type that is managed via a remote network API, there are certain specialized resource types that operate only within Terraform itself, calculating some results and saving those results in the state for future use.`}</em></p>\n    <p><em parentName=\"p\">{`For example, `}<a parentName=\"em\" {...{\n          \"href\": \"https://www.terraform.io/docs/configuration/resources.html#local-only-resources\"\n        }}>{`local-only resource types`}</a>{` exist for generating private keys, issuing self-signed TLS certificates, and even generating random ids. While these resource types often have a more marginal purpose than those managing \"real\" infrastructure objects, they can be useful as glue to help connect together other resources.`}</em></p>\n    <p><em parentName=\"p\">{`The behavior of local-only resources is the same as all other resources, but their result data exists only within the Terraform state. \"Destroying\" such a resource means only to remove it from the state, discarding its data.`}</em></p>\n    <hr></hr>\n    <h3><a name=\"operation-timeouts\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#operation-timeouts\"\n      }}>{`Operation Timeouts`}</a></h3>\n    <p>{`Certain resource types have nested `}<inlineCode parentName=\"p\">{`timeout`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.terraform.io/docs/configuration/resources.html#operation-timeouts\"\n      }}>{`block arguments`}</a>{` available to them. These blocks allow you to customize how long certain operations are allowed to take before being considered to have failed. `}</p>\n    <hr></hr>\n    <h3><a name=\"data-sources\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#data-sources\"\n      }}>{`Data Sources`}</a></h3>\n    <p>{`Data sources allow Terraform to access information that is outside of the configuration file itself. The data is retrieved using a `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` block. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-hcl\"\n      }}>{`data \"aws_ami\" \"example\" {\n  most_recent = true\n\n  owners = [\"self\"]\n  tags = {\n    Name   = \"app-server\"\n    Tested = \"true\"\n  }\n}\n`}</code></pre>\n    <hr></hr>\n    <h3><a name=\"resources\"></a><a parentName=\"h3\" {...{\n        \"href\": \"#resources\"\n      }}>{`Resources`}</a></h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://learn.hashicorp.com/tutorials/terraform/associate-study\"\n        }}>{`Terraform Study Guide`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://learn.hashicorp.com/terraform\"\n        }}>{`Terraform Tutorials`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.terraform.io/docs/index.html\"\n        }}>{`Terraform Documentation`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/hashicorp/terraform\"\n        }}>{`Terraform GitHub`}</a>{`  `}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}