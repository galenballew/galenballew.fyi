{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/digital-gardens","result":{"data":{"post":{"__typename":"MdxPost","slug":"/digital-gardens","title":"Digital Gardens","date":"07/17/2020","tags":[{"name":"knowledge management","slug":"knowledge-management"},{"name":"blogging","slug":"blogging"}],"description":"Thoughts and inspiration about building your digital garden for knowledge management and networked thought.","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Digital Gardens\",\n  \"date\": \"2020-07-17T00:00:00.000Z\",\n  \"description\": \"Thoughts and inspiration about building your digital garden for knowledge management and networked thought.\",\n  \"tags\": [\"knowledge management\", \"blogging\"],\n  \"banner\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I found out about \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://roamresearch.com/\"\n  }), \"Roam Research\"), \" a few weeks back (on Hacker News, I think.) I fell into its rabbit hole for a little bit and immediately recognized that I had been seeking for a better way to express and connect my thoughts. I have been using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://evernote.com/\"\n  }), \"Evernote\"), \" for the longest time. It gets the job done. Just so long as the job is \\\"archive this thought somewhere so that I don't forget it forever\\\". I don't think that Evernote, as a tool, has actually helped to increase the depth, breadth, or richness of my thoughts.  \"), mdx(\"hr\", null), mdx(\"h3\", null, \"Roaming Your Thoughts\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"roam\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"/r\\u014Dm/\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"verb\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Move about or travel aimlessly or unsystematically, especially over a wide area.\")), mdx(\"p\", null, \"The ability to traverse your notes as if they were your second brain requires the notes themselves to provide the pathways and networks to reach other notes. If I am reading my \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TODO\"), \" list and I see that I need to shop for groceries, wouldn't it be nice for the note itself to contain a link to my \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Shopping List\"), \"? And when I do look at my \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Shopping List\"), \" and I see that I need flour and yeast, wouldn't it be nice to have a link to my \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Recipes\"), \" to view the no-knead, cold fermented bread recipe I've been meaning to bake? This is a very simple and practical example - most people won't forget that chain of causation and relationships between the notes and their content. But imagine a network with hundreds or thousands of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Notes\"), \", each with multiple \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[Links]\"), \" pointing to different \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Notes\"), \". By having the notes themselves contain the pathways to other thoughts/notes, we can build a network that makes it easier to explore, visualize, and create relationships between certain ideas. Our brains do this inherintely, but we can augment this ability with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://maggieappleton.com/bidirectionals\"\n  }), \"bi-directional linking.\")), mdx(\"p\", null, \"Here's how bi-directional linking works in the contextual nutshell of note-taking:  \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You are writing a note in Markdown and you make a wiki link to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[my awesome page]]\"), \".  \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If a note for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[my awesome page]]\"), \" already exists, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[my awesome page]]\"), \" will be automagically updated at the bottom with something that says \\\"Pages that link to my awesome page: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[original note]]\"), \"  \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If note for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[my awesome page]]\"), \" does not exist, then it will be created and have same link infoformation applied automagically.  \"))), mdx(\"p\", null, \"And thus, each page contains information about all of the pages that it links \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"to\"), \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"and\"), \" all of the pages that link \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"to it\"), \". By continuing to create notes (nodes) and link them to others (edges) we build a graph that we can traverse and visualize - huzzah! This is basically a note-based version of one of my all-time favorite pieces of software, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.inspiration-at.com/\"\n  }), \"Inspiration 9.\")), mdx(\"h5\", null, \"Bi-Directional Note Applications\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://roamresearch.com/\"\n  }), \"Roam Research\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Super trendy right now, especially in academia\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SaaS\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://obsidian.md/\"\n  }), \"Obsidian\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Same idea, but runs locally and you can plug into git \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/foambubble/foam\"\n  }), \"Foam\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Same-same idea, but does it all in VS Code and git\")))), mdx(\"hr\", null), mdx(\"h3\", null, \"Digital Gardens\"), mdx(\"p\", null, \"My immediate thought with graph-based notes was that I'd like to be able to shove the entire network into my blog. It should be no surprise that there are plenty of brilliant people who are way ahead of me \\uD83D\\uDE04 Not only are there excellent blogs that use the underlying technology, but there is an entire philosophy and subculture behind \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"digital gardening\\\"\"), \".\"), mdx(\"p\", null, \"I stumbled into digital gardening through the backdoor. I started with the technology because it was a natural (if rudimentary) augmentation of how we already think and process thoughts - aside from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Artificial_neural_network\"\n  }), \"neural networks\"), \", I'm not familiar with other examples of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://biomimicry.org/what-is-biomimicry/\"\n  }), \"biomimicry\"), \" in coding/technology. I imagine that the front door to the garden starts with a desire to grow things and produce better ideas. I'll leave it as an exercise for the reader to figure out what it's all about, but just remember that it's Joe Garden; \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=FvP7nZQs-nA\"\n  }), \"it's Joe Dirt. \")), mdx(\"h5\", null, \"What Are You Growing?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://nesslabs.com/mind-garden\"\n  }), \"You and your mind garden\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An essay about digital gardening.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://maggieappleton.com/garden/\"\n  }), \"Maggie Appleton\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A crisp, clean, modern digital garden.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://notes.andymatuschak.org/About_these_notes\"\n  }), \"Andy Matuschak's Working Notes\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"One of the most fun and rewarding UI experiences for rambling through notes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"These notes are Excalibur-tier legend amongst digital gardeners from what I can gather.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I believe that Andy \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://notes.mxstbr.com/About_these_notes\"\n  }), \"let a few people use his framework\"), \" and it has spawned at least \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/aravindballa/gatsby-theme-andy\"\n  }), \"one Gatsby theme\"), \" since then.\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://maximevaillancourt.com/\"\n  }), \"Maxime Vaillancourt\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A blend of traditional blogging and digital gardening - check out the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Notes\"), \" section to see what's growing.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Maxime's site includes a graph visualization. \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Maxime also has a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Side Project\"), \" for a \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/maximevaillancourt/digital-garden-jekyll-template\"\n  }), \"digital garden jekyll template.\"), \"  \")))), mdx(\"hr\", null), mdx(\"h3\", null, \"Agriculture is the Mother of Invention\"), mdx(\"p\", null, \"Here is a fun story: While trying to write this article, I had a full-blown digital gardening experience. What you're about to read is a short story about a few minutes of research that would make a perfect snippet or micro-blog (AKA a \\\"seedling\\\".)\"), mdx(\"hr\", null), mdx(\"p\", null, \"I was looking for a subtitle for the next section of my blog article where I talked about what components are missing from the tech stack for a really comprehensive, smooth blogging experience that would use graph-based notes. In the back of my mind, I thought I remembered some quote about \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"War is the mother of all invention.\\\"\"), \" and a vague recollection of \\\"..and that's where microwaves come from, kids!\\\"\"), mdx(\"p\", null, \"So I went with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\\"Agrilculture is the Mother of Invention.\\\"\"), \" because, ya know, puns. I did a quick Google just to cover my bases and I found out that \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Necessity_is_the_mother_of_invention\"\n  }), \"\\\"Necessity is the mother of invention.\\\"\"), \" But this is where it get's good - Ester Boserup used the phrase as a major argument in her book \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"The Conditions of Agricultural Growth: The Economics of Agrarian Change under Population Pressure.\"), \" So, this just goes to show you that my subtitle for this section is about 9,000 IQ. \"), mdx(\"hr\", null), mdx(\"p\", null, \"I'm a big fan of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.goodreads.com/quotes/7502834-i-shall-pass-this-way-but-once-any-good-that\"\n  }), \"quotes\"), \", so I would probably tag the above snippet with that label and link it to/from this article. It would be so much better if I had actually done that instead of talking about it hypothetically, but that brings me to my next point: there are some tools missing from the toolkit.\"), mdx(\"p\", null, \"The key magic behind graph-based note applications is that they automagically create a new note for you when you type out a link. The note exists and it even contains some text; the backlink to the note that originally linked to it. However, we need a little more than that. If I want my new note to appear as an article of sorts on my blog with minimal effort, I need a little more boilerplate text added than just the title of the note and a backlink. At minimum, we'd need to add the Markdown header (if you're using a Markdown based website.) Here is an example of the Markdown header for this article:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markdown\"\n  }), \"---\\ntitle: 'Digital Gardens'\\ndate: 2020-07-17 00:00:00\\nexcerpt: Can you dig it?\\ncategories: [lifestyle]\\ntags: []\\nfeatured_image: 'images/demo/demo-portrait.jpg'\\n#scroll_image:\\ncomments: true\\nshare: true\\n---\\n\")), mdx(\"p\", null, \"When a new note is generated by creating a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[link]]\"), \", that note should come with come with some additional boilerplate besides the backlink - namely a Markdown header for a static site. Once that's squared away, it would be fantastic to have a lightweight editor that worked on mobile.  \"), mdx(\"p\", null, \"Between these two additions, I think it would be a very fluid experience to seed, water, and tend your digital garden. Some additional workflows could be added to tag, group, and aggregate micro-blogs, but such is the life of a gardener. A solid website UI could make your blog just as useful to you as anyone else. What I mean by that is the end-user experience of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"roaming\"), \" on the blog should be as good or better than in the networked note-taking app itself.  \"), mdx(\"p\", null, \"There's a few things out there that I'm keeping my eye on to pull this idea together:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://forum.obsidian.md/t/publish-to-web-e-g-via-github-pages/2060\"\n  }), \"Obsidian - integration with Github Pages\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://forum.obsidian.md/t/templates-for-new-notes/322\"\n  }), \"Obsidian - notes templates\"), \"  \")), mdx(\"hr\", null), mdx(\"h3\", null, \"Farmer's Market\"), mdx(\"p\", null, \"Let's take this one step further and see if there are any commercial enterprise applications. In my current line of work, I can see an immediate use case for the ability to create a chain of bidirectional links. Here's a concrete example: \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Security Architecture defines requirements for a new service.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Service Requirements]]\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"DevOps team builds creates a set of tests according to the architecture. The wiki and/or README for the tests include a backlink to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Service Requirements]]\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Service Requirements]]\"), \" now contains links to the codebase where the requirements are implemented.\")))), mdx(\"p\", null, \"This chain could extend laterally as well, aggregating different services and/or platforms. The ability to automatically create a summary of related artifacts without having to manage the links manually is certainly something that I personally would love in my working life.  \"), mdx(\"hr\", null), mdx(\"h3\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.buildingasecondbrain.com/\"\n  }), \"Building a Second Brain\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Zettelkasten\"\n  }), \"Zettelkasten\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"I found out about  Roam Research  a few weeks back (on Hacker News, I think.) I fell into its rabbit hole for a little bit and immediately…","timeToRead":5,"banner":null}},"pageContext":{"slug":"/digital-gardens","formatString":"MM/DD/YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}